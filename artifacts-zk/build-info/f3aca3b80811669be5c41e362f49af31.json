{"id":"f3aca3b80811669be5c41e362f49af31","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"lib/solmate/src/tokens/ERC20.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\nabstract contract ERC20 {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                            METADATA STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public immutable decimals;\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC20 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /*//////////////////////////////////////////////////////////////\n                            EIP-2612 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal immutable INITIAL_CHAIN_ID;\n\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\n\n    mapping(address => uint256) public nonces;\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n\n        INITIAL_CHAIN_ID = block.chainid;\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                               ERC20 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        allowance[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n\n        return true;\n    }\n\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        balanceOf[msg.sender] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(msg.sender, to, amount);\n\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\n\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\n\n        balanceOf[from] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        return true;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             EIP-2612 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\");\n\n        // Unchecked because the only math done is incrementing\n        // the owner's nonce which cannot realistically overflow.\n        unchecked {\n            address recoveredAddress = ecrecover(\n                keccak256(\n                    abi.encodePacked(\n                        \"\\x19\\x01\",\n                        DOMAIN_SEPARATOR(),\n                        keccak256(\n                            abi.encode(\n                                keccak256(\n                                    \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n                                ),\n                                owner,\n                                spender,\n                                value,\n                                nonces[owner]++,\n                                deadline\n                            )\n                        )\n                    )\n                ),\n                v,\n                r,\n                s\n            );\n\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\");\n\n            allowance[recoveredAddress][spender] = value;\n        }\n\n        emit Approval(owner, spender, value);\n    }\n\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\n    }\n\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                    keccak256(bytes(name)),\n                    keccak256(\"1\"),\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(address to, uint256 amount) internal virtual {\n        totalSupply += amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(address(0), to, amount);\n    }\n\n    function _burn(address from, uint256 amount) internal virtual {\n        balanceOf[from] -= amount;\n\n        // Cannot underflow because a user's balance\n        // will never be larger than the total supply.\n        unchecked {\n            totalSupply -= amount;\n        }\n\n        emit Transfer(from, address(0), amount);\n    }\n}\n"},"lib/solmate/src/utils/SafeTransferLib.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\nimport {ERC20} from \"../tokens/ERC20.sol\";\n\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\n/// @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\n/// @dev Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller.\nlibrary SafeTransferLib {\n    /*//////////////////////////////////////////////////////////////\n                             ETH OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function safeTransferETH(address to, uint256 amount) internal {\n        bool success;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Transfer the ETH and store if it succeeded or not.\n            success := call(gas(), to, amount, 0, 0, 0, 0)\n        }\n\n        require(success, \"ETH_TRANSFER_FAILED\");\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                            ERC20 OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function safeTransferFrom(\n        ERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        bool success;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata into memory, beginning with the function selector.\n            mstore(freeMemoryPointer, 0x23b872dd00000000000000000000000000000000000000000000000000000000)\n            mstore(add(freeMemoryPointer, 4), from) // Append the \"from\" argument.\n            mstore(add(freeMemoryPointer, 36), to) // Append the \"to\" argument.\n            mstore(add(freeMemoryPointer, 68), amount) // Append the \"amount\" argument.\n\n            success := and(\n                // Set success to whether the call reverted, if not we check it either\n                // returned exactly 1 (can't just be non-zero data), or had no return data.\n                or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\n                // We use 100 because the length of our calldata totals up like so: 4 + 32 * 3.\n                // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                // Counterintuitively, this call must be positioned second to the or() call in the\n                // surrounding and() call or else returndatasize() will be zero during the computation.\n                call(gas(), token, 0, freeMemoryPointer, 100, 0, 32)\n            )\n        }\n\n        require(success, \"TRANSFER_FROM_FAILED\");\n    }\n\n    function safeTransfer(\n        ERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        bool success;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata into memory, beginning with the function selector.\n            mstore(freeMemoryPointer, 0xa9059cbb00000000000000000000000000000000000000000000000000000000)\n            mstore(add(freeMemoryPointer, 4), to) // Append the \"to\" argument.\n            mstore(add(freeMemoryPointer, 36), amount) // Append the \"amount\" argument.\n\n            success := and(\n                // Set success to whether the call reverted, if not we check it either\n                // returned exactly 1 (can't just be non-zero data), or had no return data.\n                or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\n                // We use 68 because the length of our calldata totals up like so: 4 + 32 * 2.\n                // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                // Counterintuitively, this call must be positioned second to the or() call in the\n                // surrounding and() call or else returndatasize() will be zero during the computation.\n                call(gas(), token, 0, freeMemoryPointer, 68, 0, 32)\n            )\n        }\n\n        require(success, \"TRANSFER_FAILED\");\n    }\n\n    function safeApprove(\n        ERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        bool success;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata into memory, beginning with the function selector.\n            mstore(freeMemoryPointer, 0x095ea7b300000000000000000000000000000000000000000000000000000000)\n            mstore(add(freeMemoryPointer, 4), to) // Append the \"to\" argument.\n            mstore(add(freeMemoryPointer, 36), amount) // Append the \"amount\" argument.\n\n            success := and(\n                // Set success to whether the call reverted, if not we check it either\n                // returned exactly 1 (can't just be non-zero data), or had no return data.\n                or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\n                // We use 68 because the length of our calldata totals up like so: 4 + 32 * 2.\n                // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                // Counterintuitively, this call must be positioned second to the or() call in the\n                // surrounding and() call or else returndatasize() will be zero during the computation.\n                call(gas(), token, 0, freeMemoryPointer, 68, 0, 32)\n            )\n        }\n\n        require(success, \"APPROVE_FAILED\");\n    }\n}\n"},"src/AllowanceTransfer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {ERC20} from \"../lib/solmate/src/tokens/ERC20.sol\";\nimport {SafeTransferLib} from \"../lib/solmate/src/utils/SafeTransferLib.sol\";\nimport {PermitHash} from \"./libraries/PermitHash.sol\";\nimport {SignatureVerification} from \"./libraries/SignatureVerification.sol\";\nimport {EIP712} from \"./EIP712.sol\";\nimport {IAllowanceTransfer} from \"../src/interfaces/IAllowanceTransfer.sol\";\nimport {SignatureExpired, InvalidNonce} from \"./PermitErrors.sol\";\nimport {Allowance} from \"./libraries/Allowance.sol\";\n\ncontract AllowanceTransfer is IAllowanceTransfer, EIP712 {\n    using SignatureVerification for bytes;\n    using SafeTransferLib for ERC20;\n    using PermitHash for PermitSingle;\n    using PermitHash for PermitBatch;\n    using Allowance for PackedAllowance;\n\n    /// @notice Maps users to tokens to spender addresses and information about the approval on the token\n    /// @dev Indexed in the order of token owner address, token address, spender address\n    /// @dev The stored word saves the allowed amount, expiration on the allowance, and nonce\n    mapping(address => mapping(address => mapping(address => PackedAllowance))) public allowance;\n\n    /// @inheritdoc IAllowanceTransfer\n    function approve(address token, address spender, uint160 amount, uint48 expiration) external {\n        PackedAllowance storage allowed = allowance[msg.sender][token][spender];\n        allowed.updateAmountAndExpiration(amount, expiration);\n        emit Approval(msg.sender, token, spender, amount, expiration);\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external {\n        if (block.timestamp > permitSingle.sigDeadline) revert SignatureExpired(permitSingle.sigDeadline);\n\n        // Verify the signer address from the signature.\n        signature.verify(_hashTypedData(permitSingle.hash()), owner);\n\n        _updateApproval(permitSingle.details, owner, permitSingle.spender);\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function permit(address owner, PermitBatch memory permitBatch, bytes calldata signature) external {\n        if (block.timestamp > permitBatch.sigDeadline) revert SignatureExpired(permitBatch.sigDeadline);\n\n        // Verify the signer address from the signature.\n        signature.verify(_hashTypedData(permitBatch.hash()), owner);\n\n        address spender = permitBatch.spender;\n        unchecked {\n            uint256 length = permitBatch.details.length;\n            for (uint256 i = 0; i < length; ++i) {\n                _updateApproval(permitBatch.details[i], owner, spender);\n            }\n        }\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function transferFrom(address from, address to, uint160 amount, address token) external {\n        _transfer(from, to, amount, token);\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function transferFrom(AllowanceTransferDetails[] calldata transferDetails) external {\n        unchecked {\n            uint256 length = transferDetails.length;\n            for (uint256 i = 0; i < length; ++i) {\n                AllowanceTransferDetails memory transferDetail = transferDetails[i];\n                _transfer(transferDetail.from, transferDetail.to, transferDetail.amount, transferDetail.token);\n            }\n        }\n    }\n\n    /// @notice Internal function for transferring tokens using stored allowances\n    /// @dev Will fail if the allowed timeframe has passed\n    function _transfer(address from, address to, uint160 amount, address token) private {\n        PackedAllowance storage allowed = allowance[from][token][msg.sender];\n\n        if (block.timestamp > allowed.expiration) revert AllowanceExpired(allowed.expiration);\n\n        uint256 maxAmount = allowed.amount;\n        if (maxAmount != type(uint160).max) {\n            if (amount > maxAmount) {\n                revert InsufficientAllowance(maxAmount);\n            } else {\n                unchecked {\n                    allowed.amount = uint160(maxAmount) - amount;\n                }\n            }\n        }\n\n        // Transfer the tokens from the from address to the recipient.\n        ERC20(token).safeTransferFrom(from, to, amount);\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function lockdown(TokenSpenderPair[] calldata approvals) external {\n        address owner = msg.sender;\n        // Revoke allowances for each pair of spenders and tokens.\n        unchecked {\n            uint256 length = approvals.length;\n            for (uint256 i = 0; i < length; ++i) {\n                address token = approvals[i].token;\n                address spender = approvals[i].spender;\n\n                allowance[owner][token][spender].amount = 0;\n                emit Lockdown(owner, token, spender);\n            }\n        }\n    }\n\n    /// @inheritdoc IAllowanceTransfer\n    function invalidateNonces(address token, address spender, uint48 newNonce) external {\n        uint48 oldNonce = allowance[msg.sender][token][spender].nonce;\n\n        if (newNonce <= oldNonce) revert InvalidNonce();\n\n        // Limit the amount of nonces that can be invalidated in one transaction.\n        unchecked {\n            uint48 delta = newNonce - oldNonce;\n            if (delta > type(uint16).max) revert ExcessiveInvalidation();\n        }\n\n        allowance[msg.sender][token][spender].nonce = newNonce;\n        emit NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce);\n    }\n\n    /// @notice Sets the new values for amount, expiration, and nonce.\n    /// @dev Will check that the signed nonce is equal to the current nonce and then incrememnt the nonce value by 1.\n    /// @dev Emits a Permit event.\n    function _updateApproval(PermitDetails memory details, address owner, address spender) private {\n        uint48 nonce = details.nonce;\n        address token = details.token;\n        uint160 amount = details.amount;\n        uint48 expiration = details.expiration;\n        PackedAllowance storage allowed = allowance[owner][token][spender];\n\n        if (allowed.nonce != nonce) revert InvalidNonce();\n\n        allowed.updateAll(amount, expiration, nonce);\n        emit Permit(owner, token, spender, amount, expiration, nonce);\n    }\n}\n"},"src/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\n/// @notice EIP712 helpers for permit2\n/// @dev Maintains cross-chain replay protection in the event of a fork\n/// @dev Reference: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol\ncontract EIP712 {\n    // Cache the domain separator as an immutable value, but also store the chain id that it\n    // corresponds to, in order to invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n\n    bytes32 private constant _HASHED_NAME = keccak256(\"Permit2\");\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    constructor() {\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME);\n    }\n\n    /// @notice Returns the domain separator for the current chain.\n    /// @dev Uses cached version if chainid and address are unchanged from construction.\n    function DOMAIN_SEPARATOR() public view returns (bytes32) {\n        return block.chainid == _CACHED_CHAIN_ID\n            ? _CACHED_DOMAIN_SEPARATOR\n            : _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME);\n    }\n\n    /// @notice Builds a domain separator using the current chainId and contract address.\n    function _buildDomainSeparator(bytes32 typeHash, bytes32 nameHash) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)));\n    }\n\n    /// @notice Creates an EIP-712 typed data hash\n    function _hashTypedData(bytes32 dataHash) internal view returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR(), dataHash));\n    }\n}\n"},"src/interfaces/IAllowanceTransfer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n/// @title AllowanceTransfer\n/// @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n/// @dev Requires user's token approval on the Permit2 contract\ninterface IAllowanceTransfer {\n    /// @notice Thrown when an allowance on a token has expired.\n    /// @param deadline The timestamp at which the allowed amount is no longer valid\n    error AllowanceExpired(uint256 deadline);\n\n    /// @notice Thrown when an allowance on a token has been depleted.\n    /// @param amount The maximum amount allowed\n    error InsufficientAllowance(uint256 amount);\n\n    /// @notice Thrown when too many nonces are invalidated.\n    error ExcessiveInvalidation();\n\n    /// @notice Emits an event when the owner successfully invalidates an ordered nonce.\n    event NonceInvalidation(\n        address indexed owner, address indexed token, address indexed spender, uint48 newNonce, uint48 oldNonce\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions on a token for the spender.\n    event Approval(\n        address indexed owner, address indexed token, address indexed spender, uint160 amount, uint48 expiration\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\n    event Permit(\n        address indexed owner,\n        address indexed token,\n        address indexed spender,\n        uint160 amount,\n        uint48 expiration,\n        uint48 nonce\n    );\n\n    /// @notice Emits an event when the owner sets the allowance back to 0 with the lockdown function.\n    event Lockdown(address indexed owner, address token, address spender);\n\n    /// @notice The permit data for a token\n    struct PermitDetails {\n        // ERC20 token address\n        address token;\n        // the maximum amount allowed to spend\n        uint160 amount;\n        // timestamp at which a spender's token allowances become invalid\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice The permit message signed for a single token allownce\n    struct PermitSingle {\n        // the permit data for a single token alownce\n        PermitDetails details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The permit message signed for multiple token allowances\n    struct PermitBatch {\n        // the permit data for multiple token allowances\n        PermitDetails[] details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The saved permissions\n    /// @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    struct PackedAllowance {\n        // amount allowed\n        uint160 amount;\n        // permission expiry\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice A token spender pair.\n    struct TokenSpenderPair {\n        // the token the spender is approved\n        address token;\n        // the spender address\n        address spender;\n    }\n\n    /// @notice Details for a token transfer.\n    struct AllowanceTransferDetails {\n        // the owner of the token\n        address from;\n        // the recipient of the token\n        address to;\n        // the amount of the token\n        uint160 amount;\n        // the token to be transferred\n        address token;\n    }\n\n    /// @notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n    /// @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n    /// @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\n    function allowance(address, address, address) external view returns (uint160, uint48, uint48);\n\n    /// @notice Approves the spender to use up to amount of the specified token up until the expiration\n    /// @param token The token to approve\n    /// @param spender The spender address to approve\n    /// @param amount The approved amount of the token\n    /// @param expiration The timestamp at which the approval is no longer valid\n    /// @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    function approve(address token, address spender, uint160 amount, uint48 expiration) external;\n\n    /// @notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitSingle Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\n\n    /// @notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitBatch Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitBatch memory permitBatch, bytes calldata signature) external;\n\n    /// @notice Transfer approved tokens from one address to another\n    /// @param from The address to transfer from\n    /// @param to The address of the recipient\n    /// @param amount The amount of the token to transfer\n    /// @param token The token address to transfer\n    /// @dev Requires the from address to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(address from, address to, uint160 amount, address token) external;\n\n    /// @notice Transfer approved tokens in a batch\n    /// @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n    /// @dev Requires the from addresses to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(AllowanceTransferDetails[] calldata transferDetails) external;\n\n    /// @notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n    /// by batch revoking approvals\n    /// @param approvals Array of approvals to revoke.\n    function lockdown(TokenSpenderPair[] calldata approvals) external;\n\n    /// @notice Invalidate nonces for a given (token, spender) pair\n    /// @param token The token to invalidate nonces for\n    /// @param spender The spender to invalidate nonces for\n    /// @param newNonce The new nonce to set. Invalidates all nonces less than it.\n    /// @dev Can't invalidate more than 2**16 nonces per transaction.\n    function invalidateNonces(address token, address spender, uint48 newNonce) external;\n}\n"},"src/interfaces/IDAIPermit.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface IDAIPermit {\n    /// @param holder The address of the token owner.\n    /// @param spender The address of the token spender.\n    /// @param nonce The owner's nonce, increases at each call to permit.\n    /// @param expiry The timestamp at which the permit is no longer valid.\n    /// @param allowed Boolean that sets approval amount, true for type(uint256).max and false for 0.\n    /// @param v Must produce valid secp256k1 signature from the owner along with r and s.\n    /// @param r Must produce valid secp256k1 signature from the owner along with v and s.\n    /// @param s Must produce valid secp256k1 signature from the owner along with r and v.\n    function permit(\n        address holder,\n        address spender,\n        uint256 nonce,\n        uint256 expiry,\n        bool allowed,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"src/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface IERC1271 {\n    /// @dev Should return whether the signature provided is valid for the provided data\n    /// @param hash      Hash of the data to be signed\n    /// @param signature Signature byte array associated with _data\n    /// @return magicValue The bytes4 magic value 0x1626ba7e\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"src/interfaces/ISignatureTransfer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n/// @title SignatureTransfer\n/// @notice Handles ERC20 token transfers through signature based actions\n/// @dev Requires user's token approval on the Permit2 contract\ninterface ISignatureTransfer {\n    /// @notice Thrown when the requested amount for a transfer is larger than the permissioned amount\n    /// @param maxAmount The maximum amount a spender can request to transfer\n    error InvalidAmount(uint256 maxAmount);\n\n    /// @notice Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\n    /// @dev If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\n    error LengthMismatch();\n\n    /// @notice Emits an event when the owner successfully invalidates an unordered nonce.\n    event UnorderedNonceInvalidation(address indexed owner, uint256 word, uint256 mask);\n\n    /// @notice The token and amount details for a transfer signed in the permit transfer signature\n    struct TokenPermissions {\n        // ERC20 token address\n        address token;\n        // the maximum amount that can be spent\n        uint256 amount;\n    }\n\n    /// @notice The signed permit message for a single token transfer\n    struct PermitTransferFrom {\n        TokenPermissions permitted;\n        // a unique value for every token owner's signature to prevent signature replays\n        uint256 nonce;\n        // deadline on the permit signature\n        uint256 deadline;\n    }\n\n    /// @notice Specifies the recipient address and amount for batched transfers.\n    /// @dev Recipients and amounts correspond to the index of the signed token permissions array.\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount.\n    struct SignatureTransferDetails {\n        // recipient address\n        address to;\n        // spender requested amount\n        uint256 requestedAmount;\n    }\n\n    /// @notice Used to reconstruct the signed permit message for multiple token transfers\n    /// @dev Do not need to pass in spender address as it is required that it is msg.sender\n    /// @dev Note that a user still signs over a spender address\n    struct PermitBatchTransferFrom {\n        // the tokens and corresponding amounts permitted for a transfer\n        TokenPermissions[] permitted;\n        // a unique value for every token owner's signature to prevent signature replays\n        uint256 nonce;\n        // deadline on the permit signature\n        uint256 deadline;\n    }\n\n    /// @notice A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\n    /// @dev Uses unordered nonces so that permit messages do not need to be spent in a certain order\n    /// @dev The mapping is indexed first by the token owner, then by an index specified in the nonce\n    /// @dev It returns a uint256 bitmap\n    /// @dev The index, or wordPosition is capped at type(uint248).max\n    function nonceBitmap(address, uint256) external view returns (uint256);\n\n    /// @notice Transfers a token using a signed permit message\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails The spender's requested transfer details for the permitted token\n    /// @param signature The signature to verify\n    function permitTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers a token using a signed permit message\n    /// @notice Includes extra data provided by the caller to verify signature over\n    /// @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails The spender's requested transfer details for the permitted token\n    /// @param witness Extra data to include when checking the user signature\n    /// @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n    /// @param signature The signature to verify\n    function permitWitnessTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers multiple tokens using a signed permit message\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails Specifies the recipient and requested amount for the token transfer\n    /// @param signature The signature to verify\n    function permitTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers multiple tokens using a signed permit message\n    /// @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n    /// @notice Includes extra data provided by the caller to verify signature over\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails Specifies the recipient and requested amount for the token transfer\n    /// @param witness Extra data to include when checking the user signature\n    /// @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n    /// @param signature The signature to verify\n    function permitWitnessTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Invalidates the bits specified in mask for the bitmap at the word position\n    /// @dev The wordPos is maxed at type(uint248).max\n    /// @param wordPos A number to index the nonceBitmap at\n    /// @param mask A bitmap masked against msg.sender's current bitmap at the word position\n    function invalidateUnorderedNonces(uint256 wordPos, uint256 mask) external;\n}\n"},"src/libraries/Allowance.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport {IAllowanceTransfer} from \"../interfaces/IAllowanceTransfer.sol\";\n\nlibrary Allowance {\n    // note if the expiration passed is 0, then it the approval set to the block.timestamp\n    uint256 private constant BLOCK_TIMESTAMP_EXPIRATION = 0;\n\n    /// @notice Sets the allowed amount, expiry, and nonce of the spender's permissions on owner's token.\n    /// @dev Nonce is incremented.\n    /// @dev If the inputted expiration is 0, the stored expiration is set to block.timestamp\n    function updateAll(\n        IAllowanceTransfer.PackedAllowance storage allowed,\n        uint160 amount,\n        uint48 expiration,\n        uint48 nonce\n    ) internal {\n        uint48 storedNonce;\n        unchecked {\n            storedNonce = nonce + 1;\n        }\n\n        uint48 storedExpiration = expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration;\n\n        uint256 word = pack(amount, storedExpiration, storedNonce);\n        assembly {\n            sstore(allowed.slot, word)\n        }\n    }\n\n    /// @notice Sets the allowed amount and expiry of the spender's permissions on owner's token.\n    /// @dev Nonce does not need to be incremented.\n    function updateAmountAndExpiration(\n        IAllowanceTransfer.PackedAllowance storage allowed,\n        uint160 amount,\n        uint48 expiration\n    ) internal {\n        // If the inputted expiration is 0, the allowance only lasts the duration of the block.\n        allowed.expiration = expiration == 0 ? uint48(block.timestamp) : expiration;\n        allowed.amount = amount;\n    }\n\n    /// @notice Computes the packed slot of the amount, expiration, and nonce that make up PackedAllowance\n    function pack(uint160 amount, uint48 expiration, uint48 nonce) internal pure returns (uint256 word) {\n        word = (uint256(nonce) << 208) | uint256(expiration) << 160 | amount;\n    }\n}\n"},"src/libraries/Permit2Lib.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport {ERC20} from \"../../lib/solmate/src/tokens/ERC20.sol\";\n\nimport {Permit2} from \"../Permit2.sol\";\nimport {IDAIPermit} from \"../interfaces/IDAIPermit.sol\";\nimport {IAllowanceTransfer} from \"../interfaces/IAllowanceTransfer.sol\";\nimport {SafeCast160} from \"./SafeCast160.sol\";\n\n/// @title Permit2Lib\n/// @notice Enables efficient transfers and EIP-2612/DAI\n/// permits for any token by falling back to Permit2.\nlibrary Permit2Lib {\n    using SafeCast160 for uint256;\n    /*//////////////////////////////////////////////////////////////\n                                CONSTANTS\n    //////////////////////////////////////////////////////////////*/\n\n    /// @dev The unique EIP-712 domain domain separator for the DAI token contract.\n    bytes32 internal constant DAI_DOMAIN_SEPARATOR = 0xdbb8cf42e1ecb028be3f3dbc922e1d878b963f411dc388ced501601c60f7c6f7;\n\n    /// @dev The address of the Permit2 contract the library will use.\n    Permit2 internal constant PERMIT2 = Permit2(address(0x000000000022D473030F116dDEE9F6B43aC78BA3));\n\n    /// @notice Transfer a given amount of tokens from one user to another.\n    /// @param token The token to transfer.\n    /// @param from The user to transfer from.\n    /// @param to The user to transfer to.\n    /// @param amount The amount to transfer.\n    function transferFrom2(ERC20 token, address from, address to, uint256 amount) internal {\n        // Generate calldata for a standard transferFrom call.\n        bytes memory inputData = abi.encodeCall(ERC20.transferFrom, (from, to, amount));\n\n        bool success; // Call the token contract as normal, capturing whether it succeeded.\n        assembly {\n            success :=\n                and(\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0), 1), iszero(returndatasize())),\n                    // Counterintuitively, this call() must be positioned after the or() in the\n                    // surrounding and() because and() evaluates its arguments from right to left.\n                    // We use 0 and 32 to copy up to 32 bytes of return data into the first slot of scratch space.\n                    call(gas(), token, 0, add(inputData, 32), mload(inputData), 0, 32)\n                )\n        }\n\n        // We'll fall back to using Permit2 if calling transferFrom on the token directly reverted.\n        if (!success) PERMIT2.transferFrom(from, to, amount.toUint160(), address(token));\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                              PERMIT LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    /// @notice Permit a user to spend a given amount of\n    /// another user's tokens via the owner's EIP-712 signature.\n    /// @param token The token to permit spending.\n    /// @param owner The user to permit spending from.\n    /// @param spender The user to permit spending to.\n    /// @param amount The amount to permit spending.\n    /// @param deadline  The timestamp after which the signature is no longer valid.\n    /// @param v Must produce valid secp256k1 signature from the owner along with r and s.\n    /// @param r Must produce valid secp256k1 signature from the owner along with v and s.\n    /// @param s Must produce valid secp256k1 signature from the owner along with r and v.\n    function permit2(\n        ERC20 token,\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        // Generate calldata for a call to DOMAIN_SEPARATOR on the token.\n        bytes memory inputData = abi.encodeWithSelector(ERC20.DOMAIN_SEPARATOR.selector);\n\n        bool success; // Call the token contract as normal, capturing whether it succeeded.\n        bytes32 domainSeparator; // If the call succeeded, we'll capture the return value here.\n        assembly {\n            success :=\n                and(\n                    // Should resolve false if its not 32 bytes or its first word is 0.\n                    and(iszero(iszero(mload(0))), eq(returndatasize(), 32)),\n                    // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\n                    // Counterintuitively, this call must be positioned second to the and() call in the\n                    // surrounding and() call or else returndatasize() will be zero during the computation.\n                    staticcall(gas(), token, add(inputData, 32), mload(inputData), 0, 32)\n                )\n\n            domainSeparator := mload(0) // Copy the return value into the domainSeparator variable.\n        }\n\n        // If the call to DOMAIN_SEPARATOR succeeded, try using permit on the token.\n        if (success) {\n            // We'll use DAI's special permit if it's DOMAIN_SEPARATOR matches,\n            // otherwise we'll just encode a call to the standard permit function.\n            inputData = domainSeparator == DAI_DOMAIN_SEPARATOR\n                ? abi.encodeCall(IDAIPermit.permit, (owner, spender, token.nonces(owner), deadline, true, v, r, s))\n                : abi.encodeCall(ERC20.permit, (owner, spender, amount, deadline, v, r, s));\n\n            assembly {\n                success := call(gas(), token, 0, add(inputData, 32), mload(inputData), 0, 0)\n            }\n        }\n\n        if (!success) {\n            // If the initial DOMAIN_SEPARATOR call on the token failed or a\n            // subsequent call to permit failed, fall back to using Permit2.\n\n            (,, uint48 nonce) = PERMIT2.allowance(owner, address(token), spender);\n\n            PERMIT2.permit(\n                owner,\n                IAllowanceTransfer.PermitSingle({\n                    details: IAllowanceTransfer.PermitDetails({\n                        token: address(token),\n                        amount: amount.toUint160(),\n                        // Use an unlimited expiration because it most\n                        // closely mimics how a standard approval works.\n                        expiration: type(uint48).max,\n                        nonce: nonce\n                    }),\n                    spender: spender,\n                    sigDeadline: deadline\n                }),\n                bytes.concat(r, s, bytes1(v))\n            );\n        }\n    }\n}\n"},"src/libraries/PermitHash.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport {IAllowanceTransfer} from \"../interfaces/IAllowanceTransfer.sol\";\nimport {ISignatureTransfer} from \"../interfaces/ISignatureTransfer.sol\";\n\nlibrary PermitHash {\n    bytes32 public constant _PERMIT_DETAILS_TYPEHASH =\n        keccak256(\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\");\n\n    bytes32 public constant _PERMIT_SINGLE_TYPEHASH = keccak256(\n        \"PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\"\n    );\n\n    bytes32 public constant _PERMIT_BATCH_TYPEHASH = keccak256(\n        \"PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\"\n    );\n\n    bytes32 public constant _TOKEN_PERMISSIONS_TYPEHASH = keccak256(\"TokenPermissions(address token,uint256 amount)\");\n\n    bytes32 public constant _PERMIT_TRANSFER_FROM_TYPEHASH = keccak256(\n        \"PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\"\n    );\n\n    bytes32 public constant _PERMIT_BATCH_TRANSFER_FROM_TYPEHASH = keccak256(\n        \"PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\"\n    );\n\n    string public constant _TOKEN_PERMISSIONS_TYPESTRING = \"TokenPermissions(address token,uint256 amount)\";\n\n    string public constant _PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB =\n        \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\";\n\n    string public constant _PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB =\n        \"PermitBatchWitnessTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline,\";\n\n    function hash(IAllowanceTransfer.PermitSingle memory permitSingle) internal pure returns (bytes32) {\n        bytes32 permitHash = _hashPermitDetails(permitSingle.details);\n        return\n            keccak256(abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline));\n    }\n\n    function hash(IAllowanceTransfer.PermitBatch memory permitBatch) internal pure returns (bytes32) {\n        uint256 numPermits = permitBatch.details.length;\n        bytes32[] memory permitHashes = new bytes32[](numPermits);\n        for (uint256 i = 0; i < numPermits; ++i) {\n            permitHashes[i] = _hashPermitDetails(permitBatch.details[i]);\n        }\n        return keccak256(\n            abi.encode(\n                _PERMIT_BATCH_TYPEHASH,\n                keccak256(abi.encodePacked(permitHashes)),\n                permitBatch.spender,\n                permitBatch.sigDeadline\n            )\n        );\n    }\n\n    function hash(ISignatureTransfer.PermitTransferFrom memory permit) internal view returns (bytes32) {\n        bytes32 tokenPermissionsHash = _hashTokenPermissions(permit.permitted);\n        return keccak256(\n            abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\n        );\n    }\n\n    function hash(ISignatureTransfer.PermitBatchTransferFrom memory permit) internal view returns (bytes32) {\n        uint256 numPermitted = permit.permitted.length;\n        bytes32[] memory tokenPermissionHashes = new bytes32[](numPermitted);\n\n        for (uint256 i = 0; i < numPermitted; ++i) {\n            tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]);\n        }\n\n        return keccak256(\n            abi.encode(\n                _PERMIT_BATCH_TRANSFER_FROM_TYPEHASH,\n                keccak256(abi.encodePacked(tokenPermissionHashes)),\n                msg.sender,\n                permit.nonce,\n                permit.deadline\n            )\n        );\n    }\n\n    function hashWithWitness(\n        ISignatureTransfer.PermitTransferFrom memory permit,\n        bytes32 witness,\n        string calldata witnessTypeString\n    ) internal view returns (bytes32) {\n        bytes32 typeHash = keccak256(abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString));\n\n        bytes32 tokenPermissionsHash = _hashTokenPermissions(permit.permitted);\n        return keccak256(abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness));\n    }\n\n    function hashWithWitness(\n        ISignatureTransfer.PermitBatchTransferFrom memory permit,\n        bytes32 witness,\n        string calldata witnessTypeString\n    ) internal view returns (bytes32) {\n        bytes32 typeHash =\n            keccak256(abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString));\n\n        uint256 numPermitted = permit.permitted.length;\n        bytes32[] memory tokenPermissionHashes = new bytes32[](numPermitted);\n\n        for (uint256 i = 0; i < numPermitted; ++i) {\n            tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i]);\n        }\n\n        return keccak256(\n            abi.encode(\n                typeHash,\n                keccak256(abi.encodePacked(tokenPermissionHashes)),\n                msg.sender,\n                permit.nonce,\n                permit.deadline,\n                witness\n            )\n        );\n    }\n\n    function _hashPermitDetails(IAllowanceTransfer.PermitDetails memory details) private pure returns (bytes32) {\n        return keccak256(abi.encode(_PERMIT_DETAILS_TYPEHASH, details));\n    }\n\n    function _hashTokenPermissions(ISignatureTransfer.TokenPermissions memory permitted)\n        private\n        pure\n        returns (bytes32)\n    {\n        return keccak256(abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted));\n    }\n}\n"},"src/libraries/SafeCast160.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nlibrary SafeCast160 {\n    /// @notice Thrown when a valude greater than type(uint160).max is cast to uint160\n    error UnsafeCast();\n\n    /// @notice Safely casts uint256 to uint160\n    /// @param value The uint256 to be cast\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) revert UnsafeCast();\n        return uint160(value);\n    }\n}\n"},"src/libraries/SignatureVerification.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport {IERC1271} from \"../interfaces/IERC1271.sol\";\n\nlibrary SignatureVerification {\n    /// @notice Thrown when the passed in signature is not a valid length\n    error InvalidSignatureLength();\n\n    /// @notice Thrown when the recovered signer is equal to the zero address\n    error InvalidSignature();\n\n    /// @notice Thrown when the recovered signer does not equal the claimedSigner\n    error InvalidSigner();\n\n    /// @notice Thrown when the recovered contract signature is incorrect\n    error InvalidContractSignature();\n\n    bytes32 constant UPPER_BIT_MASK = (0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n\n    function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        if (claimedSigner.code.length == 0) {\n            if (signature.length == 65) {\n                (r, s) = abi.decode(signature, (bytes32, bytes32));\n                v = uint8(signature[64]);\n            } else if (signature.length == 64) {\n                // EIP-2098\n                bytes32 vs;\n                (r, vs) = abi.decode(signature, (bytes32, bytes32));\n                s = vs & UPPER_BIT_MASK;\n                v = uint8(uint256(vs >> 255)) + 27;\n            } else {\n                revert InvalidSignatureLength();\n            }\n            address signer = ecrecover(hash, v, r, s);\n            if (signer == address(0)) revert InvalidSignature();\n            if (signer != claimedSigner) revert InvalidSigner();\n        } else {\n            bytes4 magicValue = IERC1271(claimedSigner).isValidSignature(hash, signature);\n            if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature();\n        }\n    }\n}\n"},"src/Permit2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {SignatureTransfer} from \"./SignatureTransfer.sol\";\nimport {AllowanceTransfer} from \"./AllowanceTransfer.sol\";\n\n/// @notice Permit2 handles signature-based transfers in SignatureTransfer and allowance-based transfers in AllowanceTransfer.\n/// @dev Users must approve Permit2 before calling any of the transfer functions.\ncontract Permit2 is SignatureTransfer, AllowanceTransfer {\n// Permit2 unifies the two contracts so users have maximal flexibility with their approval.\n}\n"},"src/PermitErrors.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\n/// @notice Shared errors between signature based transfers and allowance based transfers.\n\n/// @notice Thrown when validating an inputted signature that is stale\n/// @param signatureDeadline The timestamp at which a signature is no longer valid\nerror SignatureExpired(uint256 signatureDeadline);\n\n/// @notice Thrown when validating that the inputted nonce has not been used\nerror InvalidNonce();\n"},"src/SignatureTransfer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport {ISignatureTransfer} from \"./interfaces/ISignatureTransfer.sol\";\nimport {SignatureExpired, InvalidNonce} from \"./PermitErrors.sol\";\nimport {ERC20} from \"../lib/solmate/src/tokens/ERC20.sol\";\nimport {SafeTransferLib} from \"../lib/solmate/src/utils/SafeTransferLib.sol\";\nimport {SignatureVerification} from \"./libraries/SignatureVerification.sol\";\nimport {PermitHash} from \"./libraries/PermitHash.sol\";\nimport {EIP712} from \"./EIP712.sol\";\n\ncontract SignatureTransfer is ISignatureTransfer, EIP712 {\n    using SignatureVerification for bytes;\n    using SafeTransferLib for ERC20;\n    using PermitHash for PermitTransferFrom;\n    using PermitHash for PermitBatchTransferFrom;\n\n    /// @inheritdoc ISignatureTransfer\n    mapping(address => mapping(uint256 => uint256)) public nonceBitmap;\n\n    /// @inheritdoc ISignatureTransfer\n    function permitTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external {\n        _permitTransferFrom(permit, transferDetails, owner, permit.hash(), signature);\n    }\n\n    /// @inheritdoc ISignatureTransfer\n    function permitWitnessTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external {\n        _permitTransferFrom(\n            permit, transferDetails, owner, permit.hashWithWitness(witness, witnessTypeString), signature\n        );\n    }\n\n    /// @notice Transfers a token using a signed permit message.\n    /// @dev If to is the zero address, the tokens are sent to the spender.\n    /// @param permit The permit data signed over by the owner\n    /// @param dataHash The EIP-712 hash of permit data to include when checking signature\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails The spender's requested transfer details for the permitted token\n    /// @param signature The signature to verify\n    function _permitTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes32 dataHash,\n        bytes calldata signature\n    ) private {\n        uint256 requestedAmount = transferDetails.requestedAmount;\n\n        if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline);\n        if (requestedAmount > permit.permitted.amount) revert InvalidAmount(permit.permitted.amount);\n\n        _useUnorderedNonce(owner, permit.nonce);\n\n        signature.verify(_hashTypedData(dataHash), owner);\n\n        ERC20(permit.permitted.token).safeTransferFrom(owner, transferDetails.to, requestedAmount);\n    }\n\n    /// @inheritdoc ISignatureTransfer\n    function permitTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external {\n        _permitTransferFrom(permit, transferDetails, owner, permit.hash(), signature);\n    }\n\n    /// @inheritdoc ISignatureTransfer\n    function permitWitnessTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external {\n        _permitTransferFrom(\n            permit, transferDetails, owner, permit.hashWithWitness(witness, witnessTypeString), signature\n        );\n    }\n\n    /// @notice Transfers tokens using a signed permit messages\n    /// @dev If to is the zero address, the tokens are sent to the spender\n    /// @param permit The permit data signed over by the owner\n    /// @param dataHash The EIP-712 hash of permit data to include when checking signature\n    /// @param owner The owner of the tokens to transfer\n    /// @param signature The signature to verify\n    function _permitTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes32 dataHash,\n        bytes calldata signature\n    ) private {\n        uint256 numPermitted = permit.permitted.length;\n\n        if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline);\n        if (numPermitted != transferDetails.length) revert LengthMismatch();\n\n        _useUnorderedNonce(owner, permit.nonce);\n        signature.verify(_hashTypedData(dataHash), owner);\n\n        unchecked {\n            for (uint256 i = 0; i < numPermitted; ++i) {\n                TokenPermissions memory permitted = permit.permitted[i];\n                uint256 requestedAmount = transferDetails[i].requestedAmount;\n\n                if (requestedAmount > permitted.amount) revert InvalidAmount(permitted.amount);\n\n                if (requestedAmount != 0) {\n                    // allow spender to specify which of the permitted tokens should be transferred\n                    ERC20(permitted.token).safeTransferFrom(owner, transferDetails[i].to, requestedAmount);\n                }\n            }\n        }\n    }\n\n    /// @inheritdoc ISignatureTransfer\n    function invalidateUnorderedNonces(uint256 wordPos, uint256 mask) external {\n        nonceBitmap[msg.sender][wordPos] |= mask;\n\n        emit UnorderedNonceInvalidation(msg.sender, wordPos, mask);\n    }\n\n    /// @notice Returns the index of the bitmap and the bit position within the bitmap. Used for unordered nonces\n    /// @param nonce The nonce to get the associated word and bit positions\n    /// @return wordPos The word position or index into the nonceBitmap\n    /// @return bitPos The bit position\n    /// @dev The first 248 bits of the nonce value is the index of the desired bitmap\n    /// @dev The last 8 bits of the nonce value is the position of the bit in the bitmap\n    function bitmapPositions(uint256 nonce) private pure returns (uint256 wordPos, uint256 bitPos) {\n        wordPos = uint248(nonce >> 8);\n        bitPos = uint8(nonce);\n    }\n\n    /// @notice Checks whether a nonce is taken and sets the bit at the bit position in the bitmap at the word position\n    /// @param from The address to use the nonce at\n    /// @param nonce The nonce to spend\n    function _useUnorderedNonce(address from, uint256 nonce) internal {\n        (uint256 wordPos, uint256 bitPos) = bitmapPositions(nonce);\n        uint256 bit = 1 << bitPos;\n        uint256 flipped = nonceBitmap[from][wordPos] ^= bit;\n\n        if (flipped & bit == 0) revert InvalidNonce();\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"metadata":{"bytecodeHash":"none"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> lib/solmate/src/tokens/ERC20.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"0","start":4057,"end":4072},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> lib/solmate/src/tokens/ERC20.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"0","start":4292,"end":5097},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> src/AllowanceTransfer.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"2","start":1724,"end":1739},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> src/AllowanceTransfer.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"2","start":2186,"end":2201},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> src/AllowanceTransfer.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"2","start":3673,"end":3688},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> src/SignatureTransfer.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"6","start":2474,"end":2489},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> src/SignatureTransfer.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"6","start":4407,"end":4422},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> src/libraries/Allowance.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":893,"end":908},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> src/libraries/Allowance.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: You are checking for 'block.timestamp' in your code, which might lead to unexpected     │\n│ behavior. Due to the nature of the zkEVM, the timestamp of a block actually refers to the        │\n│ timestamp of the whole batch that will be sent to L1 (meaning, the timestamp of this batch       │\n│ started being processed).                                                                        │\n│ We will provide a custom method to access the L2 block timestamp from the smart contract code in │\n│ the future.                                                                                      │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"11","start":1535,"end":1550},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> src/libraries/SignatureVerification.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"15","start":1429,"end":1453},"type":"Warning"}],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Darwin.appleclang","zk_version":"1.3.10","sources":{"lib/solmate/src/tokens/ERC20.sol":{"id":0,"ast":{"absolutePath":"lib/solmate/src/tokens/ERC20.sol","exportedSymbols":{"ERC20":[387]},"id":388,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:0"},{"abstract":true,"baseContracts":[],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"68:406:0","text":"@notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it."},"fullyImplemented":true,"id":387,"linearizedBaseContracts":[387],"name":"ERC20","nameLocation":"492:5:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":10,"name":"Transfer","nameLocation":"689:8:0","nodeType":"EventDefinition","parameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"714:4:0","nodeType":"VariableDeclaration","scope":10,"src":"698:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"698:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"736:2:0","nodeType":"VariableDeclaration","scope":10,"src":"720:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"720:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"748:6:0","nodeType":"VariableDeclaration","scope":10,"src":"740:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"697:58:0"},"src":"683:73:0"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":18,"name":"Approval","nameLocation":"768:8:0","nodeType":"EventDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"793:5:0","nodeType":"VariableDeclaration","scope":18,"src":"777:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"816:7:0","nodeType":"VariableDeclaration","scope":18,"src":"800:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"800:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"833:6:0","nodeType":"VariableDeclaration","scope":18,"src":"825:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"825:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"776:64:0"},"src":"762:79:0"},{"constant":false,"functionSelector":"06fdde03","id":20,"mutability":"mutable","name":"name","nameLocation":"1045:4:0","nodeType":"VariableDeclaration","scope":387,"src":"1031:18:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":19,"name":"string","nodeType":"ElementaryTypeName","src":"1031:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":22,"mutability":"mutable","name":"symbol","nameLocation":"1070:6:0","nodeType":"VariableDeclaration","scope":387,"src":"1056:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":21,"name":"string","nodeType":"ElementaryTypeName","src":"1056:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":24,"mutability":"immutable","name":"decimals","nameLocation":"1106:8:0","nodeType":"VariableDeclaration","scope":387,"src":"1083:31:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":23,"name":"uint8","nodeType":"ElementaryTypeName","src":"1083:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"18160ddd","id":26,"mutability":"mutable","name":"totalSupply","nameLocation":"1319:11:0","nodeType":"VariableDeclaration","scope":387,"src":"1304:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"70a08231","id":30,"mutability":"mutable","name":"balanceOf","nameLocation":"1372:9:0","nodeType":"VariableDeclaration","scope":387,"src":"1337:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":29,"keyType":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1337:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"1356:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":36,"mutability":"mutable","name":"allowance","nameLocation":"1443:9:0","nodeType":"VariableDeclaration","scope":387,"src":"1388:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":35,"keyType":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1396:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1388:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":34,"keyType":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1415:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1407:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"1426:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":38,"mutability":"immutable","name":"INITIAL_CHAIN_ID","nameLocation":"1670:16:0","nodeType":"VariableDeclaration","scope":387,"src":"1643:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"immutable","name":"INITIAL_DOMAIN_SEPARATOR","nameLocation":"1720:24:0","nodeType":"VariableDeclaration","scope":387,"src":"1693:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":39,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1693:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"functionSelector":"7ecebe00","id":44,"mutability":"mutable","name":"nonces","nameLocation":"1786:6:0","nodeType":"VariableDeclaration","scope":387,"src":"1751:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":43,"keyType":{"id":41,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1751:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":75,"nodeType":"Block","src":"2084:189:0","statements":[{"expression":{"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":53,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2094:4:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":54,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"2101:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2094:12:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":56,"nodeType":"ExpressionStatement","src":"2094:12:0"},{"expression":{"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":57,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2116:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":58,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"2125:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2116:16:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":60,"nodeType":"ExpressionStatement","src":"2116:16:0"},{"expression":{"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":61,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"2142:8:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":62,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"2153:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2142:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":64,"nodeType":"ExpressionStatement","src":"2142:20:0"},{"expression":{"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":65,"name":"INITIAL_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"2173:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":66,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2192:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2198:7:0","memberName":"chainid","nodeType":"MemberAccess","src":"2192:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":69,"nodeType":"ExpressionStatement","src":"2173:32:0"},{"expression":{"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":70,"name":"INITIAL_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"2215:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"computeDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"2242:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2242:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2215:51:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":74,"nodeType":"ExpressionStatement","src":"2215:51:0"}]},"id":76,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"_name","nameLocation":"2016:5:0","nodeType":"VariableDeclaration","scope":76,"src":"2002:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":45,"name":"string","nodeType":"ElementaryTypeName","src":"2002:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"_symbol","nameLocation":"2045:7:0","nodeType":"VariableDeclaration","scope":76,"src":"2031:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":47,"name":"string","nodeType":"ElementaryTypeName","src":"2031:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"_decimals","nameLocation":"2068:9:0","nodeType":"VariableDeclaration","scope":76,"src":"2062:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":49,"name":"uint8","nodeType":"ElementaryTypeName","src":"2062:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1992:91:0"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"2084:0:0"},"scope":387,"src":"1981:292:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":103,"nodeType":"Block","src":"2541:131:0","statements":[{"expression":{"id":92,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":85,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"2551:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":89,"indexExpression":{"expression":{"id":86,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2561:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2565:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2561:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2551:21:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":90,"indexExpression":{"id":88,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"2573:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2551:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":91,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"2584:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":93,"nodeType":"ExpressionStatement","src":"2551:39:0"},{"eventCall":{"arguments":[{"expression":{"id":95,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2615:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2619:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2615:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":97,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"2627:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":98,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"2636:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":94,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2606:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":100,"nodeType":"EmitStatement","src":"2601:42:0"},{"expression":{"hexValue":"74727565","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2661:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":84,"id":102,"nodeType":"Return","src":"2654:11:0"}]},"functionSelector":"095ea7b3","id":104,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2470:7:0","nodeType":"FunctionDefinition","parameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"spender","nameLocation":"2486:7:0","nodeType":"VariableDeclaration","scope":104,"src":"2478:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"amount","nameLocation":"2503:6:0","nodeType":"VariableDeclaration","scope":104,"src":"2495:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"2495:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2477:33:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":104,"src":"2535:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":82,"name":"bool","nodeType":"ElementaryTypeName","src":"2535:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2534:6:0"},"scope":387,"src":"2461:211:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":136,"nodeType":"Block","src":"2754:297:0","statements":[{"expression":{"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":113,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2764:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":116,"indexExpression":{"expression":{"id":114,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2774:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2778:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2774:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2764:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2789:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2764:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":119,"nodeType":"ExpressionStatement","src":"2764:31:0"},{"id":126,"nodeType":"UncheckedBlock","src":"2917:58:0","statements":[{"expression":{"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":120,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2941:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":122,"indexExpression":{"id":121,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"2951:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2941:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":123,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2958:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2941:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":125,"nodeType":"ExpressionStatement","src":"2941:23:0"}]},{"eventCall":{"arguments":[{"expression":{"id":128,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2999:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2999:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":130,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"3011:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":131,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"3015:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":127,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2990:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2990:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":133,"nodeType":"EmitStatement","src":"2985:37:0"},{"expression":{"hexValue":"74727565","id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3040:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":112,"id":135,"nodeType":"Return","src":"3033:11:0"}]},"functionSelector":"a9059cbb","id":137,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2687:8:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"to","nameLocation":"2704:2:0","nodeType":"VariableDeclaration","scope":137,"src":"2696:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"amount","nameLocation":"2716:6:0","nodeType":"VariableDeclaration","scope":137,"src":"2708:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2708:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2695:28:0"},"returnParameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":137,"src":"2748:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":110,"name":"bool","nodeType":"ElementaryTypeName","src":"2748:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2747:6:0"},"scope":387,"src":"2678:373:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":197,"nodeType":"Block","src":"3181:468:0","statements":[{"assignments":[149],"declarations":[{"constant":false,"id":149,"mutability":"mutable","name":"allowed","nameLocation":"3199:7:0","nodeType":"VariableDeclaration","scope":197,"src":"3191:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"3191:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":156,"initialValue":{"baseExpression":{"baseExpression":{"id":150,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"3209:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":152,"indexExpression":{"id":151,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3219:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3209:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":155,"indexExpression":{"expression":{"id":153,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3225:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3229:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3225:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3209:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3191:45:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":157,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"3287:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3303:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":159,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":158,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3298:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3298:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3312:3:0","memberName":"max","nodeType":"MemberAccess","src":"3298:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3287:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":175,"nodeType":"IfStatement","src":"3283:80:0","trueBody":{"expression":{"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":164,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"3317:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":168,"indexExpression":{"id":165,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3327:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3317:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":169,"indexExpression":{"expression":{"id":166,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3333:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3337:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3333:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3317:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":170,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"3347:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":171,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"3357:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3347:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3317:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":174,"nodeType":"ExpressionStatement","src":"3317:46:0"}},{"expression":{"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":176,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3374:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":178,"indexExpression":{"id":177,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3384:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3374:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":179,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"3393:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3374:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":181,"nodeType":"ExpressionStatement","src":"3374:25:0"},{"id":188,"nodeType":"UncheckedBlock","src":"3521:58:0","statements":[{"expression":{"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":182,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3545:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":184,"indexExpression":{"id":183,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3555:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3545:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":185,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"3562:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3545:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":187,"nodeType":"ExpressionStatement","src":"3545:23:0"}]},{"eventCall":{"arguments":[{"id":190,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3603:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":191,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3609:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"3613:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":189,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"3594:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":194,"nodeType":"EmitStatement","src":"3589:31:0"},{"expression":{"hexValue":"74727565","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3638:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":147,"id":196,"nodeType":"Return","src":"3631:11:0"}]},"functionSelector":"23b872dd","id":198,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3066:12:0","nodeType":"FunctionDefinition","parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"from","nameLocation":"3096:4:0","nodeType":"VariableDeclaration","scope":198,"src":"3088:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3088:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"to","nameLocation":"3118:2:0","nodeType":"VariableDeclaration","scope":198,"src":"3110:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"3110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"amount","nameLocation":"3138:6:0","nodeType":"VariableDeclaration","scope":198,"src":"3130:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"3130:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3078:72:0"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":198,"src":"3175:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":145,"name":"bool","nodeType":"ElementaryTypeName","src":"3175:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3174:6:0"},"scope":387,"src":"3057:592:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":284,"nodeType":"Block","src":"4027:1294:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":216,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"4045:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":217,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4057:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4063:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"4057:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4045:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5045524d49545f444541444c494e455f45585049524544","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4074:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","typeString":"literal_string \"PERMIT_DEADLINE_EXPIRED\""},"value":"PERMIT_DEADLINE_EXPIRED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","typeString":"literal_string \"PERMIT_DEADLINE_EXPIRED\""}],"id":215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4037:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"ExpressionStatement","src":"4037:63:0"},{"id":277,"nodeType":"UncheckedBlock","src":"4241:1027:0","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"recoveredAddress","nameLocation":"4273:16:0","nodeType":"VariableDeclaration","scope":277,"src":"4265:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"4265:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":254,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"1901","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4392:10:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"arguments":[],"expression":{"argumentTypes":[],"id":230,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4428:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4428:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4602:84:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":235,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4555:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4555:165:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":238,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"4754:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":239,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"4793:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"4834:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4873:15:0","subExpression":{"baseExpression":{"id":241,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"4873:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":243,"indexExpression":{"id":242,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"4880:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4873:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":245,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"4922:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":233,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4511:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4515:6:0","memberName":"encode","nodeType":"MemberAccess","src":"4511:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4511:449:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":232,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4472:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4472:514:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":227,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4350:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4354:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4350:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4350:658:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":226,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4319:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:707:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":250,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"5044:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":251,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"5063:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":252,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"5082:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":225,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"4292:9:0","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:805:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4265:832:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":256,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5120:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5148:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5140:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"5140:7:0","typeDescriptions":{}}},"id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5120:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":262,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5154:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":263,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"5174:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5154:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5120:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5349474e4552","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5181:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","typeString":"literal_string \"INVALID_SIGNER\""},"value":"INVALID_SIGNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","typeString":"literal_string \"INVALID_SIGNER\""}],"id":255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5112:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:86:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":268,"nodeType":"ExpressionStatement","src":"5112:86:0"},{"expression":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":269,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"5213:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":272,"indexExpression":{"id":270,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5223:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5213:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":273,"indexExpression":{"id":271,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"5241:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5213:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"5252:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5213:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":276,"nodeType":"ExpressionStatement","src":"5213:44:0"}]},{"eventCall":{"arguments":[{"id":279,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"5292:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":280,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"5299:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"5308:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":278,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"5283:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5283:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":283,"nodeType":"EmitStatement","src":"5278:36:0"}]},"functionSelector":"d505accf","id":285,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3847:6:0","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"owner","nameLocation":"3871:5:0","nodeType":"VariableDeclaration","scope":285,"src":"3863:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"3863:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"spender","nameLocation":"3894:7:0","nodeType":"VariableDeclaration","scope":285,"src":"3886:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"3886:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"value","nameLocation":"3919:5:0","nodeType":"VariableDeclaration","scope":285,"src":"3911:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3911:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"deadline","nameLocation":"3942:8:0","nodeType":"VariableDeclaration","scope":285,"src":"3934:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3934:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"v","nameLocation":"3966:1:0","nodeType":"VariableDeclaration","scope":285,"src":"3960:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":207,"name":"uint8","nodeType":"ElementaryTypeName","src":"3960:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"r","nameLocation":"3985:1:0","nodeType":"VariableDeclaration","scope":285,"src":"3977:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3977:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"s","nameLocation":"4004:1:0","nodeType":"VariableDeclaration","scope":285,"src":"3996:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3996:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3853:158:0"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"4027:0:0"},"scope":387,"src":"3838:1483:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":299,"nodeType":"Block","src":"5393:111:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":290,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5410:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5416:7:0","memberName":"chainid","nodeType":"MemberAccess","src":"5410:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":292,"name":"INITIAL_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"5427:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5410:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":295,"name":"computeDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5473:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5473:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5410:87:0","trueExpression":{"id":294,"name":"INITIAL_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"5446:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":289,"id":298,"nodeType":"Return","src":"5403:94:0"}]},"functionSelector":"3644e515","id":300,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"5336:16:0","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"5352:2:0"},"returnParameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":300,"src":"5384:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5384:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5383:9:0"},"scope":387,"src":"5327:177:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":329,"nodeType":"Block","src":"5584:372:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5682:84:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":308,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5672:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5672:95:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":314,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"5805:4:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":312,"name":"bytes","nodeType":"ElementaryTypeName","src":"5799:5:0","typeDescriptions":{}}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":311,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5789:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"31","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5843:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":317,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5833:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5833:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":320,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5869:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5875:7:0","memberName":"chainid","nodeType":"MemberAccess","src":"5869:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":324,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5912:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}],"id":323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5904:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"5904:7:0","typeDescriptions":{}}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5904:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":306,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5640:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5644:6:0","memberName":"encode","nodeType":"MemberAccess","src":"5640:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5640:295:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":305,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5613:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":304,"id":328,"nodeType":"Return","src":"5594:355:0"}]},"id":330,"implemented":true,"kind":"function","modifiers":[],"name":"computeDomainSeparator","nameLocation":"5519:22:0","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"5541:2:0"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":330,"src":"5575:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5575:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5574:9:0"},"scope":387,"src":"5510:446:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":357,"nodeType":"Block","src":"6210:265:0","statements":[{"expression":{"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":337,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6220:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":338,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"6235:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6220:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":340,"nodeType":"ExpressionStatement","src":"6220:21:0"},{"id":347,"nodeType":"UncheckedBlock","src":"6363:58:0","statements":[{"expression":{"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":341,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6387:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":343,"indexExpression":{"id":342,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6397:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6387:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":344,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"6404:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6387:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":346,"nodeType":"ExpressionStatement","src":"6387:23:0"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6453:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6445:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"6445:7:0","typeDescriptions":{}}},"id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6445:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":353,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6457:2:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":354,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"6461:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":348,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6436:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6436:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"EmitStatement","src":"6431:37:0"}]},"id":358,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6159:5:0","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"to","nameLocation":"6173:2:0","nodeType":"VariableDeclaration","scope":358,"src":"6165:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"6165:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"amount","nameLocation":"6185:6:0","nodeType":"VariableDeclaration","scope":358,"src":"6177:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6164:28:0"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"6210:0:0"},"scope":387,"src":"6150:325:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":385,"nodeType":"Block","src":"6543:266:0","statements":[{"expression":{"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":365,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6553:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":367,"indexExpression":{"id":366,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"6563:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6553:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":368,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6572:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6553:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":370,"nodeType":"ExpressionStatement","src":"6553:25:0"},{"id":375,"nodeType":"UncheckedBlock","src":"6697:56:0","statements":[{"expression":{"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":371,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6721:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":372,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6736:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6721:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":374,"nodeType":"ExpressionStatement","src":"6721:21:0"}]},{"eventCall":{"arguments":[{"id":377,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"6777:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6783:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"6783:7:0","typeDescriptions":{}}},"id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6783:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":382,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6795:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":376,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6768:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6768:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"EmitStatement","src":"6763:39:0"}]},"id":386,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"6490:5:0","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"from","nameLocation":"6504:4:0","nodeType":"VariableDeclaration","scope":386,"src":"6496:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"6496:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"amount","nameLocation":"6518:6:0","nodeType":"VariableDeclaration","scope":386,"src":"6510:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"6510:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6495:30:0"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[],"src":"6543:0:0"},"scope":387,"src":"6481:328:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":388,"src":"474:6337:0","usedErrors":[]}],"src":"42:6770:0"}},"lib/solmate/src/utils/SafeTransferLib.sol":{"id":1,"ast":{"absolutePath":"lib/solmate/src/utils/SafeTransferLib.sol","exportedSymbols":{"ERC20":[387],"SafeTransferLib":[472]},"id":473,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":389,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:1"},{"absolutePath":"lib/solmate/src/tokens/ERC20.sol","file":"../tokens/ERC20.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":473,"sourceUnit":388,"src":"68:42:1","symbolAliases":[{"foreign":{"id":390,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"76:5:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeTransferLib","contractDependencies":[],"contractKind":"library","documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"112:474:1","text":"@notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\n @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\n @dev Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller."},"fullyImplemented":true,"id":472,"linearizedBaseContracts":[472],"name":"SafeTransferLib","nameLocation":"594:15:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":408,"nodeType":"Block","src":"861:277:1","statements":[{"assignments":[400],"declarations":[{"constant":false,"id":400,"mutability":"mutable","name":"success","nameLocation":"876:7:1","nodeType":"VariableDeclaration","scope":408,"src":"871:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":399,"name":"bool","nodeType":"ElementaryTypeName","src":"871:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":401,"nodeType":"VariableDeclarationStatement","src":"871:12:1"},{"AST":{"nodeType":"YulBlock","src":"946:136:1","statements":[{"nodeType":"YulAssignment","src":"1026:46:1","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1042:3:1"},"nodeType":"YulFunctionCall","src":"1042:5:1"},{"name":"to","nodeType":"YulIdentifier","src":"1049:2:1"},{"name":"amount","nodeType":"YulIdentifier","src":"1053:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"1061:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1064:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1067:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1070:1:1","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1037:4:1"},"nodeType":"YulFunctionCall","src":"1037:35:1"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"1026:7:1"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":396,"isOffset":false,"isSlot":false,"src":"1053:6:1","valueSize":1},{"declaration":400,"isOffset":false,"isSlot":false,"src":"1026:7:1","valueSize":1},{"declaration":394,"isOffset":false,"isSlot":false,"src":"1049:2:1","valueSize":1}],"id":402,"nodeType":"InlineAssembly","src":"937:145:1"},{"expression":{"arguments":[{"id":404,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1100:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4554485f5452414e534645525f4641494c4544","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1109:21:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29","typeString":"literal_string \"ETH_TRANSFER_FAILED\""},"value":"ETH_TRANSFER_FAILED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29","typeString":"literal_string \"ETH_TRANSFER_FAILED\""}],"id":403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1092:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1092:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"1092:39:1"}]},"id":409,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferETH","nameLocation":"808:15:1","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"to","nameLocation":"832:2:1","nodeType":"VariableDeclaration","scope":409,"src":"824:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"824:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"amount","nameLocation":"844:6:1","nodeType":"VariableDeclaration","scope":409,"src":"836:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:28:1"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"861:0:1"},"scope":472,"src":"799:339:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":430,"nodeType":"Block","src":"1456:1488:1","statements":[{"assignments":[422],"declarations":[{"constant":false,"id":422,"mutability":"mutable","name":"success","nameLocation":"1471:7:1","nodeType":"VariableDeclaration","scope":430,"src":"1466:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":421,"name":"bool","nodeType":"ElementaryTypeName","src":"1466:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":423,"nodeType":"VariableDeclarationStatement","src":"1466:12:1"},{"AST":{"nodeType":"YulBlock","src":"1541:1346:1","statements":[{"nodeType":"YulVariableDeclaration","src":"1605:36:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1636:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1630:5:1"},"nodeType":"YulFunctionCall","src":"1630:11:1"},"variables":[{"name":"freeMemoryPointer","nodeType":"YulTypedName","src":"1609:17:1","type":""}]},{"expression":{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"1759:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"1778:66:1","type":"","value":"0x23b872dd00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:1"},"nodeType":"YulFunctionCall","src":"1752:93:1"},"nodeType":"YulExpressionStatement","src":"1752:93:1"},{"expression":{"arguments":[{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"1869:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"1888:1:1","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1865:3:1"},"nodeType":"YulFunctionCall","src":"1865:25:1"},{"name":"from","nodeType":"YulIdentifier","src":"1892:4:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1858:6:1"},"nodeType":"YulFunctionCall","src":"1858:39:1"},"nodeType":"YulExpressionStatement","src":"1858:39:1"},{"expression":{"arguments":[{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"1952:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"1971:2:1","type":"","value":"36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1948:3:1"},"nodeType":"YulFunctionCall","src":"1948:26:1"},{"name":"to","nodeType":"YulIdentifier","src":"1976:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1941:6:1"},"nodeType":"YulFunctionCall","src":"1941:38:1"},"nodeType":"YulExpressionStatement","src":"1941:38:1"},{"expression":{"arguments":[{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"2032:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"2051:2:1","type":"","value":"68"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2028:3:1"},"nodeType":"YulFunctionCall","src":"2028:26:1"},{"name":"amount","nodeType":"YulIdentifier","src":"2056:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2021:6:1"},"nodeType":"YulFunctionCall","src":"2021:42:1"},"nodeType":"YulExpressionStatement","src":"2021:42:1"},{"nodeType":"YulAssignment","src":"2110:767:1","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2337:1:1","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2331:5:1"},"nodeType":"YulFunctionCall","src":"2331:8:1"},{"kind":"number","nodeType":"YulLiteral","src":"2341:1:1","type":"","value":"1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2328:2:1"},"nodeType":"YulFunctionCall","src":"2328:15:1"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2348:14:1"},"nodeType":"YulFunctionCall","src":"2348:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"2366:2:1","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2345:2:1"},"nodeType":"YulFunctionCall","src":"2345:24:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2324:3:1"},"nodeType":"YulFunctionCall","src":"2324:46:1"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2379:14:1"},"nodeType":"YulFunctionCall","src":"2379:16:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2372:6:1"},"nodeType":"YulFunctionCall","src":"2372:24:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2321:2:1"},"nodeType":"YulFunctionCall","src":"2321:76:1"},{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"2816:3:1"},"nodeType":"YulFunctionCall","src":"2816:5:1"},{"name":"token","nodeType":"YulIdentifier","src":"2823:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"2830:1:1","type":"","value":"0"},{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"2833:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"2852:3:1","type":"","value":"100"},{"kind":"number","nodeType":"YulLiteral","src":"2857:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2860:2:1","type":"","value":"32"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"2811:4:1"},"nodeType":"YulFunctionCall","src":"2811:52:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2121:3:1"},"nodeType":"YulFunctionCall","src":"2121:756:1"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2110:7:1"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":418,"isOffset":false,"isSlot":false,"src":"2056:6:1","valueSize":1},{"declaration":414,"isOffset":false,"isSlot":false,"src":"1892:4:1","valueSize":1},{"declaration":422,"isOffset":false,"isSlot":false,"src":"2110:7:1","valueSize":1},{"declaration":416,"isOffset":false,"isSlot":false,"src":"1976:2:1","valueSize":1},{"declaration":412,"isOffset":false,"isSlot":false,"src":"2823:5:1","valueSize":1}],"id":424,"nodeType":"InlineAssembly","src":"1532:1355:1"},{"expression":{"arguments":[{"id":426,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"2905:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5452414e534645525f46524f4d5f4641494c4544","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2914:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7","typeString":"literal_string \"TRANSFER_FROM_FAILED\""},"value":"TRANSFER_FROM_FAILED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7","typeString":"literal_string \"TRANSFER_FROM_FAILED\""}],"id":425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2897:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2897:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"2897:40:1"}]},"id":431,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1337:16:1","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"token","nameLocation":"1369:5:1","nodeType":"VariableDeclaration","scope":431,"src":"1363:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"},"typeName":{"id":411,"nodeType":"UserDefinedTypeName","pathNode":{"id":410,"name":"ERC20","nameLocations":["1363:5:1"],"nodeType":"IdentifierPath","referencedDeclaration":387,"src":"1363:5:1"},"referencedDeclaration":387,"src":"1363:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"from","nameLocation":"1392:4:1","nodeType":"VariableDeclaration","scope":431,"src":"1384:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"1384:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"to","nameLocation":"1414:2:1","nodeType":"VariableDeclaration","scope":431,"src":"1406:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"amount","nameLocation":"1434:6:1","nodeType":"VariableDeclaration","scope":431,"src":"1426:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1426:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1353:93:1"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[],"src":"1456:0:1"},"scope":472,"src":"1328:1616:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":450,"nodeType":"Block","src":"3052:1397:1","statements":[{"assignments":[442],"declarations":[{"constant":false,"id":442,"mutability":"mutable","name":"success","nameLocation":"3067:7:1","nodeType":"VariableDeclaration","scope":450,"src":"3062:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":441,"name":"bool","nodeType":"ElementaryTypeName","src":"3062:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":443,"nodeType":"VariableDeclarationStatement","src":"3062:12:1"},{"AST":{"nodeType":"YulBlock","src":"3137:1260:1","statements":[{"nodeType":"YulVariableDeclaration","src":"3201:36:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3232:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3226:5:1"},"nodeType":"YulFunctionCall","src":"3226:11:1"},"variables":[{"name":"freeMemoryPointer","nodeType":"YulTypedName","src":"3205:17:1","type":""}]},{"expression":{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"3355:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"3374:66:1","type":"","value":"0xa9059cbb00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:1"},"nodeType":"YulFunctionCall","src":"3348:93:1"},"nodeType":"YulExpressionStatement","src":"3348:93:1"},{"expression":{"arguments":[{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"3465:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"3484:1:1","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3461:3:1"},"nodeType":"YulFunctionCall","src":"3461:25:1"},{"name":"to","nodeType":"YulIdentifier","src":"3488:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3454:6:1"},"nodeType":"YulFunctionCall","src":"3454:37:1"},"nodeType":"YulExpressionStatement","src":"3454:37:1"},{"expression":{"arguments":[{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"3544:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"3563:2:1","type":"","value":"36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3540:3:1"},"nodeType":"YulFunctionCall","src":"3540:26:1"},{"name":"amount","nodeType":"YulIdentifier","src":"3568:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3533:6:1"},"nodeType":"YulFunctionCall","src":"3533:42:1"},"nodeType":"YulExpressionStatement","src":"3533:42:1"},{"nodeType":"YulAssignment","src":"3622:765:1","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3849:1:1","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3843:5:1"},"nodeType":"YulFunctionCall","src":"3843:8:1"},{"kind":"number","nodeType":"YulLiteral","src":"3853:1:1","type":"","value":"1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3840:2:1"},"nodeType":"YulFunctionCall","src":"3840:15:1"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"3860:14:1"},"nodeType":"YulFunctionCall","src":"3860:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"3878:2:1","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3857:2:1"},"nodeType":"YulFunctionCall","src":"3857:24:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3836:3:1"},"nodeType":"YulFunctionCall","src":"3836:46:1"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"3891:14:1"},"nodeType":"YulFunctionCall","src":"3891:16:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3884:6:1"},"nodeType":"YulFunctionCall","src":"3884:24:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3833:2:1"},"nodeType":"YulFunctionCall","src":"3833:76:1"},{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"4327:3:1"},"nodeType":"YulFunctionCall","src":"4327:5:1"},{"name":"token","nodeType":"YulIdentifier","src":"4334:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"4341:1:1","type":"","value":"0"},{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"4344:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"4363:2:1","type":"","value":"68"},{"kind":"number","nodeType":"YulLiteral","src":"4367:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4370:2:1","type":"","value":"32"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"4322:4:1"},"nodeType":"YulFunctionCall","src":"4322:51:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3633:3:1"},"nodeType":"YulFunctionCall","src":"3633:754:1"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"3622:7:1"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":438,"isOffset":false,"isSlot":false,"src":"3568:6:1","valueSize":1},{"declaration":442,"isOffset":false,"isSlot":false,"src":"3622:7:1","valueSize":1},{"declaration":436,"isOffset":false,"isSlot":false,"src":"3488:2:1","valueSize":1},{"declaration":434,"isOffset":false,"isSlot":false,"src":"4334:5:1","valueSize":1}],"id":444,"nodeType":"InlineAssembly","src":"3128:1269:1"},{"expression":{"arguments":[{"id":446,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4415:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5452414e534645525f4641494c4544","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4424:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72","typeString":"literal_string \"TRANSFER_FAILED\""},"value":"TRANSFER_FAILED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72","typeString":"literal_string \"TRANSFER_FAILED\""}],"id":445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4407:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":449,"nodeType":"ExpressionStatement","src":"4407:35:1"}]},"id":451,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"2959:12:1","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"token","nameLocation":"2987:5:1","nodeType":"VariableDeclaration","scope":451,"src":"2981:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"},"typeName":{"id":433,"nodeType":"UserDefinedTypeName","pathNode":{"id":432,"name":"ERC20","nameLocations":["2981:5:1"],"nodeType":"IdentifierPath","referencedDeclaration":387,"src":"2981:5:1"},"referencedDeclaration":387,"src":"2981:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"to","nameLocation":"3010:2:1","nodeType":"VariableDeclaration","scope":451,"src":"3002:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"3002:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"amount","nameLocation":"3030:6:1","nodeType":"VariableDeclaration","scope":451,"src":"3022:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"3022:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2971:71:1"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"3052:0:1"},"scope":472,"src":"2950:1499:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":470,"nodeType":"Block","src":"4556:1396:1","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"success","nameLocation":"4571:7:1","nodeType":"VariableDeclaration","scope":470,"src":"4566:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":461,"name":"bool","nodeType":"ElementaryTypeName","src":"4566:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":463,"nodeType":"VariableDeclarationStatement","src":"4566:12:1"},{"AST":{"nodeType":"YulBlock","src":"4641:1260:1","statements":[{"nodeType":"YulVariableDeclaration","src":"4705:36:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4736:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4730:5:1"},"nodeType":"YulFunctionCall","src":"4730:11:1"},"variables":[{"name":"freeMemoryPointer","nodeType":"YulTypedName","src":"4709:17:1","type":""}]},{"expression":{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"4859:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"4878:66:1","type":"","value":"0x095ea7b300000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4852:6:1"},"nodeType":"YulFunctionCall","src":"4852:93:1"},"nodeType":"YulExpressionStatement","src":"4852:93:1"},{"expression":{"arguments":[{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"4969:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"4988:1:1","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4965:3:1"},"nodeType":"YulFunctionCall","src":"4965:25:1"},{"name":"to","nodeType":"YulIdentifier","src":"4992:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4958:6:1"},"nodeType":"YulFunctionCall","src":"4958:37:1"},"nodeType":"YulExpressionStatement","src":"4958:37:1"},{"expression":{"arguments":[{"arguments":[{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"5048:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"5067:2:1","type":"","value":"36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5044:3:1"},"nodeType":"YulFunctionCall","src":"5044:26:1"},{"name":"amount","nodeType":"YulIdentifier","src":"5072:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5037:6:1"},"nodeType":"YulFunctionCall","src":"5037:42:1"},"nodeType":"YulExpressionStatement","src":"5037:42:1"},{"nodeType":"YulAssignment","src":"5126:765:1","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5353:1:1","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5347:5:1"},"nodeType":"YulFunctionCall","src":"5347:8:1"},{"kind":"number","nodeType":"YulLiteral","src":"5357:1:1","type":"","value":"1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5344:2:1"},"nodeType":"YulFunctionCall","src":"5344:15:1"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5364:14:1"},"nodeType":"YulFunctionCall","src":"5364:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"5382:2:1","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5361:2:1"},"nodeType":"YulFunctionCall","src":"5361:24:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5340:3:1"},"nodeType":"YulFunctionCall","src":"5340:46:1"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5395:14:1"},"nodeType":"YulFunctionCall","src":"5395:16:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5388:6:1"},"nodeType":"YulFunctionCall","src":"5388:24:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5337:2:1"},"nodeType":"YulFunctionCall","src":"5337:76:1"},{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"5831:3:1"},"nodeType":"YulFunctionCall","src":"5831:5:1"},{"name":"token","nodeType":"YulIdentifier","src":"5838:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"5845:1:1","type":"","value":"0"},{"name":"freeMemoryPointer","nodeType":"YulIdentifier","src":"5848:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"5867:2:1","type":"","value":"68"},{"kind":"number","nodeType":"YulLiteral","src":"5871:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5874:2:1","type":"","value":"32"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"5826:4:1"},"nodeType":"YulFunctionCall","src":"5826:51:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5137:3:1"},"nodeType":"YulFunctionCall","src":"5137:754:1"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"5126:7:1"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":458,"isOffset":false,"isSlot":false,"src":"5072:6:1","valueSize":1},{"declaration":462,"isOffset":false,"isSlot":false,"src":"5126:7:1","valueSize":1},{"declaration":456,"isOffset":false,"isSlot":false,"src":"4992:2:1","valueSize":1},{"declaration":454,"isOffset":false,"isSlot":false,"src":"5838:5:1","valueSize":1}],"id":464,"nodeType":"InlineAssembly","src":"4632:1269:1"},{"expression":{"arguments":[{"id":466,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5919:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"415050524f56455f4641494c4544","id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5928:16:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2","typeString":"literal_string \"APPROVE_FAILED\""},"value":"APPROVE_FAILED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2","typeString":"literal_string \"APPROVE_FAILED\""}],"id":465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5911:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5911:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":469,"nodeType":"ExpressionStatement","src":"5911:34:1"}]},"id":471,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"4464:11:1","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"token","nameLocation":"4491:5:1","nodeType":"VariableDeclaration","scope":471,"src":"4485:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"},"typeName":{"id":453,"nodeType":"UserDefinedTypeName","pathNode":{"id":452,"name":"ERC20","nameLocations":["4485:5:1"],"nodeType":"IdentifierPath","referencedDeclaration":387,"src":"4485:5:1"},"referencedDeclaration":387,"src":"4485:5:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"to","nameLocation":"4514:2:1","nodeType":"VariableDeclaration","scope":471,"src":"4506:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"4506:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"amount","nameLocation":"4534:6:1","nodeType":"VariableDeclaration","scope":471,"src":"4526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"4526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4475:71:1"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"4556:0:1"},"scope":472,"src":"4455:1497:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":473,"src":"586:5368:1","usedErrors":[]}],"src":"42:5913:1"}},"src/AllowanceTransfer.sol":{"id":2,"ast":{"absolutePath":"src/AllowanceTransfer.sol","exportedSymbols":{"Allowance":[2066],"AllowanceTransfer":[1021],"EIP712":[1117],"ERC20":[387],"IAllowanceTransfer":[1779],"InvalidNonce":[1139],"PermitHash":[2676],"SafeTransferLib":[472],"SignatureExpired":[1136],"SignatureVerification":[2876]},"id":1022,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":474,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"lib/solmate/src/tokens/ERC20.sol","file":"../lib/solmate/src/tokens/ERC20.sol","id":476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1022,"sourceUnit":388,"src":"57:58:2","symbolAliases":[{"foreign":{"id":475,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"65:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/solmate/src/utils/SafeTransferLib.sol","file":"../lib/solmate/src/utils/SafeTransferLib.sol","id":478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1022,"sourceUnit":473,"src":"116:77:2","symbolAliases":[{"foreign":{"id":477,"name":"SafeTransferLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"124:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/libraries/PermitHash.sol","file":"./libraries/PermitHash.sol","id":480,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1022,"sourceUnit":2677,"src":"194:54:2","symbolAliases":[{"foreign":{"id":479,"name":"PermitHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"202:10:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/libraries/SignatureVerification.sol","file":"./libraries/SignatureVerification.sol","id":482,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1022,"sourceUnit":2877,"src":"249:76:2","symbolAliases":[{"foreign":{"id":481,"name":"SignatureVerification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"257:21:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/EIP712.sol","file":"./EIP712.sol","id":484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1022,"sourceUnit":1118,"src":"326:36:2","symbolAliases":[{"foreign":{"id":483,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"334:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/interfaces/IAllowanceTransfer.sol","file":"../src/interfaces/IAllowanceTransfer.sol","id":486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1022,"sourceUnit":1780,"src":"363:76:2","symbolAliases":[{"foreign":{"id":485,"name":"IAllowanceTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"371:18:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/PermitErrors.sol","file":"./PermitErrors.sol","id":489,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1022,"sourceUnit":1140,"src":"440:66:2","symbolAliases":[{"foreign":{"id":487,"name":"SignatureExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"448:16:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":488,"name":"InvalidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"466:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/libraries/Allowance.sol","file":"./libraries/Allowance.sol","id":491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1022,"sourceUnit":2067,"src":"507:52:2","symbolAliases":[{"foreign":{"id":490,"name":"Allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"515:9:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":492,"name":"IAllowanceTransfer","nameLocations":["591:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1779,"src":"591:18:2"},"id":493,"nodeType":"InheritanceSpecifier","src":"591:18:2"},{"baseName":{"id":494,"name":"EIP712","nameLocations":["611:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":1117,"src":"611:6:2"},"id":495,"nodeType":"InheritanceSpecifier","src":"611:6:2"}],"canonicalName":"AllowanceTransfer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1021,"linearizedBaseContracts":[1021,1117,1779],"name":"AllowanceTransfer","nameLocation":"570:17:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":498,"libraryName":{"id":496,"name":"SignatureVerification","nameLocations":["630:21:2"],"nodeType":"IdentifierPath","referencedDeclaration":2876,"src":"630:21:2"},"nodeType":"UsingForDirective","src":"624:38:2","typeName":{"id":497,"name":"bytes","nodeType":"ElementaryTypeName","src":"656:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"global":false,"id":502,"libraryName":{"id":499,"name":"SafeTransferLib","nameLocations":["673:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":472,"src":"673:15:2"},"nodeType":"UsingForDirective","src":"667:32:2","typeName":{"id":501,"nodeType":"UserDefinedTypeName","pathNode":{"id":500,"name":"ERC20","nameLocations":["693:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":387,"src":"693:5:2"},"referencedDeclaration":387,"src":"693:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}}},{"global":false,"id":506,"libraryName":{"id":503,"name":"PermitHash","nameLocations":["710:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":2676,"src":"710:10:2"},"nodeType":"UsingForDirective","src":"704:34:2","typeName":{"id":505,"nodeType":"UserDefinedTypeName","pathNode":{"id":504,"name":"PermitSingle","nameLocations":["725:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":1660,"src":"725:12:2"},"referencedDeclaration":1660,"src":"725:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_storage_ptr","typeString":"struct IAllowanceTransfer.PermitSingle"}}},{"global":false,"id":510,"libraryName":{"id":507,"name":"PermitHash","nameLocations":["749:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":2676,"src":"749:10:2"},"nodeType":"UsingForDirective","src":"743:33:2","typeName":{"id":509,"nodeType":"UserDefinedTypeName","pathNode":{"id":508,"name":"PermitBatch","nameLocations":["764:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":1669,"src":"764:11:2"},"referencedDeclaration":1669,"src":"764:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_storage_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"}}},{"global":false,"id":514,"libraryName":{"id":511,"name":"Allowance","nameLocations":["787:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":2066,"src":"787:9:2"},"nodeType":"UsingForDirective","src":"781:36:2","typeName":{"id":513,"nodeType":"UserDefinedTypeName","pathNode":{"id":512,"name":"PackedAllowance","nameLocations":["801:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1676,"src":"801:15:2"},"referencedDeclaration":1676,"src":"801:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"}}},{"baseFunctions":[1706],"constant":false,"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"823:284:2","text":"@notice Maps users to tokens to spender addresses and information about the approval on the token\n @dev Indexed in the order of token owner address, token address, spender address\n @dev The stored word saves the allowed amount, expiration on the allowance, and nonce"},"functionSelector":"927da105","id":524,"mutability":"mutable","name":"allowance","nameLocation":"1195:9:2","nodeType":"VariableDeclaration","scope":1021,"src":"1112:92:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance)))"},"typeName":{"id":523,"keyType":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1112:75:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance)))"},"valueType":{"id":522,"keyType":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"1139:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1131:55:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$","typeString":"mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance))"},"valueType":{"id":521,"keyType":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"1158:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1150:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$","typeString":"mapping(address => struct IAllowanceTransfer.PackedAllowance)"},"valueType":{"id":520,"nodeType":"UserDefinedTypeName","pathNode":{"id":519,"name":"PackedAllowance","nameLocations":["1169:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1676,"src":"1169:15:2"},"referencedDeclaration":1676,"src":"1169:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"}}}}},"visibility":"public"},{"baseFunctions":[1718],"body":{"id":564,"nodeType":"Block","src":"1343:222:2","statements":[{"assignments":[538],"declarations":[{"constant":false,"id":538,"mutability":"mutable","name":"allowed","nameLocation":"1377:7:2","nodeType":"VariableDeclaration","scope":564,"src":"1353:31:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"},"typeName":{"id":537,"nodeType":"UserDefinedTypeName","pathNode":{"id":536,"name":"PackedAllowance","nameLocations":["1353:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1676,"src":"1353:15:2"},"referencedDeclaration":1676,"src":"1353:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"}},"visibility":"internal"}],"id":547,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":539,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"1387:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"}},"id":542,"indexExpression":{"expression":{"id":540,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1397:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1401:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1397:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1387:21:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$","typeString":"mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"}},"id":544,"indexExpression":{"id":543,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1409:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1387:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$","typeString":"mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"}},"id":546,"indexExpression":{"id":545,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"1416:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1387:37:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage","typeString":"struct IAllowanceTransfer.PackedAllowance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1353:71:2"},{"expression":{"arguments":[{"id":551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"1468:6:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":552,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"1476:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":548,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"1434:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance storage pointer"}},"id":550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1442:25:2","memberName":"updateAmountAndExpiration","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"1434:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PackedAllowance_$1676_storage_ptr_$_t_uint160_$_t_uint48_$returns$__$bound_to$_t_struct$_PackedAllowance_$1676_storage_ptr_$","typeString":"function (struct IAllowanceTransfer.PackedAllowance storage pointer,uint160,uint48)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1434:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"1434:53:2"},{"eventCall":{"arguments":[{"expression":{"id":556,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1511:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1515:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1511:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":558,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"1523:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"1530:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"1539:6:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":561,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"1547:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":555,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"1502:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint160_$_t_uint48_$returns$__$","typeString":"function (address,address,address,uint160,uint48)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"EmitStatement","src":"1497:61:2"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"1211:34:2","text":"@inheritdoc IAllowanceTransfer"},"functionSelector":"87517c45","id":565,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1259:7:2","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"token","nameLocation":"1275:5:2","nodeType":"VariableDeclaration","scope":565,"src":"1267:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"1267:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"1290:7:2","nodeType":"VariableDeclaration","scope":565,"src":"1282:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"1282:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"amount","nameLocation":"1307:6:2","nodeType":"VariableDeclaration","scope":565,"src":"1299:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":530,"name":"uint160","nodeType":"ElementaryTypeName","src":"1299:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"expiration","nameLocation":"1322:10:2","nodeType":"VariableDeclaration","scope":565,"src":"1315:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":532,"name":"uint48","nodeType":"ElementaryTypeName","src":"1315:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1266:67:2"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"1343:0:2"},"scope":1021,"src":"1250:315:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1729],"body":{"id":606,"nodeType":"Block","src":"1710:319:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":576,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1724:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1730:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"1724:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":578,"name":"permitSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"1742:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle memory"}},"id":579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1755:11:2","memberName":"sigDeadline","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"1742:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1724:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":586,"nodeType":"IfStatement","src":"1720:97:2","trueBody":{"errorCall":{"arguments":[{"expression":{"id":582,"name":"permitSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"1792:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle memory"}},"id":583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1805:11:2","memberName":"sigDeadline","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"1792:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":581,"name":"SignatureExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"1775:16:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1775:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"RevertStatement","src":"1768:49:2"}},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":591,"name":"permitSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"1917:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle memory"}},"id":592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1930:4:2","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":2349,"src":"1917:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PermitSingle_$1660_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_PermitSingle_$1660_memory_ptr_$","typeString":"function (struct IAllowanceTransfer.PermitSingle memory) pure returns (bytes32)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1917:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":590,"name":"_hashTypedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"1902:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1902:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":595,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"1939:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":587,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1885:9:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1895:6:2","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":2875,"src":"1885:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$returns$__$bound_to$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,bytes32,address) view"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1885:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"ExpressionStatement","src":"1885:60:2"},{"expression":{"arguments":[{"expression":{"id":599,"name":"permitSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"1972:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle memory"}},"id":600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1985:7:2","memberName":"details","nodeType":"MemberAccess","referencedDeclaration":1655,"src":"1972:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}},{"id":601,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"1994:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":602,"name":"permitSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"2001:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle memory"}},"id":603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2014:7:2","memberName":"spender","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"2001:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":598,"name":"_updateApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"1956:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PermitDetails_$1652_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (struct IAllowanceTransfer.PermitDetails memory,address,address)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":605,"nodeType":"ExpressionStatement","src":"1956:66:2"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"1571:34:2","text":"@inheritdoc IAllowanceTransfer"},"functionSelector":"2b67b570","id":607,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1619:6:2","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"owner","nameLocation":"1634:5:2","nodeType":"VariableDeclaration","scope":607,"src":"1626:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"1626:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"permitSingle","nameLocation":"1661:12:2","nodeType":"VariableDeclaration","scope":607,"src":"1641:32:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle"},"typeName":{"id":570,"nodeType":"UserDefinedTypeName","pathNode":{"id":569,"name":"PermitSingle","nameLocations":["1641:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":1660,"src":"1641:12:2"},"referencedDeclaration":1660,"src":"1641:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_storage_ptr","typeString":"struct IAllowanceTransfer.PermitSingle"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"signature","nameLocation":"1690:9:2","nodeType":"VariableDeclaration","scope":607,"src":"1675:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":572,"name":"bytes","nodeType":"ElementaryTypeName","src":"1675:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1625:75:2"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[],"src":"1710:0:2"},"scope":1021,"src":"1610:419:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1740],"body":{"id":673,"nodeType":"Block","src":"2172:512:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":618,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2186:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2192:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"2186:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":620,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"2204:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch memory"}},"id":621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2216:11:2","memberName":"sigDeadline","nodeType":"MemberAccess","referencedDeclaration":1668,"src":"2204:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2186:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"2182:95:2","trueBody":{"errorCall":{"arguments":[{"expression":{"id":624,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"2253:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch memory"}},"id":625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2265:11:2","memberName":"sigDeadline","nodeType":"MemberAccess","referencedDeclaration":1668,"src":"2253:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":623,"name":"SignatureExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"2236:16:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":627,"nodeType":"RevertStatement","src":"2229:48:2"}},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":633,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"2377:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch memory"}},"id":634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2389:4:2","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":2415,"src":"2377:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PermitBatch_$1669_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_PermitBatch_$1669_memory_ptr_$","typeString":"function (struct IAllowanceTransfer.PermitBatch memory) pure returns (bytes32)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2377:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":632,"name":"_hashTypedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"2362:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":637,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"2398:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":629,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2345:9:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2355:6:2","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":2875,"src":"2345:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$returns$__$bound_to$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,bytes32,address) view"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2345:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"ExpressionStatement","src":"2345:59:2"},{"assignments":[641],"declarations":[{"constant":false,"id":641,"mutability":"mutable","name":"spender","nameLocation":"2423:7:2","nodeType":"VariableDeclaration","scope":673,"src":"2415:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"2415:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":644,"initialValue":{"expression":{"id":642,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"2433:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch memory"}},"id":643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2445:7:2","memberName":"spender","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"2433:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2415:37:2"},{"id":672,"nodeType":"UncheckedBlock","src":"2462:216:2","statements":[{"assignments":[646],"declarations":[{"constant":false,"id":646,"mutability":"mutable","name":"length","nameLocation":"2494:6:2","nodeType":"VariableDeclaration","scope":672,"src":"2486:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2486:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":650,"initialValue":{"expression":{"expression":{"id":647,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"2503:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch memory"}},"id":648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:2","memberName":"details","nodeType":"MemberAccess","referencedDeclaration":1664,"src":"2503:19:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitDetails_$1652_memory_ptr_$dyn_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory[] memory"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2523:6:2","memberName":"length","nodeType":"MemberAccess","src":"2503:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2486:43:2"},{"body":{"id":670,"nodeType":"Block","src":"2580:88:2","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":662,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"2614:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch memory"}},"id":663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2626:7:2","memberName":"details","nodeType":"MemberAccess","referencedDeclaration":1664,"src":"2614:19:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitDetails_$1652_memory_ptr_$dyn_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory[] memory"}},"id":665,"indexExpression":{"id":664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"2634:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2614:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}},{"id":666,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"2638:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"2645:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":661,"name":"_updateApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2598:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PermitDetails_$1652_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (struct IAllowanceTransfer.PermitDetails memory,address,address)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2598:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"2598:55:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"2563:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":656,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"2567:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2563:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":671,"initializationExpression":{"assignments":[652],"declarations":[{"constant":false,"id":652,"mutability":"mutable","name":"i","nameLocation":"2556:1:2","nodeType":"VariableDeclaration","scope":671,"src":"2548:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"2548:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":654,"initialValue":{"hexValue":"30","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2560:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2548:13:2"},"loopExpression":{"expression":{"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2575:3:2","subExpression":{"id":658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"2577:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":660,"nodeType":"ExpressionStatement","src":"2575:3:2"},"nodeType":"ForStatement","src":"2543:125:2"}]}]},"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"2035:34:2","text":"@inheritdoc IAllowanceTransfer"},"functionSelector":"2a2d80d1","id":674,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2083:6:2","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"owner","nameLocation":"2098:5:2","nodeType":"VariableDeclaration","scope":674,"src":"2090:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"2090:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"permitBatch","nameLocation":"2124:11:2","nodeType":"VariableDeclaration","scope":674,"src":"2105:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"},"typeName":{"id":612,"nodeType":"UserDefinedTypeName","pathNode":{"id":611,"name":"PermitBatch","nameLocations":["2105:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":1669,"src":"2105:11:2"},"referencedDeclaration":1669,"src":"2105:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_storage_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"}},"visibility":"internal"},{"constant":false,"id":615,"mutability":"mutable","name":"signature","nameLocation":"2152:9:2","nodeType":"VariableDeclaration","scope":674,"src":"2137:24:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":614,"name":"bytes","nodeType":"ElementaryTypeName","src":"2137:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2089:73:2"},"returnParameters":{"id":617,"nodeType":"ParameterList","parameters":[],"src":"2172:0:2"},"scope":1021,"src":"2074:610:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1752],"body":{"id":693,"nodeType":"Block","src":"2817:51:2","statements":[{"expression":{"arguments":[{"id":687,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"2837:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":688,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"2843:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":689,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"2847:6:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":690,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"2855:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_address","typeString":"address"}],"id":686,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2827:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint160_$_t_address_$returns$__$","typeString":"function (address,address,uint160,address)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":692,"nodeType":"ExpressionStatement","src":"2827:34:2"}]},"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"2690:34:2","text":"@inheritdoc IAllowanceTransfer"},"functionSelector":"36c78516","id":694,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2738:12:2","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"from","nameLocation":"2759:4:2","nodeType":"VariableDeclaration","scope":694,"src":"2751:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"2751:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"to","nameLocation":"2773:2:2","nodeType":"VariableDeclaration","scope":694,"src":"2765:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"2765:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"amount","nameLocation":"2785:6:2","nodeType":"VariableDeclaration","scope":694,"src":"2777:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":680,"name":"uint160","nodeType":"ElementaryTypeName","src":"2777:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"token","nameLocation":"2801:5:2","nodeType":"VariableDeclaration","scope":694,"src":"2793:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"2793:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2750:57:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"2817:0:2"},"scope":1021,"src":"2729:139:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1760],"body":{"id":738,"nodeType":"Block","src":"2997:352:2","statements":[{"id":737,"nodeType":"UncheckedBlock","src":"3007:336:2","statements":[{"assignments":[703],"declarations":[{"constant":false,"id":703,"mutability":"mutable","name":"length","nameLocation":"3039:6:2","nodeType":"VariableDeclaration","scope":737,"src":"3031:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"3031:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":706,"initialValue":{"expression":{"id":704,"name":"transferDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"3048:15:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AllowanceTransferDetails_$1690_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails calldata[] calldata"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3064:6:2","memberName":"length","nodeType":"MemberAccess","src":"3048:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3031:39:2"},{"body":{"id":735,"nodeType":"Block","src":"3121:212:2","statements":[{"assignments":[719],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"transferDetail","nameLocation":"3171:14:2","nodeType":"VariableDeclaration","scope":735,"src":"3139:46:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AllowanceTransferDetails_$1690_memory_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails"},"typeName":{"id":718,"nodeType":"UserDefinedTypeName","pathNode":{"id":717,"name":"AllowanceTransferDetails","nameLocations":["3139:24:2"],"nodeType":"IdentifierPath","referencedDeclaration":1690,"src":"3139:24:2"},"referencedDeclaration":1690,"src":"3139:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_AllowanceTransferDetails_$1690_storage_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails"}},"visibility":"internal"}],"id":723,"initialValue":{"baseExpression":{"id":720,"name":"transferDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"3188:15:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AllowanceTransferDetails_$1690_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails calldata[] calldata"}},"id":722,"indexExpression":{"id":721,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"3204:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3188:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AllowanceTransferDetails_$1690_calldata_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails calldata"}},"nodeType":"VariableDeclarationStatement","src":"3139:67:2"},{"expression":{"arguments":[{"expression":{"id":725,"name":"transferDetail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"3234:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_AllowanceTransferDetails_$1690_memory_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails memory"}},"id":726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3249:4:2","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":1683,"src":"3234:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":727,"name":"transferDetail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"3255:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_AllowanceTransferDetails_$1690_memory_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails memory"}},"id":728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3270:2:2","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":1685,"src":"3255:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":729,"name":"transferDetail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"3274:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_AllowanceTransferDetails_$1690_memory_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails memory"}},"id":730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3289:6:2","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1687,"src":"3274:21:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":731,"name":"transferDetail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"3297:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_AllowanceTransferDetails_$1690_memory_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails memory"}},"id":732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3312:5:2","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1689,"src":"3297:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_address","typeString":"address"}],"id":724,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3224:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint160_$_t_address_$returns$__$","typeString":"function (address,address,uint160,address)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3224:94:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"3224:94:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":711,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"3104:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":712,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"3108:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3104:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":736,"initializationExpression":{"assignments":[708],"declarations":[{"constant":false,"id":708,"mutability":"mutable","name":"i","nameLocation":"3097:1:2","nodeType":"VariableDeclaration","scope":736,"src":"3089:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":707,"name":"uint256","nodeType":"ElementaryTypeName","src":"3089:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":710,"initialValue":{"hexValue":"30","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3101:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3089:13:2"},"loopExpression":{"expression":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3116:3:2","subExpression":{"id":714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"3118:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":716,"nodeType":"ExpressionStatement","src":"3116:3:2"},"nodeType":"ForStatement","src":"3084:249:2"}]}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"2874:34:2","text":"@inheritdoc IAllowanceTransfer"},"functionSelector":"0d58b1db","id":739,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2922:12:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"transferDetails","nameLocation":"2971:15:2","nodeType":"VariableDeclaration","scope":739,"src":"2935:51:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AllowanceTransferDetails_$1690_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails[]"},"typeName":{"baseType":{"id":697,"nodeType":"UserDefinedTypeName","pathNode":{"id":696,"name":"AllowanceTransferDetails","nameLocations":["2935:24:2"],"nodeType":"IdentifierPath","referencedDeclaration":1690,"src":"2935:24:2"},"referencedDeclaration":1690,"src":"2935:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_AllowanceTransferDetails_$1690_storage_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails"}},"id":698,"nodeType":"ArrayTypeName","src":"2935:26:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AllowanceTransferDetails_$1690_storage_$dyn_storage_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails[]"}},"visibility":"internal"}],"src":"2934:53:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"2997:0:2"},"scope":1021,"src":"2913:436:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":819,"nodeType":"Block","src":"3580:653:2","statements":[{"assignments":[753],"declarations":[{"constant":false,"id":753,"mutability":"mutable","name":"allowed","nameLocation":"3614:7:2","nodeType":"VariableDeclaration","scope":819,"src":"3590:31:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"},"typeName":{"id":752,"nodeType":"UserDefinedTypeName","pathNode":{"id":751,"name":"PackedAllowance","nameLocations":["3590:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1676,"src":"3590:15:2"},"referencedDeclaration":1676,"src":"3590:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"}},"visibility":"internal"}],"id":762,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":754,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"3624:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"}},"id":756,"indexExpression":{"id":755,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"3634:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3624:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$","typeString":"mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"}},"id":758,"indexExpression":{"id":757,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"3640:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3624:22:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$","typeString":"mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"}},"id":761,"indexExpression":{"expression":{"id":759,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3647:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3651:6:2","memberName":"sender","nodeType":"MemberAccess","src":"3647:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3624:34:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage","typeString":"struct IAllowanceTransfer.PackedAllowance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3590:68:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":763,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3673:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3679:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"3673:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":765,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3691:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance storage pointer"}},"id":766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3699:10:2","memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"3691:18:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3673:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"3669:85:2","trueBody":{"errorCall":{"arguments":[{"expression":{"id":769,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3735:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance storage pointer"}},"id":770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3743:10:2","memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"3735:18:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":768,"name":"AllowanceExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"3718:16:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3718:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"RevertStatement","src":"3711:43:2"}},{"assignments":[775],"declarations":[{"constant":false,"id":775,"mutability":"mutable","name":"maxAmount","nameLocation":"3773:9:2","nodeType":"VariableDeclaration","scope":819,"src":"3765:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"3765:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":778,"initialValue":{"expression":{"id":776,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"3785:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance storage pointer"}},"id":777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3793:6:2","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1671,"src":"3785:14:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"VariableDeclarationStatement","src":"3765:34:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":779,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"3813:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3831:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":781,"name":"uint160","nodeType":"ElementaryTypeName","src":"3831:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":780,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3826:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3826:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3840:3:2","memberName":"max","nodeType":"MemberAccess","src":"3826:17:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"3813:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"3809:289:2","trueBody":{"id":808,"nodeType":"Block","src":"3845:253:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":786,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"3863:6:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":787,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"3872:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3863:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":806,"nodeType":"Block","src":"3961:127:2","statements":[{"id":805,"nodeType":"UncheckedBlock","src":"3979:95:2","statements":[{"expression":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":794,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4011:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance storage pointer"}},"id":796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4019:6:2","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1671,"src":"4011:14:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":799,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"4036:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4028:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":797,"name":"uint160","nodeType":"ElementaryTypeName","src":"4028:7:2","typeDescriptions":{}}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4028:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":801,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"4049:6:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"4028:27:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"4011:44:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":804,"nodeType":"ExpressionStatement","src":"4011:44:2"}]}]},"id":807,"nodeType":"IfStatement","src":"3859:229:2","trueBody":{"id":793,"nodeType":"Block","src":"3883:72:2","statements":[{"errorCall":{"arguments":[{"id":790,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"3930:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":789,"name":"InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"3908:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"RevertStatement","src":"3901:39:2"}]}}]}},{"expression":{"arguments":[{"id":814,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4209:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"4215:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":816,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"4219:6:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"arguments":[{"id":811,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"4185:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":810,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"4179:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$387_$","typeString":"type(contract ERC20)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4179:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4192:16:2","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":431,"src":"4179:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_ERC20_$387_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$387_$","typeString":"function (contract ERC20,address,address,uint256)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4179:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"4179:47:2"}]},"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"3355:136:2","text":"@notice Internal function for transferring tokens using stored allowances\n @dev Will fail if the allowed timeframe has passed"},"id":820,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"3505:9:2","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"from","nameLocation":"3523:4:2","nodeType":"VariableDeclaration","scope":820,"src":"3515:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"3515:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"to","nameLocation":"3537:2:2","nodeType":"VariableDeclaration","scope":820,"src":"3529:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"3529:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"amount","nameLocation":"3549:6:2","nodeType":"VariableDeclaration","scope":820,"src":"3541:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":745,"name":"uint160","nodeType":"ElementaryTypeName","src":"3541:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"token","nameLocation":"3565:5:2","nodeType":"VariableDeclaration","scope":820,"src":"3557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"3557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3514:57:2"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"3580:0:2"},"scope":1021,"src":"3496:737:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[1768],"body":{"id":882,"nodeType":"Block","src":"4344:476:2","statements":[{"assignments":[829],"declarations":[{"constant":false,"id":829,"mutability":"mutable","name":"owner","nameLocation":"4362:5:2","nodeType":"VariableDeclaration","scope":882,"src":"4354:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"4354:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":832,"initialValue":{"expression":{"id":830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4370:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4374:6:2","memberName":"sender","nodeType":"MemberAccess","src":"4370:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4354:26:2"},{"id":881,"nodeType":"UncheckedBlock","src":"4457:357:2","statements":[{"assignments":[834],"declarations":[{"constant":false,"id":834,"mutability":"mutable","name":"length","nameLocation":"4489:6:2","nodeType":"VariableDeclaration","scope":881,"src":"4481:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"4481:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":837,"initialValue":{"expression":{"id":835,"name":"approvals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4498:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenSpenderPair_$1681_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair calldata[] calldata"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4508:6:2","memberName":"length","nodeType":"MemberAccess","src":"4498:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4481:33:2"},{"body":{"id":879,"nodeType":"Block","src":"4565:239:2","statements":[{"assignments":[849],"declarations":[{"constant":false,"id":849,"mutability":"mutable","name":"token","nameLocation":"4591:5:2","nodeType":"VariableDeclaration","scope":879,"src":"4583:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"4583:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":854,"initialValue":{"expression":{"baseExpression":{"id":850,"name":"approvals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4599:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenSpenderPair_$1681_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair calldata[] calldata"}},"id":852,"indexExpression":{"id":851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"4609:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4599:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenSpenderPair_$1681_calldata_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair calldata"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4612:5:2","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1678,"src":"4599:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4583:34:2"},{"assignments":[856],"declarations":[{"constant":false,"id":856,"mutability":"mutable","name":"spender","nameLocation":"4643:7:2","nodeType":"VariableDeclaration","scope":879,"src":"4635:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"4635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":861,"initialValue":{"expression":{"baseExpression":{"id":857,"name":"approvals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"4653:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenSpenderPair_$1681_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair calldata[] calldata"}},"id":859,"indexExpression":{"id":858,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"4663:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4653:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenSpenderPair_$1681_calldata_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair calldata"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4666:7:2","memberName":"spender","nodeType":"MemberAccess","referencedDeclaration":1680,"src":"4653:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4635:38:2"},{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":862,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"4692:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"}},"id":866,"indexExpression":{"id":863,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"4702:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4692:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$","typeString":"mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"}},"id":867,"indexExpression":{"id":864,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"4709:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4692:23:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$","typeString":"mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"}},"id":868,"indexExpression":{"id":865,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4716:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4692:32:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage","typeString":"struct IAllowanceTransfer.PackedAllowance storage ref"}},"id":869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4725:6:2","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1671,"src":"4692:39:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4734:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4692:43:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":872,"nodeType":"ExpressionStatement","src":"4692:43:2"},{"eventCall":{"arguments":[{"id":874,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"4767:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"4774:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":876,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4781:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":873,"name":"Lockdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"4758:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4758:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"EmitStatement","src":"4753:36:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":842,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"4548:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":843,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"4552:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4548:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":880,"initializationExpression":{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"i","nameLocation":"4541:1:2","nodeType":"VariableDeclaration","scope":880,"src":"4533:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"4533:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":841,"initialValue":{"hexValue":"30","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4545:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4533:13:2"},"loopExpression":{"expression":{"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4560:3:2","subExpression":{"id":845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"4562:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":847,"nodeType":"ExpressionStatement","src":"4560:3:2"},"nodeType":"ForStatement","src":"4528:276:2"}]}]},"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"4239:34:2","text":"@inheritdoc IAllowanceTransfer"},"functionSelector":"cc53287f","id":883,"implemented":true,"kind":"function","modifiers":[],"name":"lockdown","nameLocation":"4287:8:2","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"approvals","nameLocation":"4324:9:2","nodeType":"VariableDeclaration","scope":883,"src":"4296:37:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenSpenderPair_$1681_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair[]"},"typeName":{"baseType":{"id":823,"nodeType":"UserDefinedTypeName","pathNode":{"id":822,"name":"TokenSpenderPair","nameLocations":["4296:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":1681,"src":"4296:16:2"},"referencedDeclaration":1681,"src":"4296:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_TokenSpenderPair_$1681_storage_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair"}},"id":824,"nodeType":"ArrayTypeName","src":"4296:18:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenSpenderPair_$1681_storage_$dyn_storage_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair[]"}},"visibility":"internal"}],"src":"4295:39:2"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"4344:0:2"},"scope":1021,"src":"4278:542:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1778],"body":{"id":951,"nodeType":"Block","src":"4949:516:2","statements":[{"assignments":[894],"declarations":[{"constant":false,"id":894,"mutability":"mutable","name":"oldNonce","nameLocation":"4966:8:2","nodeType":"VariableDeclaration","scope":951,"src":"4959:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":893,"name":"uint48","nodeType":"ElementaryTypeName","src":"4959:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":904,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":895,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"4977:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"}},"id":898,"indexExpression":{"expression":{"id":896,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4987:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4991:6:2","memberName":"sender","nodeType":"MemberAccess","src":"4987:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4977:21:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$","typeString":"mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"}},"id":900,"indexExpression":{"id":899,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"4999:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4977:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$","typeString":"mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"}},"id":902,"indexExpression":{"id":901,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"5006:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4977:37:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage","typeString":"struct IAllowanceTransfer.PackedAllowance storage ref"}},"id":903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5015:5:2","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1675,"src":"4977:43:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"4959:61:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"newNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5035:8:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":906,"name":"oldNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"5047:8:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"5035:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"nodeType":"IfStatement","src":"5031:47:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":908,"name":"InvalidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"5064:12:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5064:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":910,"nodeType":"RevertStatement","src":"5057:21:2"}},{"id":929,"nodeType":"UncheckedBlock","src":"5171:143:2","statements":[{"assignments":[913],"declarations":[{"constant":false,"id":913,"mutability":"mutable","name":"delta","nameLocation":"5202:5:2","nodeType":"VariableDeclaration","scope":929,"src":"5195:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":912,"name":"uint48","nodeType":"ElementaryTypeName","src":"5195:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":917,"initialValue":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":914,"name":"newNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5210:8:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":915,"name":"oldNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"5221:8:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"5210:19:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"5195:34:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":918,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"5247:5:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5260:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":920,"name":"uint16","nodeType":"ElementaryTypeName","src":"5260:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":919,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5255:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5255:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5268:3:2","memberName":"max","nodeType":"MemberAccess","src":"5255:16:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5247:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":928,"nodeType":"IfStatement","src":"5243:60:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":925,"name":"ExcessiveInvalidation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"5280:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"RevertStatement","src":"5273:30:2"}}]},{"expression":{"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":930,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"5324:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"}},"id":935,"indexExpression":{"expression":{"id":931,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5334:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5338:6:2","memberName":"sender","nodeType":"MemberAccess","src":"5334:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5324:21:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$","typeString":"mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"}},"id":936,"indexExpression":{"id":933,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"5346:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5324:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$","typeString":"mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"}},"id":937,"indexExpression":{"id":934,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"5353:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5324:37:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage","typeString":"struct IAllowanceTransfer.PackedAllowance storage ref"}},"id":938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5362:5:2","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1675,"src":"5324:43:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":939,"name":"newNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5370:8:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"5324:54:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":941,"nodeType":"ExpressionStatement","src":"5324:54:2"},{"eventCall":{"arguments":[{"expression":{"id":943,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5411:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5415:6:2","memberName":"sender","nodeType":"MemberAccess","src":"5411:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"5423:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"5430:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":947,"name":"newNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5439:8:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":948,"name":"oldNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"5449:8:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":942,"name":"NonceInvalidation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"5393:17:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint48_$_t_uint48_$returns$__$","typeString":"function (address,address,address,uint48,uint48)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5393:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":950,"nodeType":"EmitStatement","src":"5388:70:2"}]},"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"4826:34:2","text":"@inheritdoc IAllowanceTransfer"},"functionSelector":"65d9723c","id":952,"implemented":true,"kind":"function","modifiers":[],"name":"invalidateNonces","nameLocation":"4874:16:2","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"token","nameLocation":"4899:5:2","nodeType":"VariableDeclaration","scope":952,"src":"4891:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"4891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"spender","nameLocation":"4914:7:2","nodeType":"VariableDeclaration","scope":952,"src":"4906:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"4906:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"newNonce","nameLocation":"4930:8:2","nodeType":"VariableDeclaration","scope":952,"src":"4923:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":889,"name":"uint48","nodeType":"ElementaryTypeName","src":"4923:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4890:49:2"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"4949:0:2"},"scope":1021,"src":"4865:600:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1019,"nodeType":"Block","src":"5790:435:2","statements":[{"assignments":[964],"declarations":[{"constant":false,"id":964,"mutability":"mutable","name":"nonce","nameLocation":"5807:5:2","nodeType":"VariableDeclaration","scope":1019,"src":"5800:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":963,"name":"uint48","nodeType":"ElementaryTypeName","src":"5800:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":967,"initialValue":{"expression":{"id":965,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"5815:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}},"id":966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5823:5:2","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1651,"src":"5815:13:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"5800:28:2"},{"assignments":[969],"declarations":[{"constant":false,"id":969,"mutability":"mutable","name":"token","nameLocation":"5846:5:2","nodeType":"VariableDeclaration","scope":1019,"src":"5838:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"5838:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":972,"initialValue":{"expression":{"id":970,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"5854:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}},"id":971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5862:5:2","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1645,"src":"5854:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5838:29:2"},{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"amount","nameLocation":"5885:6:2","nodeType":"VariableDeclaration","scope":1019,"src":"5877:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":973,"name":"uint160","nodeType":"ElementaryTypeName","src":"5877:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":977,"initialValue":{"expression":{"id":975,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"5894:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}},"id":976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5902:6:2","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"5894:14:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"VariableDeclarationStatement","src":"5877:31:2"},{"assignments":[979],"declarations":[{"constant":false,"id":979,"mutability":"mutable","name":"expiration","nameLocation":"5925:10:2","nodeType":"VariableDeclaration","scope":1019,"src":"5918:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":978,"name":"uint48","nodeType":"ElementaryTypeName","src":"5918:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":982,"initialValue":{"expression":{"id":980,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"5938:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}},"id":981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5946:10:2","memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":1649,"src":"5938:18:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"5918:38:2"},{"assignments":[985],"declarations":[{"constant":false,"id":985,"mutability":"mutable","name":"allowed","nameLocation":"5990:7:2","nodeType":"VariableDeclaration","scope":1019,"src":"5966:31:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"},"typeName":{"id":984,"nodeType":"UserDefinedTypeName","pathNode":{"id":983,"name":"PackedAllowance","nameLocations":["5966:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1676,"src":"5966:15:2"},"referencedDeclaration":1676,"src":"5966:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"}},"visibility":"internal"}],"id":993,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":986,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"6000:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$_$","typeString":"mapping(address => mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)))"}},"id":988,"indexExpression":{"id":987,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6010:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6000:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$_$","typeString":"mapping(address => mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref))"}},"id":990,"indexExpression":{"id":989,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"6017:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6000:23:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PackedAllowance_$1676_storage_$","typeString":"mapping(address => struct IAllowanceTransfer.PackedAllowance storage ref)"}},"id":992,"indexExpression":{"id":991,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"6024:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6000:32:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage","typeString":"struct IAllowanceTransfer.PackedAllowance storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5966:66:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":994,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6047:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance storage pointer"}},"id":995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6055:5:2","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1675,"src":"6047:13:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":996,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"6064:5:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"6047:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1001,"nodeType":"IfStatement","src":"6043:49:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":998,"name":"InvalidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6078:12:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6078:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1000,"nodeType":"RevertStatement","src":"6071:21:2"}},{"expression":{"arguments":[{"id":1005,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6121:6:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":1006,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"6129:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":1007,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"6141:5:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":1002,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6103:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance storage pointer"}},"id":1004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6111:9:2","memberName":"updateAll","nodeType":"MemberAccess","referencedDeclaration":2000,"src":"6103:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PackedAllowance_$1676_storage_ptr_$_t_uint160_$_t_uint48_$_t_uint48_$returns$__$bound_to$_t_struct$_PackedAllowance_$1676_storage_ptr_$","typeString":"function (struct IAllowanceTransfer.PackedAllowance storage pointer,uint160,uint48,uint48)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6103:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"ExpressionStatement","src":"6103:44:2"},{"eventCall":{"arguments":[{"id":1011,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6169:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1012,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"6176:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1013,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"6183:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1014,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6192:6:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":1015,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"6200:10:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":1016,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"6212:5:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":1010,"name":"Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"6162:6:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint160_$_t_uint48_$_t_uint48_$returns$__$","typeString":"function (address,address,address,uint160,uint48,uint48)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6162:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"EmitStatement","src":"6157:61:2"}]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"5471:219:2","text":"@notice Sets the new values for amount, expiration, and nonce.\n @dev Will check that the signed nonce is equal to the current nonce and then incrememnt the nonce value by 1.\n @dev Emits a Permit event."},"id":1020,"implemented":true,"kind":"function","modifiers":[],"name":"_updateApproval","nameLocation":"5704:15:2","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"details","nameLocation":"5741:7:2","nodeType":"VariableDeclaration","scope":1020,"src":"5720:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails"},"typeName":{"id":955,"nodeType":"UserDefinedTypeName","pathNode":{"id":954,"name":"PermitDetails","nameLocations":["5720:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"5720:13:2"},"referencedDeclaration":1652,"src":"5720:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"owner","nameLocation":"5758:5:2","nodeType":"VariableDeclaration","scope":1020,"src":"5750:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"5750:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"spender","nameLocation":"5773:7:2","nodeType":"VariableDeclaration","scope":1020,"src":"5765:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"5765:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5719:62:2"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"5790:0:2"},"scope":1021,"src":"5695:530:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1022,"src":"561:5666:2","usedErrors":[1136,1139,1585,1590,1593,2714,2717,2720,2723]}],"src":"32:6196:2"}},"src/EIP712.sol":{"id":3,"ast":{"absolutePath":"src/EIP712.sol","exportedSymbols":{"EIP712":[1117]},"id":1118,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1023,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"57:238:3","text":"@notice EIP712 helpers for permit2\n @dev Maintains cross-chain replay protection in the event of a fork\n @dev Reference: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol"},"fullyImplemented":true,"id":1117,"linearizedBaseContracts":[1117],"name":"EIP712","nameLocation":"304:6:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1026,"mutability":"immutable","name":"_CACHED_DOMAIN_SEPARATOR","nameLocation":"535:24:3","nodeType":"VariableDeclaration","scope":1117,"src":"509:50:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1028,"mutability":"immutable","name":"_CACHED_CHAIN_ID","nameLocation":"591:16:3","nodeType":"VariableDeclaration","scope":1117,"src":"565:42:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"565:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":1033,"mutability":"constant","name":"_HASHED_NAME","nameLocation":"639:12:3","nodeType":"VariableDeclaration","scope":1117,"src":"614:60:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"614:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d697432","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"664:9:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a","typeString":"literal_string \"Permit2\""},"value":"Permit2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a","typeString":"literal_string \"Permit2\""}],"id":1030,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"654:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"654:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":1038,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"705:10:3","nodeType":"VariableDeclaration","scope":1117,"src":"680:126:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"680:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"736:69:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866","typeString":"literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866","typeString":"literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""}],"id":1035,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"726:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"726:80:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1053,"nodeType":"Block","src":"827:133:3","statements":[{"expression":{"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1041,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"837:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1042,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"856:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"862:7:3","memberName":"chainid","nodeType":"MemberAccess","src":"856:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"837:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1045,"nodeType":"ExpressionStatement","src":"837:32:3"},{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1046,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"879:24:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1048,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"928:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1049,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"940:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1047,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"906:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"906:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"879:74:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1052,"nodeType":"ExpressionStatement","src":"879:74:3"}]},"id":1054,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"824:2:3"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[],"src":"827:0:3"},"scope":1117,"src":"813:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1071,"nodeType":"Block","src":"1181:158:3","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1060,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1198:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1204:7:3","memberName":"chainid","nodeType":"MemberAccess","src":"1198:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1062,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"1215:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1198:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1066,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"1307:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1067,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"1319:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1065,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"1285:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1285:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1198:134:3","trueExpression":{"id":1064,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"1246:24:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1059,"id":1070,"nodeType":"Return","src":"1191:141:3"}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"966:152:3","text":"@notice Returns the domain separator for the current chain.\n @dev Uses cached version if chainid and address are unchanged from construction."},"functionSelector":"3644e515","id":1072,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"1132:16:3","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[],"src":"1148:2:3"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1072,"src":"1172:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1172:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:9:3"},"scope":1117,"src":"1123:216:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1096,"nodeType":"Block","src":"1533:95:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":1085,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"1571:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1086,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"1581:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1087,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1591:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1597:7:3","memberName":"chainid","nodeType":"MemberAccess","src":"1591:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1091,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1614:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$1117","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$1117","typeString":"contract EIP712"}],"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1606:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:3","typeDescriptions":{}}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1083,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1560:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1564:6:3","memberName":"encode","nodeType":"MemberAccess","src":"1560:10:3","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1560:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1082,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1550:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1550:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1081,"id":1095,"nodeType":"Return","src":"1543:78:3"}]},"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"1345:85:3","text":"@notice Builds a domain separator using the current chainId and contract address."},"id":1097,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"1444:21:3","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"typeHash","nameLocation":"1474:8:3","nodeType":"VariableDeclaration","scope":1097,"src":"1466:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1466:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"nameHash","nameLocation":"1492:8:3","nodeType":"VariableDeclaration","scope":1097,"src":"1484:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1484:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1465:36:3"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1097,"src":"1524:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1524:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1523:9:3"},"scope":1117,"src":"1435:193:3","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1115,"nodeType":"Block","src":"1759:93:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1803:10:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"arguments":[],"expression":{"argumentTypes":[],"id":1109,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1815:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1815:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1111,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"1835:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1106,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1786:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:12:3","memberName":"encodePacked","nodeType":"MemberAccess","src":"1786:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1786:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1105,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1776:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1104,"id":1114,"nodeType":"Return","src":"1769:76:3"}]},"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"1634:46:3","text":"@notice Creates an EIP-712 typed data hash"},"id":1116,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedData","nameLocation":"1694:14:3","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"dataHash","nameLocation":"1717:8:3","nodeType":"VariableDeclaration","scope":1116,"src":"1709:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1709:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1708:18:3"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1116,"src":"1750:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1750:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1749:9:3"},"scope":1117,"src":"1685:167:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1118,"src":"295:1559:3","usedErrors":[]}],"src":"32:1823:3"}},"src/Permit2.sol":{"id":4,"ast":{"absolutePath":"src/Permit2.sol","exportedSymbols":{"AllowanceTransfer":[1021],"Permit2":[1129],"SignatureTransfer":[1577]},"id":1130,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1119,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:4"},{"absolutePath":"src/SignatureTransfer.sol","file":"./SignatureTransfer.sol","id":1121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1130,"sourceUnit":1578,"src":"57:58:4","symbolAliases":[{"foreign":{"id":1120,"name":"SignatureTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"65:17:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/AllowanceTransfer.sol","file":"./AllowanceTransfer.sol","id":1123,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1130,"sourceUnit":1022,"src":"116:58:4","symbolAliases":[{"foreign":{"id":1122,"name":"AllowanceTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"124:17:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1125,"name":"SignatureTransfer","nameLocations":["405:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":1577,"src":"405:17:4"},"id":1126,"nodeType":"InheritanceSpecifier","src":"405:17:4"},{"baseName":{"id":1127,"name":"AllowanceTransfer","nameLocations":["424:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":1021,"src":"424:17:4"},"id":1128,"nodeType":"InheritanceSpecifier","src":"424:17:4"}],"canonicalName":"Permit2","contractDependencies":[],"contractKind":"contract","documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"176:209:4","text":"@notice Permit2 handles signature-based transfers in SignatureTransfer and allowance-based transfers in AllowanceTransfer.\n @dev Users must approve Permit2 before calling any of the transfer functions."},"fullyImplemented":true,"id":1129,"linearizedBaseContracts":[1129,1021,1577,1117,1779,1947],"name":"Permit2","nameLocation":"394:7:4","nodeType":"ContractDefinition","nodes":[],"scope":1130,"src":"385:152:4","usedErrors":[1136,1139,1585,1590,1593,1823,1826,2714,2717,2720,2723]}],"src":"32:506:4"}},"src/PermitErrors.sol":{"id":5,"ast":{"absolutePath":"src/PermitErrors.sol","exportedSymbols":{"InvalidNonce":[1139],"SignatureExpired":[1136]},"id":1140,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1131,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:5"},{"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"149:154:5","text":"@notice Thrown when validating an inputted signature that is stale\n @param signatureDeadline The timestamp at which a signature is no longer valid"},"errorSelector":"cd21db4f","id":1136,"name":"SignatureExpired","nameLocation":"309:16:5","nodeType":"ErrorDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"signatureDeadline","nameLocation":"334:17:5","nodeType":"VariableDeclaration","scope":1136,"src":"326:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"326:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"325:27:5"},"src":"303:50:5"},{"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"355:77:5","text":"@notice Thrown when validating that the inputted nonce has not been used"},"errorSelector":"756688fe","id":1139,"name":"InvalidNonce","nameLocation":"438:12:5","nodeType":"ErrorDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[],"src":"450:2:5"},"src":"432:21:5"}],"src":"32:422:5"}},"src/SignatureTransfer.sol":{"id":6,"ast":{"absolutePath":"src/SignatureTransfer.sol","exportedSymbols":{"EIP712":[1117],"ERC20":[387],"ISignatureTransfer":[1947],"InvalidNonce":[1139],"PermitHash":[2676],"SafeTransferLib":[472],"SignatureExpired":[1136],"SignatureTransfer":[1577],"SignatureVerification":[2876]},"id":1578,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1141,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:6"},{"absolutePath":"src/interfaces/ISignatureTransfer.sol","file":"./interfaces/ISignatureTransfer.sol","id":1143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1578,"sourceUnit":1948,"src":"57:71:6","symbolAliases":[{"foreign":{"id":1142,"name":"ISignatureTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"65:18:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/PermitErrors.sol","file":"./PermitErrors.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1578,"sourceUnit":1140,"src":"129:66:6","symbolAliases":[{"foreign":{"id":1144,"name":"SignatureExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"137:16:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1145,"name":"InvalidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"155:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/solmate/src/tokens/ERC20.sol","file":"../lib/solmate/src/tokens/ERC20.sol","id":1148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1578,"sourceUnit":388,"src":"196:58:6","symbolAliases":[{"foreign":{"id":1147,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"204:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/solmate/src/utils/SafeTransferLib.sol","file":"../lib/solmate/src/utils/SafeTransferLib.sol","id":1150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1578,"sourceUnit":473,"src":"255:77:6","symbolAliases":[{"foreign":{"id":1149,"name":"SafeTransferLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"263:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/libraries/SignatureVerification.sol","file":"./libraries/SignatureVerification.sol","id":1152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1578,"sourceUnit":2877,"src":"333:76:6","symbolAliases":[{"foreign":{"id":1151,"name":"SignatureVerification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"341:21:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/libraries/PermitHash.sol","file":"./libraries/PermitHash.sol","id":1154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1578,"sourceUnit":2677,"src":"410:54:6","symbolAliases":[{"foreign":{"id":1153,"name":"PermitHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"418:10:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/EIP712.sol","file":"./EIP712.sol","id":1156,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1578,"sourceUnit":1118,"src":"465:36:6","symbolAliases":[{"foreign":{"id":1155,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"473:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1157,"name":"ISignatureTransfer","nameLocations":["533:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":1947,"src":"533:18:6"},"id":1158,"nodeType":"InheritanceSpecifier","src":"533:18:6"},{"baseName":{"id":1159,"name":"EIP712","nameLocations":["553:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1117,"src":"553:6:6"},"id":1160,"nodeType":"InheritanceSpecifier","src":"553:6:6"}],"canonicalName":"SignatureTransfer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1577,"linearizedBaseContracts":[1577,1117,1947],"name":"SignatureTransfer","nameLocation":"512:17:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1163,"libraryName":{"id":1161,"name":"SignatureVerification","nameLocations":["572:21:6"],"nodeType":"IdentifierPath","referencedDeclaration":2876,"src":"572:21:6"},"nodeType":"UsingForDirective","src":"566:38:6","typeName":{"id":1162,"name":"bytes","nodeType":"ElementaryTypeName","src":"598:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"global":false,"id":1167,"libraryName":{"id":1164,"name":"SafeTransferLib","nameLocations":["615:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":472,"src":"615:15:6"},"nodeType":"UsingForDirective","src":"609:32:6","typeName":{"id":1166,"nodeType":"UserDefinedTypeName","pathNode":{"id":1165,"name":"ERC20","nameLocations":["635:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":387,"src":"635:5:6"},"referencedDeclaration":387,"src":"635:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}}},{"global":false,"id":1171,"libraryName":{"id":1168,"name":"PermitHash","nameLocations":["652:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":2676,"src":"652:10:6"},"nodeType":"UsingForDirective","src":"646:40:6","typeName":{"id":1170,"nodeType":"UserDefinedTypeName","pathNode":{"id":1169,"name":"PermitTransferFrom","nameLocations":["667:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":1848,"src":"667:18:6"},"referencedDeclaration":1848,"src":"667:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_storage_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"}}},{"global":false,"id":1175,"libraryName":{"id":1172,"name":"PermitHash","nameLocations":["697:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":2676,"src":"697:10:6"},"nodeType":"UsingForDirective","src":"691:45:6","typeName":{"id":1174,"nodeType":"UserDefinedTypeName","pathNode":{"id":1173,"name":"PermitBatchTransferFrom","nameLocations":["712:23:6"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"712:23:6"},"referencedDeclaration":1862,"src":"712:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_storage_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"}}},{"baseFunctions":[1872],"constant":false,"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"742:34:6","text":"@inheritdoc ISignatureTransfer"},"functionSelector":"4fe02b44","id":1182,"mutability":"mutable","name":"nonceBitmap","nameLocation":"836:11:6","nodeType":"VariableDeclaration","scope":1577,"src":"781:66:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":1181,"keyType":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"781:47:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":1180,"keyType":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"808:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"800:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"baseFunctions":[1886],"body":{"id":1206,"nodeType":"Block","src":"1094:94:6","statements":[{"expression":{"arguments":[{"id":1197,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"1124:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},{"id":1198,"name":"transferDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"1132:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata"}},{"id":1199,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"1149:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1200,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"1156:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":1201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1163:4:6","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":2445,"src":"1156:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PermitTransferFrom_$1848_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_PermitTransferFrom_$1848_memory_ptr_$","typeString":"function (struct ISignatureTransfer.PermitTransferFrom memory) view returns (bytes32)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1156:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1203,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1171:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"},{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1196,"name":"_permitTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1310,1482],"referencedDeclaration":1310,"src":"1104:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PermitTransferFrom_$1848_memory_ptr_$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails calldata,address,bytes32,bytes calldata)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1104:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"ExpressionStatement","src":"1104:77:6"}]},"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"854:34:6","text":"@inheritdoc ISignatureTransfer"},"functionSelector":"30f28b7a","id":1207,"implemented":true,"kind":"function","modifiers":[],"name":"permitTransferFrom","nameLocation":"902:18:6","nodeType":"FunctionDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"permit","nameLocation":"956:6:6","nodeType":"VariableDeclaration","scope":1207,"src":"930:32:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"},"typeName":{"id":1185,"nodeType":"UserDefinedTypeName","pathNode":{"id":1184,"name":"PermitTransferFrom","nameLocations":["930:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":1848,"src":"930:18:6"},"referencedDeclaration":1848,"src":"930:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_storage_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"transferDetails","nameLocation":"1006:15:6","nodeType":"VariableDeclaration","scope":1207,"src":"972:49:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"},"typeName":{"id":1188,"nodeType":"UserDefinedTypeName","pathNode":{"id":1187,"name":"SignatureTransferDetails","nameLocations":["972:24:6"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"972:24:6"},"referencedDeclaration":1853,"src":"972:24:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"owner","nameLocation":"1039:5:6","nodeType":"VariableDeclaration","scope":1207,"src":"1031:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"signature","nameLocation":"1069:9:6","nodeType":"VariableDeclaration","scope":1207,"src":"1054:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1192,"name":"bytes","nodeType":"ElementaryTypeName","src":"1054:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:164:6"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"1094:0:6"},"scope":1577,"src":"893:295:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1904],"body":{"id":1237,"nodeType":"Block","src":"1509:153:6","statements":[{"expression":{"arguments":[{"id":1226,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"1552:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},{"id":1227,"name":"transferDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"1560:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata"}},{"id":1228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"1577:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1231,"name":"witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"1607:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1232,"name":"witnessTypeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"1616:17:6","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"expression":{"id":1229,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"1584:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":1230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1591:15:6","memberName":"hashWithWitness","nodeType":"MemberAccess","referencedDeclaration":2558,"src":"1584:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PermitTransferFrom_$1848_memory_ptr_$_t_bytes32_$_t_string_calldata_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_PermitTransferFrom_$1848_memory_ptr_$","typeString":"function (struct ISignatureTransfer.PermitTransferFrom memory,bytes32,string calldata) view returns (bytes32)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1234,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"1636:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"},{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1225,"name":"_permitTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1310,1482],"referencedDeclaration":1310,"src":"1519:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PermitTransferFrom_$1848_memory_ptr_$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails calldata,address,bytes32,bytes calldata)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:136:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"ExpressionStatement","src":"1519:136:6"}]},"documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"1194:34:6","text":"@inheritdoc ISignatureTransfer"},"functionSelector":"137c29fe","id":1238,"implemented":true,"kind":"function","modifiers":[],"name":"permitWitnessTransferFrom","nameLocation":"1242:25:6","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"permit","nameLocation":"1303:6:6","nodeType":"VariableDeclaration","scope":1238,"src":"1277:32:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"},"typeName":{"id":1210,"nodeType":"UserDefinedTypeName","pathNode":{"id":1209,"name":"PermitTransferFrom","nameLocations":["1277:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":1848,"src":"1277:18:6"},"referencedDeclaration":1848,"src":"1277:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_storage_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"transferDetails","nameLocation":"1353:15:6","nodeType":"VariableDeclaration","scope":1238,"src":"1319:49:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"},"typeName":{"id":1213,"nodeType":"UserDefinedTypeName","pathNode":{"id":1212,"name":"SignatureTransferDetails","nameLocations":["1319:24:6"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"1319:24:6"},"referencedDeclaration":1853,"src":"1319:24:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"owner","nameLocation":"1386:5:6","nodeType":"VariableDeclaration","scope":1238,"src":"1378:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"1378:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"witness","nameLocation":"1409:7:6","nodeType":"VariableDeclaration","scope":1238,"src":"1401:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1401:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"witnessTypeString","nameLocation":"1442:17:6","nodeType":"VariableDeclaration","scope":1238,"src":"1426:33:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1219,"name":"string","nodeType":"ElementaryTypeName","src":"1426:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"signature","nameLocation":"1484:9:6","nodeType":"VariableDeclaration","scope":1238,"src":"1469:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1221,"name":"bytes","nodeType":"ElementaryTypeName","src":"1469:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1267:232:6"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[],"src":"1509:0:6"},"scope":1577,"src":"1233:429:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1309,"nodeType":"Block","src":"2392:477:6","statements":[{"assignments":[1255],"declarations":[{"constant":false,"id":1255,"mutability":"mutable","name":"requestedAmount","nameLocation":"2410:15:6","nodeType":"VariableDeclaration","scope":1309,"src":"2402:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2402:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1258,"initialValue":{"expression":{"id":1256,"name":"transferDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2428:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2444:15:6","memberName":"requestedAmount","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"2428:31:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2402:57:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1259,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2474:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2480:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"2474:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1261,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"2492:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":1262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2499:8:6","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1847,"src":"2492:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2474:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1269,"nodeType":"IfStatement","src":"2470:79:6","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1265,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"2533:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":1266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2540:8:6","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1847,"src":"2533:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1264,"name":"SignatureExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"2516:16:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2516:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"RevertStatement","src":"2509:40:6"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1270,"name":"requestedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"2563:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"expression":{"id":1271,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"2581:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":1272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2588:9:6","memberName":"permitted","nodeType":"MemberAccess","referencedDeclaration":1843,"src":"2581:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}},"id":1273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2598:6:6","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1839,"src":"2581:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2563:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1281,"nodeType":"IfStatement","src":"2559:92:6","trueBody":{"errorCall":{"arguments":[{"expression":{"expression":{"id":1276,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"2627:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":1277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2634:9:6","memberName":"permitted","nodeType":"MemberAccess","referencedDeclaration":1843,"src":"2627:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}},"id":1278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2644:6:6","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1839,"src":"2627:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1275,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"2613:13:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2613:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1280,"nodeType":"RevertStatement","src":"2606:45:6"}},{"expression":{"arguments":[{"id":1283,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2681:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1284,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"2688:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":1285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2695:5:6","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1845,"src":"2688:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1282,"name":"_useUnorderedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"2662:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2662:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"2662:39:6"},{"expression":{"arguments":[{"arguments":[{"id":1292,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"2744:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1291,"name":"_hashTypedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"2729:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2755:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1288,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"2712:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2722:6:6","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":2875,"src":"2712:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$returns$__$bound_to$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,bytes32,address) view"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2712:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"ExpressionStatement","src":"2712:49:6"},{"expression":{"arguments":[{"id":1303,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2819:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1304,"name":"transferDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"2826:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2842:2:6","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":1850,"src":"2826:18:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1306,"name":"requestedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"2846:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"expression":{"id":1298,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"2778:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":1299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2785:9:6","memberName":"permitted","nodeType":"MemberAccess","referencedDeclaration":1843,"src":"2778:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}},"id":1300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2795:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1837,"src":"2778:22:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1297,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2772:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$387_$","typeString":"type(contract ERC20)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2802:16:6","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":431,"src":"2772:46:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_ERC20_$387_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$387_$","typeString":"function (contract ERC20,address,address,uint256)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1308,"nodeType":"ExpressionStatement","src":"2772:90:6"}]},"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"1668:492:6","text":"@notice Transfers a token using a signed permit message.\n @dev If to is the zero address, the tokens are sent to the spender.\n @param permit The permit data signed over by the owner\n @param dataHash The EIP-712 hash of permit data to include when checking signature\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param signature The signature to verify"},"id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"_permitTransferFrom","nameLocation":"2174:19:6","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"permit","nameLocation":"2229:6:6","nodeType":"VariableDeclaration","scope":1310,"src":"2203:32:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"},"typeName":{"id":1241,"nodeType":"UserDefinedTypeName","pathNode":{"id":1240,"name":"PermitTransferFrom","nameLocations":["2203:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":1848,"src":"2203:18:6"},"referencedDeclaration":1848,"src":"2203:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_storage_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"transferDetails","nameLocation":"2279:15:6","nodeType":"VariableDeclaration","scope":1310,"src":"2245:49:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"},"typeName":{"id":1244,"nodeType":"UserDefinedTypeName","pathNode":{"id":1243,"name":"SignatureTransferDetails","nameLocations":["2245:24:6"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"2245:24:6"},"referencedDeclaration":1853,"src":"2245:24:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"owner","nameLocation":"2312:5:6","nodeType":"VariableDeclaration","scope":1310,"src":"2304:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"2304:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"dataHash","nameLocation":"2335:8:6","nodeType":"VariableDeclaration","scope":1310,"src":"2327:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2327:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"signature","nameLocation":"2368:9:6","nodeType":"VariableDeclaration","scope":1310,"src":"2353:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"2353:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2193:190:6"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"2392:0:6"},"scope":1577,"src":"2165:704:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[1919],"body":{"id":1335,"nodeType":"Block","src":"3122:94:6","statements":[{"expression":{"arguments":[{"id":1326,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"3152:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},{"id":1327,"name":"transferDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"3160:15:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"}},{"id":1328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"3177:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1329,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"3184:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":1330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3191:4:6","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":2513,"src":"3184:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PermitBatchTransferFrom_$1862_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_PermitBatchTransferFrom_$1862_memory_ptr_$","typeString":"function (struct ISignatureTransfer.PermitBatchTransferFrom memory) view returns (bytes32)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3184:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1332,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"3199:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"},{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1325,"name":"_permitTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1310,1482],"referencedDeclaration":1482,"src":"3132:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PermitBatchTransferFrom_$1862_memory_ptr_$_t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr_$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct ISignatureTransfer.PermitBatchTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata,address,bytes32,bytes calldata)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3132:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1334,"nodeType":"ExpressionStatement","src":"3132:77:6"}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"2875:34:6","text":"@inheritdoc ISignatureTransfer"},"functionSelector":"edd9444b","id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"permitTransferFrom","nameLocation":"2923:18:6","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"permit","nameLocation":"2982:6:6","nodeType":"VariableDeclaration","scope":1336,"src":"2951:37:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"},"typeName":{"id":1313,"nodeType":"UserDefinedTypeName","pathNode":{"id":1312,"name":"PermitBatchTransferFrom","nameLocations":["2951:23:6"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"2951:23:6"},"referencedDeclaration":1862,"src":"2951:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_storage_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"transferDetails","nameLocation":"3034:15:6","nodeType":"VariableDeclaration","scope":1336,"src":"2998:51:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"},"typeName":{"baseType":{"id":1316,"nodeType":"UserDefinedTypeName","pathNode":{"id":1315,"name":"SignatureTransferDetails","nameLocations":["2998:24:6"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"2998:24:6"},"referencedDeclaration":1853,"src":"2998:24:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"id":1317,"nodeType":"ArrayTypeName","src":"2998:26:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_storage_$dyn_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"owner","nameLocation":"3067:5:6","nodeType":"VariableDeclaration","scope":1336,"src":"3059:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"3059:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"signature","nameLocation":"3097:9:6","nodeType":"VariableDeclaration","scope":1336,"src":"3082:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1321,"name":"bytes","nodeType":"ElementaryTypeName","src":"3082:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2941:171:6"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[],"src":"3122:0:6"},"scope":1577,"src":"2914:302:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1938],"body":{"id":1367,"nodeType":"Block","src":"3544:153:6","statements":[{"expression":{"arguments":[{"id":1356,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"3587:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},{"id":1357,"name":"transferDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"3595:15:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"}},{"id":1358,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"3612:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1361,"name":"witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"3642:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1362,"name":"witnessTypeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"3651:17:6","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"expression":{"id":1359,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"3619:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":1360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3626:15:6","memberName":"hashWithWitness","nodeType":"MemberAccess","referencedDeclaration":2641,"src":"3619:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PermitBatchTransferFrom_$1862_memory_ptr_$_t_bytes32_$_t_string_calldata_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_PermitBatchTransferFrom_$1862_memory_ptr_$","typeString":"function (struct ISignatureTransfer.PermitBatchTransferFrom memory,bytes32,string calldata) view returns (bytes32)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1364,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"3671:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"},{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1355,"name":"_permitTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1310,1482],"referencedDeclaration":1482,"src":"3554:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PermitBatchTransferFrom_$1862_memory_ptr_$_t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr_$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct ISignatureTransfer.PermitBatchTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata,address,bytes32,bytes calldata)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:136:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"ExpressionStatement","src":"3554:136:6"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"3222:34:6","text":"@inheritdoc ISignatureTransfer"},"functionSelector":"fe8ec1a7","id":1368,"implemented":true,"kind":"function","modifiers":[],"name":"permitWitnessTransferFrom","nameLocation":"3270:25:6","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"permit","nameLocation":"3336:6:6","nodeType":"VariableDeclaration","scope":1368,"src":"3305:37:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"},"typeName":{"id":1339,"nodeType":"UserDefinedTypeName","pathNode":{"id":1338,"name":"PermitBatchTransferFrom","nameLocations":["3305:23:6"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"3305:23:6"},"referencedDeclaration":1862,"src":"3305:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_storage_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"transferDetails","nameLocation":"3388:15:6","nodeType":"VariableDeclaration","scope":1368,"src":"3352:51:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"},"typeName":{"baseType":{"id":1342,"nodeType":"UserDefinedTypeName","pathNode":{"id":1341,"name":"SignatureTransferDetails","nameLocations":["3352:24:6"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"3352:24:6"},"referencedDeclaration":1853,"src":"3352:24:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"id":1343,"nodeType":"ArrayTypeName","src":"3352:26:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_storage_$dyn_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"}},"visibility":"internal"},{"constant":false,"id":1346,"mutability":"mutable","name":"owner","nameLocation":"3421:5:6","nodeType":"VariableDeclaration","scope":1368,"src":"3413:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"3413:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"witness","nameLocation":"3444:7:6","nodeType":"VariableDeclaration","scope":1368,"src":"3436:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3436:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"witnessTypeString","nameLocation":"3477:17:6","nodeType":"VariableDeclaration","scope":1368,"src":"3461:33:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1349,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"signature","nameLocation":"3519:9:6","nodeType":"VariableDeclaration","scope":1368,"src":"3504:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1351,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3295:239:6"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"3544:0:6"},"scope":1577,"src":"3261:436:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1481,"nodeType":"Block","src":"4336:960:6","statements":[{"assignments":[1386],"declarations":[{"constant":false,"id":1386,"mutability":"mutable","name":"numPermitted","nameLocation":"4354:12:6","nodeType":"VariableDeclaration","scope":1481,"src":"4346:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"4346:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1390,"initialValue":{"expression":{"expression":{"id":1387,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4369:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":1388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4376:9:6","memberName":"permitted","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"4369:16:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenPermissions_$1840_memory_ptr_$dyn_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory[] memory"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4386:6:6","memberName":"length","nodeType":"MemberAccess","src":"4369:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4346:46:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1391,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4407:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4413:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"4407:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1393,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4425:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":1394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4432:8:6","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"4425:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4407:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"4403:79:6","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1397,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4466:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":1398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4473:8:6","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"4466:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1396,"name":"SignatureExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"4449:16:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4449:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"RevertStatement","src":"4442:40:6"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"numPermitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"4496:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1403,"name":"transferDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"4512:15:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4528:6:6","memberName":"length","nodeType":"MemberAccess","src":"4512:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4496:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1409,"nodeType":"IfStatement","src":"4492:67:6","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1406,"name":"LengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"4543:14:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4543:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1408,"nodeType":"RevertStatement","src":"4536:23:6"}},{"expression":{"arguments":[{"id":1411,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"4589:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1412,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4596:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":1413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4603:5:6","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1859,"src":"4596:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1410,"name":"_useUnorderedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"4570:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1415,"nodeType":"ExpressionStatement","src":"4570:39:6"},{"expression":{"arguments":[{"arguments":[{"id":1420,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"4651:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1419,"name":"_hashTypedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4636:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1422,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"4662:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1416,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"4619:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4629:6:6","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":2875,"src":"4619:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_calldata_ptr_$_t_bytes32_$_t_address_$returns$__$bound_to$_t_bytes_calldata_ptr_$","typeString":"function (bytes calldata,bytes32,address) view"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1424,"nodeType":"ExpressionStatement","src":"4619:49:6"},{"id":1480,"nodeType":"UncheckedBlock","src":"4679:611:6","statements":[{"body":{"id":1478,"nodeType":"Block","src":"4746:534:6","statements":[{"assignments":[1437],"declarations":[{"constant":false,"id":1437,"mutability":"mutable","name":"permitted","nameLocation":"4788:9:6","nodeType":"VariableDeclaration","scope":1478,"src":"4764:33:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions"},"typeName":{"id":1436,"nodeType":"UserDefinedTypeName","pathNode":{"id":1435,"name":"TokenPermissions","nameLocations":["4764:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":1840,"src":"4764:16:6"},"referencedDeclaration":1840,"src":"4764:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions"}},"visibility":"internal"}],"id":1442,"initialValue":{"baseExpression":{"expression":{"id":1438,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4800:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":1439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4807:9:6","memberName":"permitted","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"4800:16:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenPermissions_$1840_memory_ptr_$dyn_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory[] memory"}},"id":1441,"indexExpression":{"id":1440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"4817:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4800:19:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}},"nodeType":"VariableDeclarationStatement","src":"4764:55:6"},{"assignments":[1444],"declarations":[{"constant":false,"id":1444,"mutability":"mutable","name":"requestedAmount","nameLocation":"4845:15:6","nodeType":"VariableDeclaration","scope":1478,"src":"4837:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"4837:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1449,"initialValue":{"expression":{"baseExpression":{"id":1445,"name":"transferDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"4863:15:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"}},"id":1447,"indexExpression":{"id":1446,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"4879:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4863:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4882:15:6","memberName":"requestedAmount","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"4863:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4837:60:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1450,"name":"requestedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"4920:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1451,"name":"permitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4938:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}},"id":1452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4948:6:6","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1839,"src":"4938:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4920:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"4916:78:6","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1455,"name":"permitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4977:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}},"id":1456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4987:6:6","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1839,"src":"4977:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1454,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"4963:13:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4963:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"RevertStatement","src":"4956:38:6"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"requestedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"5017:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5036:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5017:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1477,"nodeType":"IfStatement","src":"5013:253:6","trueBody":{"id":1476,"nodeType":"Block","src":"5039:227:6","statements":[{"expression":{"arguments":[{"id":1468,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"5201:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":1469,"name":"transferDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"5208:15:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata[] calldata"}},"id":1471,"indexExpression":{"id":1470,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"5224:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5208:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails calldata"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5227:2:6","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":1850,"src":"5208:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1473,"name":"requestedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"5231:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1464,"name":"permitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"5167:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}},"id":1465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5177:5:6","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":1837,"src":"5167:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1463,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5161:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$387_$","typeString":"type(contract ERC20)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5161:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5184:16:6","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":431,"src":"5161:39:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_ERC20_$387_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$387_$","typeString":"function (contract ERC20,address,address,uint256)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5161:86:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1475,"nodeType":"ExpressionStatement","src":"5161:86:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1429,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"4723:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1430,"name":"numPermitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"4727:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4723:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1479,"initializationExpression":{"assignments":[1426],"declarations":[{"constant":false,"id":1426,"mutability":"mutable","name":"i","nameLocation":"4716:1:6","nodeType":"VariableDeclaration","scope":1479,"src":"4708:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"4708:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1428,"initialValue":{"hexValue":"30","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4720:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4708:13:6"},"loopExpression":{"expression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4741:3:6","subExpression":{"id":1432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"4743:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1434,"nodeType":"ExpressionStatement","src":"4741:3:6"},"nodeType":"ForStatement","src":"4703:577:6"}]}]},"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"3703:394:6","text":"@notice Transfers tokens using a signed permit messages\n @dev If to is the zero address, the tokens are sent to the spender\n @param permit The permit data signed over by the owner\n @param dataHash The EIP-712 hash of permit data to include when checking signature\n @param owner The owner of the tokens to transfer\n @param signature The signature to verify"},"id":1482,"implemented":true,"kind":"function","modifiers":[],"name":"_permitTransferFrom","nameLocation":"4111:19:6","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"permit","nameLocation":"4171:6:6","nodeType":"VariableDeclaration","scope":1482,"src":"4140:37:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"},"typeName":{"id":1371,"nodeType":"UserDefinedTypeName","pathNode":{"id":1370,"name":"PermitBatchTransferFrom","nameLocations":["4140:23:6"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"4140:23:6"},"referencedDeclaration":1862,"src":"4140:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_storage_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"transferDetails","nameLocation":"4223:15:6","nodeType":"VariableDeclaration","scope":1482,"src":"4187:51:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"},"typeName":{"baseType":{"id":1374,"nodeType":"UserDefinedTypeName","pathNode":{"id":1373,"name":"SignatureTransferDetails","nameLocations":["4187:24:6"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"4187:24:6"},"referencedDeclaration":1853,"src":"4187:24:6","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"id":1375,"nodeType":"ArrayTypeName","src":"4187:26:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_storage_$dyn_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"owner","nameLocation":"4256:5:6","nodeType":"VariableDeclaration","scope":1482,"src":"4248:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"4248:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"dataHash","nameLocation":"4279:8:6","nodeType":"VariableDeclaration","scope":1482,"src":"4271:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4271:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1382,"mutability":"mutable","name":"signature","nameLocation":"4312:9:6","nodeType":"VariableDeclaration","scope":1482,"src":"4297:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1381,"name":"bytes","nodeType":"ElementaryTypeName","src":"4297:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4130:197:6"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[],"src":"4336:0:6"},"scope":1577,"src":"4102:1194:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[1946],"body":{"id":1506,"nodeType":"Block","src":"5416:126:6","statements":[{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1490,"name":"nonceBitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"5426:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1494,"indexExpression":{"expression":{"id":1491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5438:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5442:6:6","memberName":"sender","nodeType":"MemberAccess","src":"5438:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5426:23:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1495,"indexExpression":{"id":1493,"name":"wordPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"5450:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5426:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"id":1496,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"5462:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5426:40:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1498,"nodeType":"ExpressionStatement","src":"5426:40:6"},{"eventCall":{"arguments":[{"expression":{"id":1500,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5509:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5513:6:6","memberName":"sender","nodeType":"MemberAccess","src":"5509:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1502,"name":"wordPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"5521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1503,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"5530:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1499,"name":"UnorderedNonceInvalidation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"5482:26:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1505,"nodeType":"EmitStatement","src":"5477:58:6"}]},"documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"5302:34:6","text":"@inheritdoc ISignatureTransfer"},"functionSelector":"3ff9dcb1","id":1507,"implemented":true,"kind":"function","modifiers":[],"name":"invalidateUnorderedNonces","nameLocation":"5350:25:6","nodeType":"FunctionDefinition","parameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"wordPos","nameLocation":"5384:7:6","nodeType":"VariableDeclaration","scope":1507,"src":"5376:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1487,"mutability":"mutable","name":"mask","nameLocation":"5401:4:6","nodeType":"VariableDeclaration","scope":1507,"src":"5393:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5375:31:6"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[],"src":"5416:0:6"},"scope":1577,"src":"5341:201:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1533,"nodeType":"Block","src":"6120:77:6","statements":[{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1517,"name":"wordPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"6130:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1520,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"6148:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6157:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"6148:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6140:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":1518,"name":"uint248","nodeType":"ElementaryTypeName","src":"6140:7:6","typeDescriptions":{}}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"6130:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1525,"nodeType":"ExpressionStatement","src":"6130:29:6"},{"expression":{"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1526,"name":"bitPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"6169:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1529,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"6184:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6178:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1527,"name":"uint8","nodeType":"ElementaryTypeName","src":"6178:5:6","typeDescriptions":{}}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6178:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6169:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1532,"nodeType":"ExpressionStatement","src":"6169:21:6"}]},"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"5548:472:6","text":"@notice Returns the index of the bitmap and the bit position within the bitmap. Used for unordered nonces\n @param nonce The nonce to get the associated word and bit positions\n @return wordPos The word position or index into the nonceBitmap\n @return bitPos The bit position\n @dev The first 248 bits of the nonce value is the index of the desired bitmap\n @dev The last 8 bits of the nonce value is the position of the bit in the bitmap"},"id":1534,"implemented":true,"kind":"function","modifiers":[],"name":"bitmapPositions","nameLocation":"6034:15:6","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"nonce","nameLocation":"6058:5:6","nodeType":"VariableDeclaration","scope":1534,"src":"6050:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6049:15:6"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"wordPos","nameLocation":"6095:7:6","nodeType":"VariableDeclaration","scope":1534,"src":"6087:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"6087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"bitPos","nameLocation":"6112:6:6","nodeType":"VariableDeclaration","scope":1534,"src":"6104:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"6104:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6086:33:6"},"scope":1577,"src":"6025:172:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1575,"nodeType":"Block","src":"6481:227:6","statements":[{"assignments":[1543,1545],"declarations":[{"constant":false,"id":1543,"mutability":"mutable","name":"wordPos","nameLocation":"6500:7:6","nodeType":"VariableDeclaration","scope":1575,"src":"6492:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"6492:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"bitPos","nameLocation":"6517:6:6","nodeType":"VariableDeclaration","scope":1575,"src":"6509:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"6509:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1549,"initialValue":{"arguments":[{"id":1547,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"6543:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1546,"name":"bitmapPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"6527:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6527:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6491:58:6"},{"assignments":[1551],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"bit","nameLocation":"6567:3:6","nodeType":"VariableDeclaration","scope":1575,"src":"6559:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6559:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1555,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6573:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1553,"name":"bitPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"6578:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6573:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6559:25:6"},{"assignments":[1557],"declarations":[{"constant":false,"id":1557,"mutability":"mutable","name":"flipped","nameLocation":"6602:7:6","nodeType":"VariableDeclaration","scope":1575,"src":"6594:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"6594:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1565,"initialValue":{"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1558,"name":"nonceBitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"6612:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1560,"indexExpression":{"id":1559,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"6624:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6612:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1562,"indexExpression":{"id":1561,"name":"wordPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"6630:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6612:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"id":1563,"name":"bit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"6642:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6612:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6594:51:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1566,"name":"flipped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"6660:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1567,"name":"bit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"6670:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6660:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6677:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6660:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1574,"nodeType":"IfStatement","src":"6656:45:6","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1571,"name":"InvalidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6687:12:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6687:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1573,"nodeType":"RevertStatement","src":"6680:21:6"}}]},"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"6203:207:6","text":"@notice Checks whether a nonce is taken and sets the bit at the bit position in the bitmap at the word position\n @param from The address to use the nonce at\n @param nonce The nonce to spend"},"id":1576,"implemented":true,"kind":"function","modifiers":[],"name":"_useUnorderedNonce","nameLocation":"6424:18:6","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"from","nameLocation":"6451:4:6","nodeType":"VariableDeclaration","scope":1576,"src":"6443:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1536,"name":"address","nodeType":"ElementaryTypeName","src":"6443:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1539,"mutability":"mutable","name":"nonce","nameLocation":"6465:5:6","nodeType":"VariableDeclaration","scope":1576,"src":"6457:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"6457:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6442:29:6"},"returnParameters":{"id":1541,"nodeType":"ParameterList","parameters":[],"src":"6481:0:6"},"scope":1577,"src":"6415:293:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1578,"src":"503:6207:6","usedErrors":[1136,1139,1823,1826,2714,2717,2720,2723]}],"src":"32:6679:6"}},"src/interfaces/IAllowanceTransfer.sol":{"id":7,"ast":{"absolutePath":"src/interfaces/IAllowanceTransfer.sol","exportedSymbols":{"IAllowanceTransfer":[1779]},"id":1780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1579,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IAllowanceTransfer","contractDependencies":[],"contractKind":"interface","documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"58:233:7","text":"@title AllowanceTransfer\n @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n @dev Requires user's token approval on the Permit2 contract"},"fullyImplemented":false,"id":1779,"linearizedBaseContracts":[1779],"name":"IAllowanceTransfer","nameLocation":"301:18:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"326:145:7","text":"@notice Thrown when an allowance on a token has expired.\n @param deadline The timestamp at which the allowed amount is no longer valid"},"errorSelector":"d81b2f2e","id":1585,"name":"AllowanceExpired","nameLocation":"482:16:7","nodeType":"ErrorDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"deadline","nameLocation":"507:8:7","nodeType":"VariableDeclaration","scope":1585,"src":"499:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"499:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"498:18:7"},"src":"476:41:7"},{"documentation":{"id":1586,"nodeType":"StructuredDocumentation","src":"523:115:7","text":"@notice Thrown when an allowance on a token has been depleted.\n @param amount The maximum amount allowed"},"errorSelector":"f96fb071","id":1590,"name":"InsufficientAllowance","nameLocation":"649:21:7","nodeType":"ErrorDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"amount","nameLocation":"679:6:7","nodeType":"VariableDeclaration","scope":1590,"src":"671:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"671:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"670:16:7"},"src":"643:44:7"},{"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"693:56:7","text":"@notice Thrown when too many nonces are invalidated."},"errorSelector":"24d35a26","id":1593,"name":"ExcessiveInvalidation","nameLocation":"760:21:7","nodeType":"ErrorDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[],"src":"781:2:7"},"src":"754:30:7"},{"anonymous":false,"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"790:84:7","text":"@notice Emits an event when the owner successfully invalidates an ordered nonce."},"eventSelector":"55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f3","id":1606,"name":"NonceInvalidation","nameLocation":"885:17:7","nodeType":"EventDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"928:5:7","nodeType":"VariableDeclaration","scope":1606,"src":"912:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1598,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"951:5:7","nodeType":"VariableDeclaration","scope":1606,"src":"935:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"974:7:7","nodeType":"VariableDeclaration","scope":1606,"src":"958:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"958:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1602,"indexed":false,"mutability":"mutable","name":"newNonce","nameLocation":"990:8:7","nodeType":"VariableDeclaration","scope":1606,"src":"983:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1601,"name":"uint48","nodeType":"ElementaryTypeName","src":"983:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1604,"indexed":false,"mutability":"mutable","name":"oldNonce","nameLocation":"1007:8:7","nodeType":"VariableDeclaration","scope":1606,"src":"1000:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1603,"name":"uint48","nodeType":"ElementaryTypeName","src":"1000:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"902:119:7"},"src":"879:143:7"},{"anonymous":false,"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"1028:99:7","text":"@notice Emits an event when the owner successfully sets permissions on a token for the spender."},"eventSelector":"da9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b","id":1619,"name":"Approval","nameLocation":"1138:8:7","nodeType":"EventDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1172:5:7","nodeType":"VariableDeclaration","scope":1619,"src":"1156:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"1156:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1611,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1195:5:7","nodeType":"VariableDeclaration","scope":1619,"src":"1179:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"1179:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1613,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"1218:7:7","nodeType":"VariableDeclaration","scope":1619,"src":"1202:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1615,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1235:6:7","nodeType":"VariableDeclaration","scope":1619,"src":"1227:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1614,"name":"uint160","nodeType":"ElementaryTypeName","src":"1227:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1617,"indexed":false,"mutability":"mutable","name":"expiration","nameLocation":"1250:10:7","nodeType":"VariableDeclaration","scope":1619,"src":"1243:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1616,"name":"uint48","nodeType":"ElementaryTypeName","src":"1243:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1146:120:7"},"src":"1132:135:7"},{"anonymous":false,"documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"1273:124:7","text":"@notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."},"eventSelector":"c6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec","id":1634,"name":"Permit","nameLocation":"1408:6:7","nodeType":"EventDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1440:5:7","nodeType":"VariableDeclaration","scope":1634,"src":"1424:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"1424:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1624,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1471:5:7","nodeType":"VariableDeclaration","scope":1634,"src":"1455:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1626,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"1502:7:7","nodeType":"VariableDeclaration","scope":1634,"src":"1486:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1628,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1527:6:7","nodeType":"VariableDeclaration","scope":1634,"src":"1519:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1627,"name":"uint160","nodeType":"ElementaryTypeName","src":"1519:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1630,"indexed":false,"mutability":"mutable","name":"expiration","nameLocation":"1550:10:7","nodeType":"VariableDeclaration","scope":1634,"src":"1543:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1629,"name":"uint48","nodeType":"ElementaryTypeName","src":"1543:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1632,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1577:5:7","nodeType":"VariableDeclaration","scope":1634,"src":"1570:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1631,"name":"uint48","nodeType":"ElementaryTypeName","src":"1570:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1414:174:7"},"src":"1402:187:7"},{"anonymous":false,"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"1595:98:7","text":"@notice Emits an event when the owner sets the allowance back to 0 with the lockdown function."},"eventSelector":"89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4","id":1643,"name":"Lockdown","nameLocation":"1704:8:7","nodeType":"EventDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1729:5:7","nodeType":"VariableDeclaration","scope":1643,"src":"1713:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"1713:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1639,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1744:5:7","nodeType":"VariableDeclaration","scope":1643,"src":"1736:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"1736:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1641,"indexed":false,"mutability":"mutable","name":"spender","nameLocation":"1759:7:7","nodeType":"VariableDeclaration","scope":1643,"src":"1751:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1712:55:7"},"src":"1698:70:7"},{"canonicalName":"IAllowanceTransfer.PermitDetails","id":1652,"members":[{"constant":false,"id":1645,"mutability":"mutable","name":"token","nameLocation":"1888:5:7","nodeType":"VariableDeclaration","scope":1652,"src":"1880:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"amount","nameLocation":"1958:6:7","nodeType":"VariableDeclaration","scope":1652,"src":"1950:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1646,"name":"uint160","nodeType":"ElementaryTypeName","src":"1950:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1649,"mutability":"mutable","name":"expiration","nameLocation":"2055:10:7","nodeType":"VariableDeclaration","scope":1652,"src":"2048:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1648,"name":"uint48","nodeType":"ElementaryTypeName","src":"2048:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"nonce","nameLocation":"2170:5:7","nodeType":"VariableDeclaration","scope":1652,"src":"2163:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1650,"name":"uint48","nodeType":"ElementaryTypeName","src":"2163:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"PermitDetails","nameLocation":"1825:13:7","nodeType":"StructDefinition","scope":1779,"src":"1818:364:7","visibility":"public"},{"canonicalName":"IAllowanceTransfer.PermitSingle","id":1660,"members":[{"constant":false,"id":1655,"mutability":"mutable","name":"details","nameLocation":"2356:7:7","nodeType":"VariableDeclaration","scope":1660,"src":"2342:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails"},"typeName":{"id":1654,"nodeType":"UserDefinedTypeName","pathNode":{"id":1653,"name":"PermitDetails","nameLocations":["2342:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"2342:13:7"},"referencedDeclaration":1652,"src":"2342:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"spender","nameLocation":"2435:7:7","nodeType":"VariableDeclaration","scope":1660,"src":"2427:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"sigDeadline","nameLocation":"2504:11:7","nodeType":"VariableDeclaration","scope":1660,"src":"2496:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2496:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitSingle","nameLocation":"2265:12:7","nodeType":"StructDefinition","scope":1779,"src":"2258:264:7","visibility":"public"},{"canonicalName":"IAllowanceTransfer.PermitBatch","id":1669,"members":[{"constant":false,"id":1664,"mutability":"mutable","name":"details","nameLocation":"2702:7:7","nodeType":"VariableDeclaration","scope":1669,"src":"2686:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitDetails_$1652_storage_$dyn_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails[]"},"typeName":{"baseType":{"id":1662,"nodeType":"UserDefinedTypeName","pathNode":{"id":1661,"name":"PermitDetails","nameLocations":["2686:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"2686:13:7"},"referencedDeclaration":1652,"src":"2686:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails"}},"id":1663,"nodeType":"ArrayTypeName","src":"2686:15:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitDetails_$1652_storage_$dyn_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails[]"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"spender","nameLocation":"2781:7:7","nodeType":"VariableDeclaration","scope":1669,"src":"2773:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"2773:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"sigDeadline","nameLocation":"2850:11:7","nodeType":"VariableDeclaration","scope":1669,"src":"2842:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2842:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitBatch","nameLocation":"2607:11:7","nodeType":"StructDefinition","scope":1779,"src":"2600:268:7","visibility":"public"},{"canonicalName":"IAllowanceTransfer.PackedAllowance","id":1676,"members":[{"constant":false,"id":1671,"mutability":"mutable","name":"amount","nameLocation":"3163:6:7","nodeType":"VariableDeclaration","scope":1676,"src":"3155:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1670,"name":"uint160","nodeType":"ElementaryTypeName","src":"3155:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"expiration","nameLocation":"3215:10:7","nodeType":"VariableDeclaration","scope":1676,"src":"3208:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1672,"name":"uint48","nodeType":"ElementaryTypeName","src":"3208:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"nonce","nameLocation":"3330:5:7","nodeType":"VariableDeclaration","scope":1676,"src":"3323:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1674,"name":"uint48","nodeType":"ElementaryTypeName","src":"3323:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"PackedAllowance","nameLocation":"3103:15:7","nodeType":"StructDefinition","scope":1779,"src":"3096:246:7","visibility":"public"},{"canonicalName":"IAllowanceTransfer.TokenSpenderPair","id":1681,"members":[{"constant":false,"id":1678,"mutability":"mutable","name":"token","nameLocation":"3473:5:7","nodeType":"VariableDeclaration","scope":1681,"src":"3465:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"3465:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"spender","nameLocation":"3527:7:7","nodeType":"VariableDeclaration","scope":1681,"src":"3519:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1679,"name":"address","nodeType":"ElementaryTypeName","src":"3519:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TokenSpenderPair","nameLocation":"3393:16:7","nodeType":"StructDefinition","scope":1779,"src":"3386:155:7","visibility":"public"},{"canonicalName":"IAllowanceTransfer.AllowanceTransferDetails","id":1690,"members":[{"constant":false,"id":1683,"mutability":"mutable","name":"from","nameLocation":"3677:4:7","nodeType":"VariableDeclaration","scope":1690,"src":"3669:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"3669:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"to","nameLocation":"3737:2:7","nodeType":"VariableDeclaration","scope":1690,"src":"3729:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"3729:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1687,"mutability":"mutable","name":"amount","nameLocation":"3792:6:7","nodeType":"VariableDeclaration","scope":1690,"src":"3784:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1686,"name":"uint160","nodeType":"ElementaryTypeName","src":"3784:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1689,"mutability":"mutable","name":"token","nameLocation":"3855:5:7","nodeType":"VariableDeclaration","scope":1690,"src":"3847:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"3847:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AllowanceTransferDetails","nameLocation":"3600:24:7","nodeType":"StructDefinition","scope":1779,"src":"3593:274:7","visibility":"public"},{"documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"3873:455:7","text":"@notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."},"functionSelector":"927da105","id":1706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4342:9:7","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"4352:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"4361:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"4361:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"4370:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:27:7"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"4402:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1699,"name":"uint160","nodeType":"ElementaryTypeName","src":"4402:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"4411:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1701,"name":"uint48","nodeType":"ElementaryTypeName","src":"4411:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"4419:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1703,"name":"uint48","nodeType":"ElementaryTypeName","src":"4419:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4401:25:7"},"scope":1779,"src":"4333:94:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"4433:498:7","text":"@notice Approves the spender to use up to amount of the specified token up until the expiration\n @param token The token to approve\n @param spender The spender address to approve\n @param amount The approved amount of the token\n @param expiration The timestamp at which the approval is no longer valid\n @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n @dev Setting amount to type(uint160).max sets an unlimited approval"},"functionSelector":"87517c45","id":1718,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4945:7:7","nodeType":"FunctionDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"token","nameLocation":"4961:5:7","nodeType":"VariableDeclaration","scope":1718,"src":"4953:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"4953:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"spender","nameLocation":"4976:7:7","nodeType":"VariableDeclaration","scope":1718,"src":"4968:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"4968:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1713,"mutability":"mutable","name":"amount","nameLocation":"4993:6:7","nodeType":"VariableDeclaration","scope":1718,"src":"4985:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1712,"name":"uint160","nodeType":"ElementaryTypeName","src":"4985:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"expiration","nameLocation":"5008:10:7","nodeType":"VariableDeclaration","scope":1718,"src":"5001:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1714,"name":"uint48","nodeType":"ElementaryTypeName","src":"5001:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4952:67:7"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[],"src":"5028:0:7"},"scope":1779,"src":"4936:93:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"5035:407:7","text":"@notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitSingle Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"},"functionSelector":"2b67b570","id":1729,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"5456:6:7","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"owner","nameLocation":"5471:5:7","nodeType":"VariableDeclaration","scope":1729,"src":"5463:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"5463:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"permitSingle","nameLocation":"5498:12:7","nodeType":"VariableDeclaration","scope":1729,"src":"5478:32:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle"},"typeName":{"id":1723,"nodeType":"UserDefinedTypeName","pathNode":{"id":1722,"name":"PermitSingle","nameLocations":["5478:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1660,"src":"5478:12:7"},"referencedDeclaration":1660,"src":"5478:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_storage_ptr","typeString":"struct IAllowanceTransfer.PermitSingle"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"signature","nameLocation":"5527:9:7","nodeType":"VariableDeclaration","scope":1729,"src":"5512:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1725,"name":"bytes","nodeType":"ElementaryTypeName","src":"5512:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5462:75:7"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[],"src":"5546:0:7"},"scope":1779,"src":"5447:100:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"5553:411:7","text":"@notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitBatch Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"},"functionSelector":"2a2d80d1","id":1740,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"5978:6:7","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"owner","nameLocation":"5993:5:7","nodeType":"VariableDeclaration","scope":1740,"src":"5985:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"5985:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"permitBatch","nameLocation":"6019:11:7","nodeType":"VariableDeclaration","scope":1740,"src":"6000:30:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"},"typeName":{"id":1734,"nodeType":"UserDefinedTypeName","pathNode":{"id":1733,"name":"PermitBatch","nameLocations":["6000:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1669,"src":"6000:11:7"},"referencedDeclaration":1669,"src":"6000:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_storage_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"signature","nameLocation":"6047:9:7","nodeType":"VariableDeclaration","scope":1740,"src":"6032:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1736,"name":"bytes","nodeType":"ElementaryTypeName","src":"6032:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5984:73:7"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[],"src":"6066:0:7"},"scope":1779,"src":"5969:98:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"6073:386:7","text":"@notice Transfer approved tokens from one address to another\n @param from The address to transfer from\n @param to The address of the recipient\n @param amount The amount of the token to transfer\n @param token The token address to transfer\n @dev Requires the from address to have approved at least the desired amount\n of tokens to msg.sender."},"functionSelector":"36c78516","id":1752,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6473:12:7","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"from","nameLocation":"6494:4:7","nodeType":"VariableDeclaration","scope":1752,"src":"6486:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"6486:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1745,"mutability":"mutable","name":"to","nameLocation":"6508:2:7","nodeType":"VariableDeclaration","scope":1752,"src":"6500:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"6500:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1747,"mutability":"mutable","name":"amount","nameLocation":"6520:6:7","nodeType":"VariableDeclaration","scope":1752,"src":"6512:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1746,"name":"uint160","nodeType":"ElementaryTypeName","src":"6512:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"token","nameLocation":"6536:5:7","nodeType":"VariableDeclaration","scope":1752,"src":"6528:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"6528:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6485:57:7"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[],"src":"6551:0:7"},"scope":1779,"src":"6464:88:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"6558:264:7","text":"@notice Transfer approved tokens in a batch\n @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n @dev Requires the from addresses to have approved at least the desired amount\n of tokens to msg.sender."},"functionSelector":"0d58b1db","id":1760,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6836:12:7","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"transferDetails","nameLocation":"6885:15:7","nodeType":"VariableDeclaration","scope":1760,"src":"6849:51:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AllowanceTransferDetails_$1690_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails[]"},"typeName":{"baseType":{"id":1755,"nodeType":"UserDefinedTypeName","pathNode":{"id":1754,"name":"AllowanceTransferDetails","nameLocations":["6849:24:7"],"nodeType":"IdentifierPath","referencedDeclaration":1690,"src":"6849:24:7"},"referencedDeclaration":1690,"src":"6849:24:7","typeDescriptions":{"typeIdentifier":"t_struct$_AllowanceTransferDetails_$1690_storage_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails"}},"id":1756,"nodeType":"ArrayTypeName","src":"6849:26:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AllowanceTransferDetails_$1690_storage_$dyn_storage_ptr","typeString":"struct IAllowanceTransfer.AllowanceTransferDetails[]"}},"visibility":"internal"}],"src":"6848:53:7"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"6910:0:7"},"scope":1779,"src":"6827:84:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"6917:167:7","text":"@notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n by batch revoking approvals\n @param approvals Array of approvals to revoke."},"functionSelector":"cc53287f","id":1768,"implemented":false,"kind":"function","modifiers":[],"name":"lockdown","nameLocation":"7098:8:7","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"approvals","nameLocation":"7135:9:7","nodeType":"VariableDeclaration","scope":1768,"src":"7107:37:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenSpenderPair_$1681_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair[]"},"typeName":{"baseType":{"id":1763,"nodeType":"UserDefinedTypeName","pathNode":{"id":1762,"name":"TokenSpenderPair","nameLocations":["7107:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":1681,"src":"7107:16:7"},"referencedDeclaration":1681,"src":"7107:16:7","typeDescriptions":{"typeIdentifier":"t_struct$_TokenSpenderPair_$1681_storage_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair"}},"id":1764,"nodeType":"ArrayTypeName","src":"7107:18:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenSpenderPair_$1681_storage_$dyn_storage_ptr","typeString":"struct IAllowanceTransfer.TokenSpenderPair[]"}},"visibility":"internal"}],"src":"7106:39:7"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[],"src":"7154:0:7"},"scope":1779,"src":"7089:66:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"7161:332:7","text":"@notice Invalidate nonces for a given (token, spender) pair\n @param token The token to invalidate nonces for\n @param spender The spender to invalidate nonces for\n @param newNonce The new nonce to set. Invalidates all nonces less than it.\n @dev Can't invalidate more than 2**16 nonces per transaction."},"functionSelector":"65d9723c","id":1778,"implemented":false,"kind":"function","modifiers":[],"name":"invalidateNonces","nameLocation":"7507:16:7","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"token","nameLocation":"7532:5:7","nodeType":"VariableDeclaration","scope":1778,"src":"7524:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"7524:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"spender","nameLocation":"7547:7:7","nodeType":"VariableDeclaration","scope":1778,"src":"7539:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"newNonce","nameLocation":"7563:8:7","nodeType":"VariableDeclaration","scope":1778,"src":"7556:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1774,"name":"uint48","nodeType":"ElementaryTypeName","src":"7556:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"7523:49:7"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[],"src":"7581:0:7"},"scope":1779,"src":"7498:84:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1780,"src":"291:7293:7","usedErrors":[1585,1590,1593]}],"src":"32:7553:7"}},"src/interfaces/IDAIPermit.sol":{"id":8,"ast":{"absolutePath":"src/interfaces/IDAIPermit.sol","exportedSymbols":{"IDAIPermit":[1802]},"id":1803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1781,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IDAIPermit","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1802,"linearizedBaseContracts":[1802],"name":"IDAIPermit","nameLocation":"68:10:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"85:631:8","text":"@param holder The address of the token owner.\n @param spender The address of the token spender.\n @param nonce The owner's nonce, increases at each call to permit.\n @param expiry The timestamp at which the permit is no longer valid.\n @param allowed Boolean that sets approval amount, true for type(uint256).max and false for 0.\n @param v Must produce valid secp256k1 signature from the owner along with r and s.\n @param r Must produce valid secp256k1 signature from the owner along with v and s.\n @param s Must produce valid secp256k1 signature from the owner along with r and v."},"functionSelector":"8fcbaf0c","id":1801,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"730:6:8","nodeType":"FunctionDefinition","parameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"holder","nameLocation":"754:6:8","nodeType":"VariableDeclaration","scope":1801,"src":"746:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"746:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"spender","nameLocation":"778:7:8","nodeType":"VariableDeclaration","scope":1801,"src":"770:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1785,"name":"address","nodeType":"ElementaryTypeName","src":"770:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"nonce","nameLocation":"803:5:8","nodeType":"VariableDeclaration","scope":1801,"src":"795:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"expiry","nameLocation":"826:6:8","nodeType":"VariableDeclaration","scope":1801,"src":"818:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"allowed","nameLocation":"847:7:8","nodeType":"VariableDeclaration","scope":1801,"src":"842:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1791,"name":"bool","nodeType":"ElementaryTypeName","src":"842:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"v","nameLocation":"870:1:8","nodeType":"VariableDeclaration","scope":1801,"src":"864:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1793,"name":"uint8","nodeType":"ElementaryTypeName","src":"864:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"r","nameLocation":"889:1:8","nodeType":"VariableDeclaration","scope":1801,"src":"881:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"881:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"s","nameLocation":"908:1:8","nodeType":"VariableDeclaration","scope":1801,"src":"900:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"736:179:8"},"returnParameters":{"id":1800,"nodeType":"ParameterList","parameters":[],"src":"924:0:8"},"scope":1802,"src":"721:204:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1803,"src":"58:869:8","usedErrors":[]}],"src":"32:896:8"}},"src/interfaces/IERC1271.sol":{"id":9,"ast":{"absolutePath":"src/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[1815]},"id":1816,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1804,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1271","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1815,"linearizedBaseContracts":[1815],"name":"IERC1271","nameLocation":"68:8:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1805,"nodeType":"StructuredDocumentation","src":"83:268:9","text":"@dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data\n @return magicValue The bytes4 magic value 0x1626ba7e"},"functionSelector":"1626ba7e","id":1814,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"365:16:9","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"hash","nameLocation":"390:4:9","nodeType":"VariableDeclaration","scope":1814,"src":"382:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"382:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"signature","nameLocation":"409:9:9","nodeType":"VariableDeclaration","scope":1814,"src":"396:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1808,"name":"bytes","nodeType":"ElementaryTypeName","src":"396:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"381:38:9"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"magicValue","nameLocation":"450:10:9","nodeType":"VariableDeclaration","scope":1814,"src":"443:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1811,"name":"bytes4","nodeType":"ElementaryTypeName","src":"443:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"442:19:9"},"scope":1815,"src":"356:106:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1816,"src":"58:406:9","usedErrors":[]}],"src":"32:433:9"}},"src/interfaces/ISignatureTransfer.sol":{"id":10,"ast":{"absolutePath":"src/interfaces/ISignatureTransfer.sol","exportedSymbols":{"ISignatureTransfer":[1947]},"id":1948,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1817,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"ISignatureTransfer","contractDependencies":[],"contractKind":"interface","documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"58:167:10","text":"@title SignatureTransfer\n @notice Handles ERC20 token transfers through signature based actions\n @dev Requires user's token approval on the Permit2 contract"},"fullyImplemented":false,"id":1947,"linearizedBaseContracts":[1947],"name":"ISignatureTransfer","nameLocation":"235:18:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"260:176:10","text":"@notice Thrown when the requested amount for a transfer is larger than the permissioned amount\n @param maxAmount The maximum amount a spender can request to transfer"},"errorSelector":"3728b83d","id":1823,"name":"InvalidAmount","nameLocation":"447:13:10","nodeType":"ErrorDefinition","parameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"maxAmount","nameLocation":"469:9:10","nodeType":"VariableDeclaration","scope":1823,"src":"461:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1820,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"460:19:10"},"src":"441:39:10"},{"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"486:261:10","text":"@notice Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\n @dev If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred"},"errorSelector":"ff633a38","id":1826,"name":"LengthMismatch","nameLocation":"758:14:10","nodeType":"ErrorDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[],"src":"772:2:10"},"src":"752:23:10"},{"anonymous":false,"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"781:86:10","text":"@notice Emits an event when the owner successfully invalidates an unordered nonce."},"eventSelector":"3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d","id":1835,"name":"UnorderedNonceInvalidation","nameLocation":"878:26:10","nodeType":"EventDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"921:5:10","nodeType":"VariableDeclaration","scope":1835,"src":"905:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"905:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1831,"indexed":false,"mutability":"mutable","name":"word","nameLocation":"936:4:10","nodeType":"VariableDeclaration","scope":1835,"src":"928:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1833,"indexed":false,"mutability":"mutable","name":"mask","nameLocation":"950:4:10","nodeType":"VariableDeclaration","scope":1835,"src":"942:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"904:51:10"},"src":"872:84:10"},{"canonicalName":"ISignatureTransfer.TokenPermissions","id":1840,"members":[{"constant":false,"id":1837,"mutability":"mutable","name":"token","nameLocation":"1135:5:10","nodeType":"VariableDeclaration","scope":1840,"src":"1127:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1839,"mutability":"mutable","name":"amount","nameLocation":"1206:6:10","nodeType":"VariableDeclaration","scope":1840,"src":"1198:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1198:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenPermissions","nameLocation":"1069:16:10","nodeType":"StructDefinition","scope":1947,"src":"1062:157:10","visibility":"public"},{"canonicalName":"ISignatureTransfer.PermitTransferFrom","id":1848,"members":[{"constant":false,"id":1843,"mutability":"mutable","name":"permitted","nameLocation":"1348:9:10","nodeType":"VariableDeclaration","scope":1848,"src":"1331:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions"},"typeName":{"id":1842,"nodeType":"UserDefinedTypeName","pathNode":{"id":1841,"name":"TokenPermissions","nameLocations":["1331:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1840,"src":"1331:16:10"},"referencedDeclaration":1840,"src":"1331:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"nonce","nameLocation":"1464:5:10","nodeType":"VariableDeclaration","scope":1848,"src":"1456:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1456:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1847,"mutability":"mutable","name":"deadline","nameLocation":"1531:8:10","nodeType":"VariableDeclaration","scope":1848,"src":"1523:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1523:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitTransferFrom","nameLocation":"1302:18:10","nodeType":"StructDefinition","scope":1947,"src":"1295:251:10","visibility":"public"},{"canonicalName":"ISignatureTransfer.SignatureTransferDetails","id":1853,"members":[{"constant":false,"id":1850,"mutability":"mutable","name":"to","nameLocation":"1902:2:10","nodeType":"VariableDeclaration","scope":1853,"src":"1894:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"1894:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"requestedAmount","nameLocation":"1958:15:10","nodeType":"VariableDeclaration","scope":1853,"src":"1950:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1950:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SignatureTransferDetails","nameLocation":"1830:24:10","nodeType":"StructDefinition","scope":1947,"src":"1823:157:10","visibility":"public"},{"canonicalName":"ISignatureTransfer.PermitBatchTransferFrom","id":1862,"members":[{"constant":false,"id":1857,"mutability":"mutable","name":"permitted","nameLocation":"2367:9:10","nodeType":"VariableDeclaration","scope":1862,"src":"2348:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenPermissions_$1840_storage_$dyn_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions[]"},"typeName":{"baseType":{"id":1855,"nodeType":"UserDefinedTypeName","pathNode":{"id":1854,"name":"TokenPermissions","nameLocations":["2348:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1840,"src":"2348:16:10"},"referencedDeclaration":1840,"src":"2348:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions"}},"id":1856,"nodeType":"ArrayTypeName","src":"2348:18:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenPermissions_$1840_storage_$dyn_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions[]"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"nonce","nameLocation":"2483:5:10","nodeType":"VariableDeclaration","scope":1862,"src":"2475:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2475:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1861,"mutability":"mutable","name":"deadline","nameLocation":"2550:8:10","nodeType":"VariableDeclaration","scope":1862,"src":"2542:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PermitBatchTransferFrom","nameLocation":"2241:23:10","nodeType":"StructDefinition","scope":1947,"src":"2234:331:10","visibility":"public"},{"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"2571:483:10","text":"@notice A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\n @dev Uses unordered nonces so that permit messages do not need to be spent in a certain order\n @dev The mapping is indexed first by the token owner, then by an index specified in the nonce\n @dev It returns a uint256 bitmap\n @dev The index, or wordPosition is capped at type(uint248).max"},"functionSelector":"4fe02b44","id":1872,"implemented":false,"kind":"function","modifiers":[],"name":"nonceBitmap","nameLocation":"3068:11:10","nodeType":"FunctionDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"3080:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"3080:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"3089:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"3089:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3079:18:10"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"3121:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"3121:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3120:9:10"},"scope":1947,"src":"3059:71:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"3136:413:10","text":"@notice Transfers a token using a signed permit message\n @dev Reverts if the requested amount is greater than the permitted signed amount\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param signature The signature to verify"},"functionSelector":"30f28b7a","id":1886,"implemented":false,"kind":"function","modifiers":[],"name":"permitTransferFrom","nameLocation":"3563:18:10","nodeType":"FunctionDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"permit","nameLocation":"3617:6:10","nodeType":"VariableDeclaration","scope":1886,"src":"3591:32:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"},"typeName":{"id":1875,"nodeType":"UserDefinedTypeName","pathNode":{"id":1874,"name":"PermitTransferFrom","nameLocations":["3591:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":1848,"src":"3591:18:10"},"referencedDeclaration":1848,"src":"3591:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_storage_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"transferDetails","nameLocation":"3667:15:10","nodeType":"VariableDeclaration","scope":1886,"src":"3633:49:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"},"typeName":{"id":1878,"nodeType":"UserDefinedTypeName","pathNode":{"id":1877,"name":"SignatureTransferDetails","nameLocations":["3633:24:10"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"3633:24:10"},"referencedDeclaration":1853,"src":"3633:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"owner","nameLocation":"3700:5:10","nodeType":"VariableDeclaration","scope":1886,"src":"3692:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"3692:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"signature","nameLocation":"3730:9:10","nodeType":"VariableDeclaration","scope":1886,"src":"3715:24:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"3715:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3581:164:10"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[],"src":"3754:0:10"},"scope":1947,"src":"3554:201:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"3761:815:10","text":"@notice Transfers a token using a signed permit message\n @notice Includes extra data provided by the caller to verify signature over\n @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n @dev Reverts if the requested amount is greater than the permitted signed amount\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param witness Extra data to include when checking the user signature\n @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n @param signature The signature to verify"},"functionSelector":"137c29fe","id":1904,"implemented":false,"kind":"function","modifiers":[],"name":"permitWitnessTransferFrom","nameLocation":"4590:25:10","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"permit","nameLocation":"4651:6:10","nodeType":"VariableDeclaration","scope":1904,"src":"4625:32:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"},"typeName":{"id":1889,"nodeType":"UserDefinedTypeName","pathNode":{"id":1888,"name":"PermitTransferFrom","nameLocations":["4625:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":1848,"src":"4625:18:10"},"referencedDeclaration":1848,"src":"4625:18:10","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_storage_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"transferDetails","nameLocation":"4701:15:10","nodeType":"VariableDeclaration","scope":1904,"src":"4667:49:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"},"typeName":{"id":1892,"nodeType":"UserDefinedTypeName","pathNode":{"id":1891,"name":"SignatureTransferDetails","nameLocations":["4667:24:10"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"4667:24:10"},"referencedDeclaration":1853,"src":"4667:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"owner","nameLocation":"4734:5:10","nodeType":"VariableDeclaration","scope":1904,"src":"4726:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1894,"name":"address","nodeType":"ElementaryTypeName","src":"4726:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"witness","nameLocation":"4757:7:10","nodeType":"VariableDeclaration","scope":1904,"src":"4749:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"witnessTypeString","nameLocation":"4790:17:10","nodeType":"VariableDeclaration","scope":1904,"src":"4774:33:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1898,"name":"string","nodeType":"ElementaryTypeName","src":"4774:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"signature","nameLocation":"4832:9:10","nodeType":"VariableDeclaration","scope":1904,"src":"4817:24:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1900,"name":"bytes","nodeType":"ElementaryTypeName","src":"4817:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4615:232:10"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[],"src":"4856:0:10"},"scope":1947,"src":"4581:276:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"4863:335:10","text":"@notice Transfers multiple tokens using a signed permit message\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails Specifies the recipient and requested amount for the token transfer\n @param signature The signature to verify"},"functionSelector":"edd9444b","id":1919,"implemented":false,"kind":"function","modifiers":[],"name":"permitTransferFrom","nameLocation":"5212:18:10","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"permit","nameLocation":"5271:6:10","nodeType":"VariableDeclaration","scope":1919,"src":"5240:37:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"},"typeName":{"id":1907,"nodeType":"UserDefinedTypeName","pathNode":{"id":1906,"name":"PermitBatchTransferFrom","nameLocations":["5240:23:10"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"5240:23:10"},"referencedDeclaration":1862,"src":"5240:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_storage_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"transferDetails","nameLocation":"5323:15:10","nodeType":"VariableDeclaration","scope":1919,"src":"5287:51:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"},"typeName":{"baseType":{"id":1910,"nodeType":"UserDefinedTypeName","pathNode":{"id":1909,"name":"SignatureTransferDetails","nameLocations":["5287:24:10"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"5287:24:10"},"referencedDeclaration":1853,"src":"5287:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"id":1911,"nodeType":"ArrayTypeName","src":"5287:26:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_storage_$dyn_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"owner","nameLocation":"5356:5:10","nodeType":"VariableDeclaration","scope":1919,"src":"5348:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"5348:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"signature","nameLocation":"5386:9:10","nodeType":"VariableDeclaration","scope":1919,"src":"5371:24:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1915,"name":"bytes","nodeType":"ElementaryTypeName","src":"5371:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:171:10"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[],"src":"5410:0:10"},"scope":1947,"src":"5203:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1920,"nodeType":"StructuredDocumentation","src":"5417:737:10","text":"@notice Transfers multiple tokens using a signed permit message\n @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n @notice Includes extra data provided by the caller to verify signature over\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails Specifies the recipient and requested amount for the token transfer\n @param witness Extra data to include when checking the user signature\n @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n @param signature The signature to verify"},"functionSelector":"fe8ec1a7","id":1938,"implemented":false,"kind":"function","modifiers":[],"name":"permitWitnessTransferFrom","nameLocation":"6168:25:10","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"permit","nameLocation":"6234:6:10","nodeType":"VariableDeclaration","scope":1938,"src":"6203:37:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"},"typeName":{"id":1922,"nodeType":"UserDefinedTypeName","pathNode":{"id":1921,"name":"PermitBatchTransferFrom","nameLocations":["6203:23:10"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"6203:23:10"},"referencedDeclaration":1862,"src":"6203:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_storage_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"transferDetails","nameLocation":"6286:15:10","nodeType":"VariableDeclaration","scope":1938,"src":"6250:51:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"},"typeName":{"baseType":{"id":1925,"nodeType":"UserDefinedTypeName","pathNode":{"id":1924,"name":"SignatureTransferDetails","nameLocations":["6250:24:10"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"6250:24:10"},"referencedDeclaration":1853,"src":"6250:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_SignatureTransferDetails_$1853_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails"}},"id":1926,"nodeType":"ArrayTypeName","src":"6250:26:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SignatureTransferDetails_$1853_storage_$dyn_storage_ptr","typeString":"struct ISignatureTransfer.SignatureTransferDetails[]"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"owner","nameLocation":"6319:5:10","nodeType":"VariableDeclaration","scope":1938,"src":"6311:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"6311:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"witness","nameLocation":"6342:7:10","nodeType":"VariableDeclaration","scope":1938,"src":"6334:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6334:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"witnessTypeString","nameLocation":"6375:17:10","nodeType":"VariableDeclaration","scope":1938,"src":"6359:33:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1932,"name":"string","nodeType":"ElementaryTypeName","src":"6359:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"signature","nameLocation":"6417:9:10","nodeType":"VariableDeclaration","scope":1938,"src":"6402:24:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1934,"name":"bytes","nodeType":"ElementaryTypeName","src":"6402:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6193:239:10"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"6441:0:10"},"scope":1947,"src":"6159:283:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"6448:294:10","text":"@notice Invalidates the bits specified in mask for the bitmap at the word position\n @dev The wordPos is maxed at type(uint248).max\n @param wordPos A number to index the nonceBitmap at\n @param mask A bitmap masked against msg.sender's current bitmap at the word position"},"functionSelector":"3ff9dcb1","id":1946,"implemented":false,"kind":"function","modifiers":[],"name":"invalidateUnorderedNonces","nameLocation":"6756:25:10","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"wordPos","nameLocation":"6790:7:10","nodeType":"VariableDeclaration","scope":1946,"src":"6782:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"mask","nameLocation":"6807:4:10","nodeType":"VariableDeclaration","scope":1946,"src":"6799:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"6799:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6781:31:10"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[],"src":"6821:0:10"},"scope":1947,"src":"6747:75:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1948,"src":"225:6599:10","usedErrors":[1823,1826]}],"src":"32:6793:10"}},"src/libraries/Allowance.sol":{"id":11,"ast":{"absolutePath":"src/libraries/Allowance.sol","exportedSymbols":{"Allowance":[2066],"IAllowanceTransfer":[1779]},"id":2067,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1949,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:11"},{"absolutePath":"src/interfaces/IAllowanceTransfer.sol","file":"../interfaces/IAllowanceTransfer.sol","id":1951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2067,"sourceUnit":1780,"src":"58:72:11","symbolAliases":[{"foreign":{"id":1950,"name":"IAllowanceTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"66:18:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Allowance","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2066,"linearizedBaseContracts":[2066],"name":"Allowance","nameLocation":"140:9:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1954,"mutability":"constant","name":"BLOCK_TIMESTAMP_EXPIRATION","nameLocation":"272:26:11","nodeType":"VariableDeclaration","scope":2066,"src":"247:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"247:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"301:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"body":{"id":1999,"nodeType":"Block","src":"711:355:11","statements":[{"assignments":[1968],"declarations":[{"constant":false,"id":1968,"mutability":"mutable","name":"storedNonce","nameLocation":"728:11:11","nodeType":"VariableDeclaration","scope":1999,"src":"721:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1967,"name":"uint48","nodeType":"ElementaryTypeName","src":"721:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":1969,"nodeType":"VariableDeclarationStatement","src":"721:18:11"},{"id":1976,"nodeType":"UncheckedBlock","src":"749:58:11","statements":[{"expression":{"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1970,"name":"storedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"773:11:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1971,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"787:5:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"787:9:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"773:23:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":1975,"nodeType":"ExpressionStatement","src":"773:23:11"}]},{"assignments":[1978],"declarations":[{"constant":false,"id":1978,"mutability":"mutable","name":"storedExpiration","nameLocation":"824:16:11","nodeType":"VariableDeclaration","scope":1999,"src":"817:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1977,"name":"uint48","nodeType":"ElementaryTypeName","src":"817:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":1989,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"843:10:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1980,"name":"BLOCK_TIMESTAMP_EXPIRATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"857:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"843:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1987,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"912:10:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"843:79:11","trueExpression":{"arguments":[{"expression":{"id":1984,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"893:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"899:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"893:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"886:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":1982,"name":"uint48","nodeType":"ElementaryTypeName","src":"886:6:11","typeDescriptions":{}}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"886:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"817:105:11"},{"assignments":[1991],"declarations":[{"constant":false,"id":1991,"mutability":"mutable","name":"word","nameLocation":"941:4:11","nodeType":"VariableDeclaration","scope":1999,"src":"933:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1997,"initialValue":{"arguments":[{"id":1993,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"953:6:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":1994,"name":"storedExpiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"961:16:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":1995,"name":"storedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"979:11:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":1992,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"948:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint48_$_t_uint48_$returns$_t_uint256_$","typeString":"function (uint160,uint48,uint48) pure returns (uint256)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"948:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"933:58:11"},{"AST":{"nodeType":"YulBlock","src":"1010:50:11","statements":[{"expression":{"arguments":[{"name":"allowed.slot","nodeType":"YulIdentifier","src":"1031:12:11"},{"name":"word","nodeType":"YulIdentifier","src":"1045:4:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1024:6:11"},"nodeType":"YulFunctionCall","src":"1024:26:11"},"nodeType":"YulExpressionStatement","src":"1024:26:11"}]},"evmVersion":"london","externalReferences":[{"declaration":1958,"isOffset":false,"isSlot":true,"src":"1031:12:11","suffix":"slot","valueSize":1},{"declaration":1991,"isOffset":false,"isSlot":false,"src":"1045:4:11","valueSize":1}],"id":1998,"nodeType":"InlineAssembly","src":"1001:59:11"}]},"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"309:230:11","text":"@notice Sets the allowed amount, expiry, and nonce of the spender's permissions on owner's token.\n @dev Nonce is incremented.\n @dev If the inputted expiration is 0, the stored expiration is set to block.timestamp"},"id":2000,"implemented":true,"kind":"function","modifiers":[],"name":"updateAll","nameLocation":"553:9:11","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"allowed","nameLocation":"615:7:11","nodeType":"VariableDeclaration","scope":2000,"src":"572:50:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"},"typeName":{"id":1957,"nodeType":"UserDefinedTypeName","pathNode":{"id":1956,"name":"IAllowanceTransfer.PackedAllowance","nameLocations":["572:18:11","591:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":1676,"src":"572:34:11"},"referencedDeclaration":1676,"src":"572:34:11","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"amount","nameLocation":"640:6:11","nodeType":"VariableDeclaration","scope":2000,"src":"632:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1959,"name":"uint160","nodeType":"ElementaryTypeName","src":"632:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"expiration","nameLocation":"663:10:11","nodeType":"VariableDeclaration","scope":2000,"src":"656:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1961,"name":"uint48","nodeType":"ElementaryTypeName","src":"656:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"nonce","nameLocation":"690:5:11","nodeType":"VariableDeclaration","scope":2000,"src":"683:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1963,"name":"uint48","nodeType":"ElementaryTypeName","src":"683:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"562:139:11"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[],"src":"711:0:11"},"scope":2066,"src":"544:522:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2032,"nodeType":"Block","src":"1383:221:11","statements":[{"expression":{"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2011,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"1489:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance storage pointer"}},"id":2013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1497:10:11","memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"1489:18:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"1510:10:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1524:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1510:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2022,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"1554:10:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1510:54:11","trueExpression":{"arguments":[{"expression":{"id":2019,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1535:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1541:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"1535:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2017,"name":"uint48","nodeType":"ElementaryTypeName","src":"1528:6:11","typeDescriptions":{}}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1489:75:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2025,"nodeType":"ExpressionStatement","src":"1489:75:11"},{"expression":{"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2026,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"1574:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance storage pointer"}},"id":2028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1582:6:11","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1671,"src":"1574:14:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2029,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"1591:6:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"1574:23:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":2031,"nodeType":"ExpressionStatement","src":"1574:23:11"}]},"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"1072:145:11","text":"@notice Sets the allowed amount and expiry of the spender's permissions on owner's token.\n @dev Nonce does not need to be incremented."},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"updateAmountAndExpiration","nameLocation":"1231:25:11","nodeType":"FunctionDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"allowed","nameLocation":"1309:7:11","nodeType":"VariableDeclaration","scope":2033,"src":"1266:50:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"},"typeName":{"id":2003,"nodeType":"UserDefinedTypeName","pathNode":{"id":2002,"name":"IAllowanceTransfer.PackedAllowance","nameLocations":["1266:18:11","1285:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":1676,"src":"1266:34:11"},"referencedDeclaration":1676,"src":"1266:34:11","typeDescriptions":{"typeIdentifier":"t_struct$_PackedAllowance_$1676_storage_ptr","typeString":"struct IAllowanceTransfer.PackedAllowance"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"amount","nameLocation":"1334:6:11","nodeType":"VariableDeclaration","scope":2033,"src":"1326:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2005,"name":"uint160","nodeType":"ElementaryTypeName","src":"1326:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":2008,"mutability":"mutable","name":"expiration","nameLocation":"1357:10:11","nodeType":"VariableDeclaration","scope":2033,"src":"1350:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2007,"name":"uint48","nodeType":"ElementaryTypeName","src":"1350:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1256:117:11"},"returnParameters":{"id":2010,"nodeType":"ParameterList","parameters":[],"src":"1383:0:11"},"scope":2066,"src":"1222:382:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2064,"nodeType":"Block","src":"1817:85:11","statements":[{"expression":{"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2045,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1827:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2048,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"1843:5:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1835:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1835:7:11","typeDescriptions":{}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1835:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323038","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1853:3:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},"src":"1835:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1834:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2055,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"1868:10:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1860:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1860:7:11","typeDescriptions":{}}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1883:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1860:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1834:52:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2060,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"1889:6:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"1834:61:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1827:68:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2063,"nodeType":"ExpressionStatement","src":"1827:68:11"}]},"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"1610:102:11","text":"@notice Computes the packed slot of the amount, expiration, and nonce that make up PackedAllowance"},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"1726:4:11","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"amount","nameLocation":"1739:6:11","nodeType":"VariableDeclaration","scope":2065,"src":"1731:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2035,"name":"uint160","nodeType":"ElementaryTypeName","src":"1731:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"expiration","nameLocation":"1754:10:11","nodeType":"VariableDeclaration","scope":2065,"src":"1747:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2037,"name":"uint48","nodeType":"ElementaryTypeName","src":"1747:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"nonce","nameLocation":"1773:5:11","nodeType":"VariableDeclaration","scope":2065,"src":"1766:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2039,"name":"uint48","nodeType":"ElementaryTypeName","src":"1766:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1730:49:11"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"word","nameLocation":"1811:4:11","nodeType":"VariableDeclaration","scope":2065,"src":"1803:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1803:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1802:14:11"},"scope":2066,"src":"1717:185:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2067,"src":"132:1772:11","usedErrors":[]}],"src":"32:1873:11"}},"src/libraries/Permit2Lib.sol":{"id":12,"ast":{"absolutePath":"src/libraries/Permit2Lib.sol","exportedSymbols":{"ERC20":[387],"IAllowanceTransfer":[1779],"IDAIPermit":[1802],"Permit2":[1129],"Permit2Lib":[2276],"SafeCast160":[2707]},"id":2277,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2068,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:12"},{"absolutePath":"lib/solmate/src/tokens/ERC20.sol","file":"../../lib/solmate/src/tokens/ERC20.sol","id":2070,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2277,"sourceUnit":388,"src":"58:61:12","symbolAliases":[{"foreign":{"id":2069,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"66:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/Permit2.sol","file":"../Permit2.sol","id":2072,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2277,"sourceUnit":1130,"src":"121:39:12","symbolAliases":[{"foreign":{"id":2071,"name":"Permit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"129:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/interfaces/IDAIPermit.sol","file":"../interfaces/IDAIPermit.sol","id":2074,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2277,"sourceUnit":1803,"src":"161:56:12","symbolAliases":[{"foreign":{"id":2073,"name":"IDAIPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"169:10:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/interfaces/IAllowanceTransfer.sol","file":"../interfaces/IAllowanceTransfer.sol","id":2076,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2277,"sourceUnit":1780,"src":"218:72:12","symbolAliases":[{"foreign":{"id":2075,"name":"IAllowanceTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"226:18:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/libraries/SafeCast160.sol","file":"./SafeCast160.sol","id":2078,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2277,"sourceUnit":2708,"src":"291:46:12","symbolAliases":[{"foreign":{"id":2077,"name":"SafeCast160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"299:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Permit2Lib","contractDependencies":[],"contractKind":"library","documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"339:133:12","text":"@title Permit2Lib\n @notice Enables efficient transfers and EIP-2612/DAI\n permits for any token by falling back to Permit2."},"fullyImplemented":true,"id":2276,"linearizedBaseContracts":[2276],"name":"Permit2Lib","nameLocation":"480:10:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2082,"libraryName":{"id":2080,"name":"SafeCast160","nameLocations":["503:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2707,"src":"503:11:12"},"nodeType":"UsingForDirective","src":"497:30:12","typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"519:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"713:79:12","text":"@dev The unique EIP-712 domain domain separator for the DAI token contract."},"id":2086,"mutability":"constant","name":"DAI_DOMAIN_SEPARATOR","nameLocation":"823:20:12","nodeType":"VariableDeclaration","scope":2276,"src":"797:115:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"797:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864626238636634326531656362303238626533663364626339323265316438373862393633663431316463333838636564353031363031633630663763366637","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"846:66:12","typeDescriptions":{"typeIdentifier":"t_rational_99383044164297460920199564169379472118763403594000230800569066591923778078455_by_1","typeString":"int_const 9938...(69 digits omitted)...8455"},"value":"0xdbb8cf42e1ecb028be3f3dbc922e1d878b963f411dc388ced501601c60f7c6f7"},"visibility":"internal"},{"constant":true,"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"919:66:12","text":"@dev The address of the Permit2 contract the library will use."},"id":2096,"mutability":"constant","name":"PERMIT2","nameLocation":"1016:7:12","nodeType":"VariableDeclaration","scope":2276,"src":"990:96:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Permit2_$1129","typeString":"contract Permit2"},"typeName":{"id":2089,"nodeType":"UserDefinedTypeName","pathNode":{"id":2088,"name":"Permit2","nameLocations":["990:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1129,"src":"990:7:12"},"referencedDeclaration":1129,"src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_Permit2_$1129","typeString":"contract Permit2"}},"value":{"arguments":[{"arguments":[{"hexValue":"307830303030303030303030323244343733303330463131366444454539463642343361433738424133","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1042:42:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000022D473030F116dDEE9F6B43aC78BA3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1034:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2091,"name":"address","nodeType":"ElementaryTypeName","src":"1034:7:12","typeDescriptions":{}}},"id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1034:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2090,"name":"Permit2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"1026:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Permit2_$1129_$","typeString":"type(contract Permit2)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1026:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Permit2_$1129","typeString":"contract Permit2"}},"visibility":"internal"},{"body":{"id":2142,"nodeType":"Block","src":"1436:1185:12","statements":[{"assignments":[2110],"declarations":[{"constant":false,"id":2110,"mutability":"mutable","name":"inputData","nameLocation":"1522:9:12","nodeType":"VariableDeclaration","scope":2142,"src":"1509:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2109,"name":"bytes","nodeType":"ElementaryTypeName","src":"1509:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2120,"initialValue":{"arguments":[{"expression":{"id":2113,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1549:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$387_$","typeString":"type(contract ERC20)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1555:12:12","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":198,"src":"1549:18:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function ERC20.transferFrom(address,address,uint256) returns (bool)"}},{"components":[{"id":2115,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"1570:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"1576:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1580:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1569:18:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function ERC20.transferFrom(address,address,uint256) returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":2111,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1534:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1538:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"1534:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1534:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1509:79:12"},{"assignments":[2122],"declarations":[{"constant":false,"id":2122,"mutability":"mutable","name":"success","nameLocation":"1604:7:12","nodeType":"VariableDeclaration","scope":2142,"src":"1599:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2121,"name":"bool","nodeType":"ElementaryTypeName","src":"1599:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2123,"nodeType":"VariableDeclarationStatement","src":"1599:12:12"},{"AST":{"nodeType":"YulBlock","src":"1700:724:12","statements":[{"nodeType":"YulAssignment","src":"1714:700:12","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1965:1:12","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1959:5:12"},"nodeType":"YulFunctionCall","src":"1959:8:12"},{"kind":"number","nodeType":"YulLiteral","src":"1969:1:12","type":"","value":"1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1956:2:12"},"nodeType":"YulFunctionCall","src":"1956:15:12"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1980:14:12"},"nodeType":"YulFunctionCall","src":"1980:16:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1973:6:12"},"nodeType":"YulFunctionCall","src":"1973:24:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1953:2:12"},"nodeType":"YulFunctionCall","src":"1953:45:12"},{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"2335:3:12"},"nodeType":"YulFunctionCall","src":"2335:5:12"},{"name":"token","nodeType":"YulIdentifier","src":"2342:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"2349:1:12","type":"","value":"0"},{"arguments":[{"name":"inputData","nodeType":"YulIdentifier","src":"2356:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"2367:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2352:3:12"},"nodeType":"YulFunctionCall","src":"2352:18:12"},{"arguments":[{"name":"inputData","nodeType":"YulIdentifier","src":"2378:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2372:5:12"},"nodeType":"YulFunctionCall","src":"2372:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"2390:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2393:2:12","type":"","value":"32"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"2330:4:12"},"nodeType":"YulFunctionCall","src":"2330:66:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1741:3:12"},"nodeType":"YulFunctionCall","src":"1741:673:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"1714:7:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2110,"isOffset":false,"isSlot":false,"src":"2356:9:12","valueSize":1},{"declaration":2110,"isOffset":false,"isSlot":false,"src":"2378:9:12","valueSize":1},{"declaration":2122,"isOffset":false,"isSlot":false,"src":"1714:7:12","valueSize":1},{"declaration":2100,"isOffset":false,"isSlot":false,"src":"2342:5:12","valueSize":1}],"id":2124,"nodeType":"InlineAssembly","src":"1691:733:12"},{"condition":{"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2538:8:12","subExpression":{"id":2125,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2539:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2141,"nodeType":"IfStatement","src":"2534:80:12","trueBody":{"expression":{"arguments":[{"id":2130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"2569:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"2575:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2132,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"2579:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2586:9:12","memberName":"toUint160","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"2579:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint160)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2579:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"arguments":[{"id":2137,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"2607:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2599:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:12","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2127,"name":"PERMIT2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"2548:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_Permit2_$1129","typeString":"contract Permit2"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2556:12:12","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":694,"src":"2548:20:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint160_$_t_address_$returns$__$","typeString":"function (address,address,uint160,address) external"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2548:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2140,"nodeType":"ExpressionStatement","src":"2548:66:12"}}]},"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"1093:251:12","text":"@notice Transfer a given amount of tokens from one user to another.\n @param token The token to transfer.\n @param from The user to transfer from.\n @param to The user to transfer to.\n @param amount The amount to transfer."},"id":2143,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom2","nameLocation":"1358:13:12","nodeType":"FunctionDefinition","parameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"token","nameLocation":"1378:5:12","nodeType":"VariableDeclaration","scope":2143,"src":"1372:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"},"typeName":{"id":2099,"nodeType":"UserDefinedTypeName","pathNode":{"id":2098,"name":"ERC20","nameLocations":["1372:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":387,"src":"1372:5:12"},"referencedDeclaration":387,"src":"1372:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"from","nameLocation":"1393:4:12","nodeType":"VariableDeclaration","scope":2143,"src":"1385:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2101,"name":"address","nodeType":"ElementaryTypeName","src":"1385:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2104,"mutability":"mutable","name":"to","nameLocation":"1407:2:12","nodeType":"VariableDeclaration","scope":2143,"src":"1399:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"1399:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2106,"mutability":"mutable","name":"amount","nameLocation":"1419:6:12","nodeType":"VariableDeclaration","scope":2143,"src":"1411:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1411:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1371:55:12"},"returnParameters":{"id":2108,"nodeType":"ParameterList","parameters":[],"src":"1436:0:12"},"scope":2276,"src":"1349:1272:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2274,"nodeType":"Block","src":"3709:2764:12","statements":[{"assignments":[2165],"declarations":[{"constant":false,"id":2165,"mutability":"mutable","name":"inputData","nameLocation":"3806:9:12","nodeType":"VariableDeclaration","scope":2274,"src":"3793:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2164,"name":"bytes","nodeType":"ElementaryTypeName","src":"3793:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2172,"initialValue":{"arguments":[{"expression":{"expression":{"id":2168,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3841:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$387_$","typeString":"type(contract ERC20)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3847:16:12","memberName":"DOMAIN_SEPARATOR","nodeType":"MemberAccess","referencedDeclaration":300,"src":"3841:22:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_bytes32_$","typeString":"function ERC20.DOMAIN_SEPARATOR() view returns (bytes32)"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3864:8:12","memberName":"selector","nodeType":"MemberAccess","src":"3841:31:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2166,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3818:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3822:18:12","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3818:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3793:80:12"},{"assignments":[2174],"declarations":[{"constant":false,"id":2174,"mutability":"mutable","name":"success","nameLocation":"3889:7:12","nodeType":"VariableDeclaration","scope":2274,"src":"3884:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2173,"name":"bool","nodeType":"ElementaryTypeName","src":"3884:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2175,"nodeType":"VariableDeclarationStatement","src":"3884:12:12"},{"assignments":[2177],"declarations":[{"constant":false,"id":2177,"mutability":"mutable","name":"domainSeparator","nameLocation":"3984:15:12","nodeType":"VariableDeclaration","scope":2274,"src":"3976:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3976:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2178,"nodeType":"VariableDeclarationStatement","src":"3976:23:12"},{"AST":{"nodeType":"YulBlock","src":"4081:742:12","statements":[{"nodeType":"YulAssignment","src":"4095:617:12","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4259:1:12","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4253:5:12"},"nodeType":"YulFunctionCall","src":"4253:8:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4246:6:12"},"nodeType":"YulFunctionCall","src":"4246:16:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4239:6:12"},"nodeType":"YulFunctionCall","src":"4239:24:12"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4268:14:12"},"nodeType":"YulFunctionCall","src":"4268:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"4286:2:12","type":"","value":"32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4265:2:12"},"nodeType":"YulFunctionCall","src":"4265:24:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4235:3:12"},"nodeType":"YulFunctionCall","src":"4235:55:12"},{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"4636:3:12"},"nodeType":"YulFunctionCall","src":"4636:5:12"},{"name":"token","nodeType":"YulIdentifier","src":"4643:5:12"},{"arguments":[{"name":"inputData","nodeType":"YulIdentifier","src":"4654:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"4665:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4650:3:12"},"nodeType":"YulFunctionCall","src":"4650:18:12"},{"arguments":[{"name":"inputData","nodeType":"YulIdentifier","src":"4676:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4670:5:12"},"nodeType":"YulFunctionCall","src":"4670:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"4688:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4691:2:12","type":"","value":"32"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4625:10:12"},"nodeType":"YulFunctionCall","src":"4625:69:12"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4122:3:12"},"nodeType":"YulFunctionCall","src":"4122:590:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4095:7:12"}]},{"nodeType":"YulAssignment","src":"4726:27:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4751:1:12","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4745:5:12"},"nodeType":"YulFunctionCall","src":"4745:8:12"},"variableNames":[{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4726:15:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2177,"isOffset":false,"isSlot":false,"src":"4726:15:12","valueSize":1},{"declaration":2165,"isOffset":false,"isSlot":false,"src":"4654:9:12","valueSize":1},{"declaration":2165,"isOffset":false,"isSlot":false,"src":"4676:9:12","valueSize":1},{"declaration":2174,"isOffset":false,"isSlot":false,"src":"4095:7:12","valueSize":1},{"declaration":2147,"isOffset":false,"isSlot":false,"src":"4643:5:12","valueSize":1}],"id":2179,"nodeType":"InlineAssembly","src":"4072:751:12"},{"condition":{"id":2180,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"4922:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2220,"nodeType":"IfStatement","src":"4918:591:12","trueBody":{"id":2219,"nodeType":"Block","src":"4931:578:12","statements":[{"expression":{"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2181,"name":"inputData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"5108:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2182,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"5120:15:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2183,"name":"DAI_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"5139:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5120:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":2204,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"5309:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$387_$","typeString":"type(contract ERC20)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5315:6:12","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":285,"src":"5309:12:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function ERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"}},{"components":[{"id":2206,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"5324:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2207,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"5331:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2208,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"5340:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2209,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"5348:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2210,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"5358:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2211,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"5361:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2212,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5364:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5323:43:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(address,address,uint256,uint256,uint8,bytes32,bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function ERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(address,address,uint256,uint256,uint8,bytes32,bytes32)"}],"expression":{"id":2202,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5294:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5298:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"5294:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5294:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5120:247:12","trueExpression":{"arguments":[{"expression":{"id":2187,"name":"IDAIPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"5193:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDAIPermit_$1802_$","typeString":"type(contract IDAIPermit)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5204:6:12","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1801,"src":"5193:17:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function IDAIPermit.permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"}},{"components":[{"id":2189,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"5213:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2190,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"5220:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2193,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"5242:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2191,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5229:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5235:6:12","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":44,"src":"5229:12:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2195,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"5250:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5260:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2197,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"5266:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2198,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"5269:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2199,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5272:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5212:62:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function IDAIPermit.permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)"}],"expression":{"id":2185,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5178:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5182:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"5178:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5178:97:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5108:259:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2217,"nodeType":"ExpressionStatement","src":"5108:259:12"},{"AST":{"nodeType":"YulBlock","src":"5391:108:12","statements":[{"nodeType":"YulAssignment","src":"5409:76:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"5425:3:12"},"nodeType":"YulFunctionCall","src":"5425:5:12"},{"name":"token","nodeType":"YulIdentifier","src":"5432:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"5439:1:12","type":"","value":"0"},{"arguments":[{"name":"inputData","nodeType":"YulIdentifier","src":"5446:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"5457:2:12","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5442:3:12"},"nodeType":"YulFunctionCall","src":"5442:18:12"},{"arguments":[{"name":"inputData","nodeType":"YulIdentifier","src":"5468:9:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5462:5:12"},"nodeType":"YulFunctionCall","src":"5462:16:12"},{"kind":"number","nodeType":"YulLiteral","src":"5480:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5483:1:12","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"5420:4:12"},"nodeType":"YulFunctionCall","src":"5420:65:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"5409:7:12"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2165,"isOffset":false,"isSlot":false,"src":"5446:9:12","valueSize":1},{"declaration":2165,"isOffset":false,"isSlot":false,"src":"5468:9:12","valueSize":1},{"declaration":2174,"isOffset":false,"isSlot":false,"src":"5409:7:12","valueSize":1},{"declaration":2147,"isOffset":false,"isSlot":false,"src":"5432:5:12","valueSize":1}],"id":2218,"nodeType":"InlineAssembly","src":"5382:117:12"}]}},{"condition":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:12","subExpression":{"id":2221,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"5524:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2273,"nodeType":"IfStatement","src":"5519:948:12","trueBody":{"id":2272,"nodeType":"Block","src":"5533:934:12","statements":[{"assignments":[null,null,2224],"declarations":[null,null,{"constant":false,"id":2224,"mutability":"mutable","name":"nonce","nameLocation":"5713:5:12","nodeType":"VariableDeclaration","scope":2272,"src":"5706:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2223,"name":"uint48","nodeType":"ElementaryTypeName","src":"5706:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2234,"initialValue":{"arguments":[{"id":2227,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"5740:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2230,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5755:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}],"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:12","typeDescriptions":{}}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2232,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"5763:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2225,"name":"PERMIT2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5722:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_Permit2_$1129","typeString":"contract Permit2"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5730:9:12","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":524,"src":"5722:17:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_address_$returns$_t_uint160_$_t_uint48_$_t_uint48_$","typeString":"function (address,address,address) view external returns (uint160,uint48,uint48)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5722:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint48_$_t_uint48_$","typeString":"tuple(uint160,uint48,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"5702:69:12"},{"expression":{"arguments":[{"id":2238,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"5818:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"arguments":[{"id":2245,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"5978:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}],"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5970:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"5970:7:12","typeDescriptions":{}}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5970:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2247,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"6018:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6025:9:12","memberName":"toUint160","nodeType":"MemberAccess","referencedDeclaration":2706,"src":"6018:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint160)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6018:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"arguments":[{"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6223:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2251,"name":"uint48","nodeType":"ElementaryTypeName","src":"6223:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":2250,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6218:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6218:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6231:3:12","memberName":"max","nodeType":"MemberAccess","src":"6218:16:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":2255,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"6267:5:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":2241,"name":"IAllowanceTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"5904:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAllowanceTransfer_$1779_$","typeString":"type(contract IAllowanceTransfer)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5923:13:12","memberName":"PermitDetails","nodeType":"MemberAccess","referencedDeclaration":1652,"src":"5904:32:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PermitDetails_$1652_storage_ptr_$","typeString":"type(struct IAllowanceTransfer.PermitDetails storage pointer)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5963:5:12","6010:6:12","6206:10:12","6260:5:12"],"names":["token","amount","expiration","nonce"],"nodeType":"FunctionCall","src":"5904:391:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}},{"id":2257,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"6326:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2258,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"6368:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2239,"name":"IAllowanceTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"5841:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAllowanceTransfer_$1779_$","typeString":"type(contract IAllowanceTransfer)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5860:12:12","memberName":"PermitSingle","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"5841:31:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PermitSingle_$1660_storage_ptr_$","typeString":"type(struct IAllowanceTransfer.PermitSingle storage pointer)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5895:7:12","6317:7:12","6355:11:12"],"names":["details","spender","sigDeadline"],"nodeType":"FunctionCall","src":"5841:554:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle memory"}},{"arguments":[{"id":2263,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"6426:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2264,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"6429:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2267,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"6439:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6432:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2265,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6432:6:12","typeDescriptions":{}}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6432:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6413:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2260,"name":"bytes","nodeType":"ElementaryTypeName","src":"6413:5:12","typeDescriptions":{}}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6419:6:12","memberName":"concat","nodeType":"MemberAccess","src":"6413:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6413:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2235,"name":"PERMIT2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5786:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_Permit2_$1129","typeString":"contract Permit2"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5794:6:12","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":607,"src":"5786:14:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_struct$_PermitSingle_$1660_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,struct IAllowanceTransfer.PermitSingle memory,bytes memory) external"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5786:670:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2271,"nodeType":"ExpressionStatement","src":"5786:670:12"}]}}]},"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"2809:689:12","text":"@notice Permit a user to spend a given amount of\n another user's tokens via the owner's EIP-712 signature.\n @param token The token to permit spending.\n @param owner The user to permit spending from.\n @param spender The user to permit spending to.\n @param amount The amount to permit spending.\n @param deadline  The timestamp after which the signature is no longer valid.\n @param v Must produce valid secp256k1 signature from the owner along with r and s.\n @param r Must produce valid secp256k1 signature from the owner along with v and s.\n @param s Must produce valid secp256k1 signature from the owner along with r and v."},"id":2275,"implemented":true,"kind":"function","modifiers":[],"name":"permit2","nameLocation":"3512:7:12","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"token","nameLocation":"3535:5:12","nodeType":"VariableDeclaration","scope":2275,"src":"3529:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"},"typeName":{"id":2146,"nodeType":"UserDefinedTypeName","pathNode":{"id":2145,"name":"ERC20","nameLocations":["3529:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":387,"src":"3529:5:12"},"referencedDeclaration":387,"src":"3529:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$387","typeString":"contract ERC20"}},"visibility":"internal"},{"constant":false,"id":2149,"mutability":"mutable","name":"owner","nameLocation":"3558:5:12","nodeType":"VariableDeclaration","scope":2275,"src":"3550:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"3550:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2151,"mutability":"mutable","name":"spender","nameLocation":"3581:7:12","nodeType":"VariableDeclaration","scope":2275,"src":"3573:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"3573:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"amount","nameLocation":"3606:6:12","nodeType":"VariableDeclaration","scope":2275,"src":"3598:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3598:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"deadline","nameLocation":"3630:8:12","nodeType":"VariableDeclaration","scope":2275,"src":"3622:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"3622:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"v","nameLocation":"3654:1:12","nodeType":"VariableDeclaration","scope":2275,"src":"3648:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2156,"name":"uint8","nodeType":"ElementaryTypeName","src":"3648:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"r","nameLocation":"3673:1:12","nodeType":"VariableDeclaration","scope":2275,"src":"3665:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3665:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"s","nameLocation":"3692:1:12","nodeType":"VariableDeclaration","scope":2275,"src":"3684:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3684:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3519:180:12"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[],"src":"3709:0:12"},"scope":2276,"src":"3503:2970:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2277,"src":"472:6003:12","usedErrors":[]}],"src":"32:6444:12"}},"src/libraries/PermitHash.sol":{"id":13,"ast":{"absolutePath":"src/libraries/PermitHash.sol","exportedSymbols":{"IAllowanceTransfer":[1779],"ISignatureTransfer":[1947],"PermitHash":[2676]},"id":2677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2278,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:13"},{"absolutePath":"src/interfaces/IAllowanceTransfer.sol","file":"../interfaces/IAllowanceTransfer.sol","id":2280,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2677,"sourceUnit":1780,"src":"58:72:13","symbolAliases":[{"foreign":{"id":2279,"name":"IAllowanceTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"66:18:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/interfaces/ISignatureTransfer.sol","file":"../interfaces/ISignatureTransfer.sol","id":2282,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2677,"sourceUnit":1948,"src":"131:72:13","symbolAliases":[{"foreign":{"id":2281,"name":"ISignatureTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"139:18:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PermitHash","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2676,"linearizedBaseContracts":[2676],"name":"PermitHash","nameLocation":"213:10:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"6e4f2775","id":2287,"mutability":"constant","name":"_PERMIT_DETAILS_TYPEHASH","nameLocation":"254:24:13","nodeType":"VariableDeclaration","scope":2676,"src":"230:146:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"230:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d697444657461696c73286164647265737320746f6b656e2c75696e7431363020616d6f756e742c75696e7434382065787069726174696f6e2c75696e743438206e6f6e636529","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"299:76:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678","typeString":"literal_string \"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""},"value":"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678","typeString":"literal_string \"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""}],"id":2284,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"289:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"289:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"c5df4f03","id":2292,"mutability":"constant","name":"_PERMIT_SINGLE_TYPEHASH","nameLocation":"407:23:13","nodeType":"VariableDeclaration","scope":2676,"src":"383:222:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"383:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d697453696e676c65285065726d697444657461696c732064657461696c732c61646472657373207370656e6465722c75696e7432353620736967446561646c696e65295065726d697444657461696c73286164647265737320746f6b656e2c75696e7431363020616d6f756e742c75696e7434382065787069726174696f6e2c75696e743438206e6f6e636529","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"452:147:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0","typeString":"literal_string \"PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""},"value":"PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0","typeString":"literal_string \"PermitSingle(PermitDetails details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""}],"id":2289,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"433:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"433:172:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"6302c3cf","id":2297,"mutability":"constant","name":"_PERMIT_BATCH_TYPEHASH","nameLocation":"636:22:13","nodeType":"VariableDeclaration","scope":2676,"src":"612:222:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"612:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69744261746368285065726d697444657461696c735b5d2064657461696c732c61646472657373207370656e6465722c75696e7432353620736967446561646c696e65295065726d697444657461696c73286164647265737320746f6b656e2c75696e7431363020616d6f756e742c75696e7434382065787069726174696f6e2c75696e743438206e6f6e636529","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"680:148:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_af1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863","typeString":"literal_string \"PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""},"value":"PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_af1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863","typeString":"literal_string \"PermitBatch(PermitDetails[] details,address spender,uint256 sigDeadline)PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\""}],"id":2294,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"661:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"661:173:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"415e982d","id":2302,"mutability":"constant","name":"_TOKEN_PERMISSIONS_TYPEHASH","nameLocation":"865:27:13","nodeType":"VariableDeclaration","scope":2676,"src":"841:113:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"841:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"905:48:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1","typeString":"literal_string \"TokenPermissions(address token,uint256 amount)\""},"value":"TokenPermissions(address token,uint256 amount)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1","typeString":"literal_string \"TokenPermissions(address token,uint256 amount)\""}],"id":2299,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"895:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"895:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"78f16830","id":2307,"mutability":"constant","name":"_PERMIT_TRANSFER_FROM_TYPEHASH","nameLocation":"985:30:13","nodeType":"VariableDeclaration","scope":2676,"src":"961:223:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"961:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69745472616e7366657246726f6d28546f6b656e5065726d697373696f6e73207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1037:141:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106","typeString":"literal_string \"PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""},"value":"PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106","typeString":"literal_string \"PermitTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""}],"id":2304,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1018:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1018:166:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"3eb8b8fd","id":2312,"mutability":"constant","name":"_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH","nameLocation":"1215:36:13","nodeType":"VariableDeclaration","scope":2676,"src":"1191:236:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1191:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d697442617463685472616e7366657246726f6d28546f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1273:148:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_fcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766","typeString":"literal_string \"PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""},"value":"PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766","typeString":"literal_string \"PermitBatchTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline)TokenPermissions(address token,uint256 amount)\""}],"id":2309,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1254:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1254:173:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"c0c7fa7e","id":2315,"mutability":"constant","name":"_TOKEN_PERMISSIONS_TYPESTRING","nameLocation":"1457:29:13","nodeType":"VariableDeclaration","scope":2676,"src":"1434:103:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2313,"name":"string","nodeType":"ElementaryTypeName","src":"1434:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1489:48:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1","typeString":"literal_string \"TokenPermissions(address token,uint256 amount)\""},"value":"TokenPermissions(address token,uint256 amount)"},"visibility":"public"},{"constant":true,"functionSelector":"84b8efbb","id":2318,"mutability":"constant","name":"_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB","nameLocation":"1567:43:13","nodeType":"VariableDeclaration","scope":2676,"src":"1544:179:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2316,"name":"string","nodeType":"ElementaryTypeName","src":"1544:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5065726d697373696f6e73207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1621:102:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c29ab44842e91090848780f4cd9a6c05ba5b883d9f1f1ad134563b61518940b","typeString":"literal_string \"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\""},"value":"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,"},"visibility":"public"},{"constant":true,"functionSelector":"90bbf2f3","id":2321,"mutability":"constant","name":"_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB","nameLocation":"1753:49:13","nodeType":"VariableDeclaration","scope":2676,"src":"1730:192:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2319,"name":"string","nodeType":"ElementaryTypeName","src":"1730:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5065726d697442617463685769746e6573735472616e7366657246726f6d28546f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1813:109:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_0bf214d267f8e8fa0f37d38e2103aff5c639b54388783bd59a418a8bee49520c","typeString":"literal_string \"PermitBatchWitnessTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline,\""},"value":"PermitBatchWitnessTransferFrom(TokenPermissions[] permitted,address spender,uint256 nonce,uint256 deadline,"},"visibility":"public"},{"body":{"id":2348,"nodeType":"Block","src":"2028:213:13","statements":[{"assignments":[2330],"declarations":[{"constant":false,"id":2330,"mutability":"mutable","name":"permitHash","nameLocation":"2046:10:13","nodeType":"VariableDeclaration","scope":2348,"src":"2038:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2038:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2335,"initialValue":{"arguments":[{"expression":{"id":2332,"name":"permitSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"2078:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle memory"}},"id":2333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2091:7:13","memberName":"details","nodeType":"MemberAccess","referencedDeclaration":1655,"src":"2078:20:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}],"id":2331,"name":"_hashPermitDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"2059:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PermitDetails_$1652_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct IAllowanceTransfer.PermitDetails memory) pure returns (bytes32)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2059:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2038:61:13"},{"expression":{"arguments":[{"arguments":[{"id":2339,"name":"_PERMIT_SINGLE_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"2149:23:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2340,"name":"permitHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"2174:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2341,"name":"permitSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"2186:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle memory"}},"id":2342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2199:7:13","memberName":"spender","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"2186:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2343,"name":"permitSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"2208:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle memory"}},"id":2344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2221:11:13","memberName":"sigDeadline","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"2208:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2337,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2138:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2142:6:13","memberName":"encode","nodeType":"MemberAccess","src":"2138:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:95:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2336,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2128:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:106:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2328,"id":2347,"nodeType":"Return","src":"2109:125:13"}]},"id":2349,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"1938:4:13","nodeType":"FunctionDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"permitSingle","nameLocation":"1982:12:13","nodeType":"VariableDeclaration","scope":2349,"src":"1943:51:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_memory_ptr","typeString":"struct IAllowanceTransfer.PermitSingle"},"typeName":{"id":2323,"nodeType":"UserDefinedTypeName","pathNode":{"id":2322,"name":"IAllowanceTransfer.PermitSingle","nameLocations":["1943:18:13","1962:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1660,"src":"1943:31:13"},"referencedDeclaration":1660,"src":"1943:31:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitSingle_$1660_storage_ptr","typeString":"struct IAllowanceTransfer.PermitSingle"}},"visibility":"internal"}],"src":"1942:53:13"},"returnParameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2349,"src":"2019:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2019:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2018:9:13"},"scope":2676,"src":"1929:312:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2414,"nodeType":"Block","src":"2344:517:13","statements":[{"assignments":[2358],"declarations":[{"constant":false,"id":2358,"mutability":"mutable","name":"numPermits","nameLocation":"2362:10:13","nodeType":"VariableDeclaration","scope":2414,"src":"2354:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"2354:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2362,"initialValue":{"expression":{"expression":{"id":2359,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"2375:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch memory"}},"id":2360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2387:7:13","memberName":"details","nodeType":"MemberAccess","referencedDeclaration":1664,"src":"2375:19:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitDetails_$1652_memory_ptr_$dyn_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory[] memory"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2395:6:13","memberName":"length","nodeType":"MemberAccess","src":"2375:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2354:47:13"},{"assignments":[2367],"declarations":[{"constant":false,"id":2367,"mutability":"mutable","name":"permitHashes","nameLocation":"2428:12:13","nodeType":"VariableDeclaration","scope":2414,"src":"2411:29:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2366,"nodeType":"ArrayTypeName","src":"2411:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2373,"initialValue":{"arguments":[{"id":2371,"name":"numPermits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"2457:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2443:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":2368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2447:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2369,"nodeType":"ArrayTypeName","src":"2447:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2411:57:13"},{"body":{"id":2395,"nodeType":"Block","src":"2519:85:13","statements":[{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2384,"name":"permitHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"2533:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2386,"indexExpression":{"id":2385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2546:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2533:15:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"expression":{"id":2388,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"2570:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch memory"}},"id":2389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2582:7:13","memberName":"details","nodeType":"MemberAccess","referencedDeclaration":1664,"src":"2570:19:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PermitDetails_$1652_memory_ptr_$dyn_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory[] memory"}},"id":2391,"indexExpression":{"id":2390,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2590:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2570:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}],"id":2387,"name":"_hashPermitDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"2551:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PermitDetails_$1652_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct IAllowanceTransfer.PermitDetails memory) pure returns (bytes32)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2533:60:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2394,"nodeType":"ExpressionStatement","src":"2533:60:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2378,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2498:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2379,"name":"numPermits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"2502:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2498:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2396,"initializationExpression":{"assignments":[2375],"declarations":[{"constant":false,"id":2375,"mutability":"mutable","name":"i","nameLocation":"2491:1:13","nodeType":"VariableDeclaration","scope":2396,"src":"2483:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2483:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2377,"initialValue":{"hexValue":"30","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2483:13:13"},"loopExpression":{"expression":{"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2514:3:13","subExpression":{"id":2381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2516:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2383,"nodeType":"ExpressionStatement","src":"2514:3:13"},"nodeType":"ForStatement","src":"2478:126:13"},{"expression":{"arguments":[{"arguments":[{"id":2400,"name":"_PERMIT_BATCH_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"2671:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":2404,"name":"permitHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"2738:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"expression":{"id":2402,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2721:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2725:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"2721:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2401,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2711:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2711:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2407,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"2770:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch memory"}},"id":2408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2782:7:13","memberName":"spender","nodeType":"MemberAccess","referencedDeclaration":1666,"src":"2770:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2409,"name":"permitBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"2807:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch memory"}},"id":2410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2819:11:13","memberName":"sigDeadline","nodeType":"MemberAccess","referencedDeclaration":1668,"src":"2807:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2398,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2643:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2647:6:13","memberName":"encode","nodeType":"MemberAccess","src":"2643:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2643:201:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2397,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2620:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2620:234:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2356,"id":2413,"nodeType":"Return","src":"2613:241:13"}]},"id":2415,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"2256:4:13","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"permitBatch","nameLocation":"2299:11:13","nodeType":"VariableDeclaration","scope":2415,"src":"2261:49:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_memory_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"},"typeName":{"id":2351,"nodeType":"UserDefinedTypeName","pathNode":{"id":2350,"name":"IAllowanceTransfer.PermitBatch","nameLocations":["2261:18:13","2280:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1669,"src":"2261:30:13"},"referencedDeclaration":1669,"src":"2261:30:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatch_$1669_storage_ptr","typeString":"struct IAllowanceTransfer.PermitBatch"}},"visibility":"internal"}],"src":"2260:51:13"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2415,"src":"2335:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2335:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2334:9:13"},"scope":2676,"src":"2247:614:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2444,"nodeType":"Block","src":"2966:244:13","statements":[{"assignments":[2424],"declarations":[{"constant":false,"id":2424,"mutability":"mutable","name":"tokenPermissionsHash","nameLocation":"2984:20:13","nodeType":"VariableDeclaration","scope":2444,"src":"2976:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2976:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2429,"initialValue":{"arguments":[{"expression":{"id":2426,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3029:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":2427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3036:9:13","memberName":"permitted","nodeType":"MemberAccess","referencedDeclaration":1843,"src":"3029:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}],"id":2425,"name":"_hashTokenPermissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"3007:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TokenPermissions_$1840_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2976:70:13"},{"expression":{"arguments":[{"arguments":[{"id":2433,"name":"_PERMIT_TRANSFER_FROM_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"3097:30:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2434,"name":"tokenPermissionsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"3129:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2435,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3151:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3155:6:13","memberName":"sender","nodeType":"MemberAccess","src":"3151:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2437,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3163:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":2438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3170:5:13","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1845,"src":"3163:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2439,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"3177:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":2440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3184:8:13","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1847,"src":"3177:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2431,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3086:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3090:6:13","memberName":"encode","nodeType":"MemberAccess","src":"3086:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:107:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2430,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3063:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:140:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2422,"id":2443,"nodeType":"Return","src":"3056:147:13"}]},"id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"2876:4:13","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"permit","nameLocation":"2926:6:13","nodeType":"VariableDeclaration","scope":2445,"src":"2881:51:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"},"typeName":{"id":2417,"nodeType":"UserDefinedTypeName","pathNode":{"id":2416,"name":"ISignatureTransfer.PermitTransferFrom","nameLocations":["2881:18:13","2900:18:13"],"nodeType":"IdentifierPath","referencedDeclaration":1848,"src":"2881:37:13"},"referencedDeclaration":1848,"src":"2881:37:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_storage_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"}},"visibility":"internal"}],"src":"2880:53:13"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2445,"src":"2957:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2957:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2956:9:13"},"scope":2676,"src":"2867:343:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2512,"nodeType":"Block","src":"3320:576:13","statements":[{"assignments":[2454],"declarations":[{"constant":false,"id":2454,"mutability":"mutable","name":"numPermitted","nameLocation":"3338:12:13","nodeType":"VariableDeclaration","scope":2512,"src":"3330:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3330:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2458,"initialValue":{"expression":{"expression":{"id":2455,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3353:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":2456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3360:9:13","memberName":"permitted","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"3353:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenPermissions_$1840_memory_ptr_$dyn_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory[] memory"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3370:6:13","memberName":"length","nodeType":"MemberAccess","src":"3353:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3330:46:13"},{"assignments":[2463],"declarations":[{"constant":false,"id":2463,"mutability":"mutable","name":"tokenPermissionHashes","nameLocation":"3403:21:13","nodeType":"VariableDeclaration","scope":2512,"src":"3386:38:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3386:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2462,"nodeType":"ArrayTypeName","src":"3386:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2469,"initialValue":{"arguments":[{"id":2467,"name":"numPermitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"3441:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3427:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":2464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3431:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2465,"nodeType":"ArrayTypeName","src":"3431:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3427:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3386:68:13"},{"body":{"id":2491,"nodeType":"Block","src":"3508:94:13","statements":[{"expression":{"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2480,"name":"tokenPermissionHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"3522:21:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2482,"indexExpression":{"id":2481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"3544:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3522:24:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"expression":{"id":2484,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3571:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":2485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3578:9:13","memberName":"permitted","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"3571:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenPermissions_$1840_memory_ptr_$dyn_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory[] memory"}},"id":2487,"indexExpression":{"id":2486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"3588:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}],"id":2483,"name":"_hashTokenPermissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"3549:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TokenPermissions_$1840_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3549:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3522:69:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2490,"nodeType":"ExpressionStatement","src":"3522:69:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2474,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"3485:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2475,"name":"numPermitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"3489:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3485:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2492,"initializationExpression":{"assignments":[2471],"declarations":[{"constant":false,"id":2471,"mutability":"mutable","name":"i","nameLocation":"3478:1:13","nodeType":"VariableDeclaration","scope":2492,"src":"3470:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3470:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2473,"initialValue":{"hexValue":"30","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3482:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3470:13:13"},"loopExpression":{"expression":{"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3503:3:13","subExpression":{"id":2477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"3505:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2479,"nodeType":"ExpressionStatement","src":"3503:3:13"},"nodeType":"ForStatement","src":"3465:137:13"},{"expression":{"arguments":[{"arguments":[{"id":2496,"name":"_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"3670:36:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":2500,"name":"tokenPermissionHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"3751:21:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"expression":{"id":2498,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3734:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3738:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"3734:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2497,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3724:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3724:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3792:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3796:6:13","memberName":"sender","nodeType":"MemberAccess","src":"3792:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2505,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3820:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":2506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3827:5:13","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1859,"src":"3820:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2507,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3850:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":2508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3857:8:13","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"3850:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2494,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3642:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3646:6:13","memberName":"encode","nodeType":"MemberAccess","src":"3642:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:237:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2493,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3619:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:270:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2452,"id":2511,"nodeType":"Return","src":"3612:277:13"}]},"id":2513,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"3225:4:13","nodeType":"FunctionDefinition","parameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"permit","nameLocation":"3280:6:13","nodeType":"VariableDeclaration","scope":2513,"src":"3230:56:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"},"typeName":{"id":2447,"nodeType":"UserDefinedTypeName","pathNode":{"id":2446,"name":"ISignatureTransfer.PermitBatchTransferFrom","nameLocations":["3230:18:13","3249:23:13"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"3230:42:13"},"referencedDeclaration":1862,"src":"3230:42:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_storage_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"}},"visibility":"internal"}],"src":"3229:58:13"},"returnParameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2513,"src":"3311:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3311:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3310:9:13"},"scope":2676,"src":"3216:680:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2557,"nodeType":"Block","src":"4094:330:13","statements":[{"assignments":[2526],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"typeHash","nameLocation":"4112:8:13","nodeType":"VariableDeclaration","scope":2557,"src":"4104:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4104:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2534,"initialValue":{"arguments":[{"arguments":[{"id":2530,"name":"_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"4150:43:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2531,"name":"witnessTypeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"4195:17:13","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"expression":{"id":2528,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4133:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4137:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"4133:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4133:80:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2527,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4123:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4123:91:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4104:110:13"},{"assignments":[2536],"declarations":[{"constant":false,"id":2536,"mutability":"mutable","name":"tokenPermissionsHash","nameLocation":"4233:20:13","nodeType":"VariableDeclaration","scope":2557,"src":"4225:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4225:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2541,"initialValue":{"arguments":[{"expression":{"id":2538,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"4278:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":2539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4285:9:13","memberName":"permitted","nodeType":"MemberAccess","referencedDeclaration":1843,"src":"4278:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}],"id":2537,"name":"_hashTokenPermissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4256:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TokenPermissions_$1840_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4256:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4225:70:13"},{"expression":{"arguments":[{"arguments":[{"id":2545,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"4333:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2546,"name":"tokenPermissionsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"4343:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2547,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4365:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4369:6:13","memberName":"sender","nodeType":"MemberAccess","src":"4365:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2549,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"4377:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":2550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4384:5:13","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1845,"src":"4377:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2551,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"4391:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom memory"}},"id":2552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4398:8:13","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1847,"src":"4391:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2553,"name":"witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"4408:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2543,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4322:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4326:6:13","memberName":"encode","nodeType":"MemberAccess","src":"4322:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:94:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2542,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4312:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4312:105:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2524,"id":2556,"nodeType":"Return","src":"4305:112:13"}]},"id":2558,"implemented":true,"kind":"function","modifiers":[],"name":"hashWithWitness","nameLocation":"3911:15:13","nodeType":"FunctionDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"permit","nameLocation":"3981:6:13","nodeType":"VariableDeclaration","scope":2558,"src":"3936:51:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_memory_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"},"typeName":{"id":2515,"nodeType":"UserDefinedTypeName","pathNode":{"id":2514,"name":"ISignatureTransfer.PermitTransferFrom","nameLocations":["3936:18:13","3955:18:13"],"nodeType":"IdentifierPath","referencedDeclaration":1848,"src":"3936:37:13"},"referencedDeclaration":1848,"src":"3936:37:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitTransferFrom_$1848_storage_ptr","typeString":"struct ISignatureTransfer.PermitTransferFrom"}},"visibility":"internal"},{"constant":false,"id":2518,"mutability":"mutable","name":"witness","nameLocation":"4005:7:13","nodeType":"VariableDeclaration","scope":2558,"src":"3997:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3997:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"witnessTypeString","nameLocation":"4038:17:13","nodeType":"VariableDeclaration","scope":2558,"src":"4022:33:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2519,"name":"string","nodeType":"ElementaryTypeName","src":"4022:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3926:135:13"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2558,"src":"4085:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4085:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4084:9:13"},"scope":2676,"src":"3902:522:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2640,"nodeType":"Block","src":"4627:712:13","statements":[{"assignments":[2571],"declarations":[{"constant":false,"id":2571,"mutability":"mutable","name":"typeHash","nameLocation":"4645:8:13","nodeType":"VariableDeclaration","scope":2640,"src":"4637:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4637:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2579,"initialValue":{"arguments":[{"arguments":[{"id":2575,"name":"_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"4695:49:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2576,"name":"witnessTypeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"4746:17:13","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"expression":{"id":2573,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4678:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4682:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"4678:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4678:86:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2572,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4668:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4668:97:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4637:128:13"},{"assignments":[2581],"declarations":[{"constant":false,"id":2581,"mutability":"mutable","name":"numPermitted","nameLocation":"4784:12:13","nodeType":"VariableDeclaration","scope":2640,"src":"4776:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"4776:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2585,"initialValue":{"expression":{"expression":{"id":2582,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"4799:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":2583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4806:9:13","memberName":"permitted","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"4799:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenPermissions_$1840_memory_ptr_$dyn_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory[] memory"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4816:6:13","memberName":"length","nodeType":"MemberAccess","src":"4799:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4776:46:13"},{"assignments":[2590],"declarations":[{"constant":false,"id":2590,"mutability":"mutable","name":"tokenPermissionHashes","nameLocation":"4849:21:13","nodeType":"VariableDeclaration","scope":2640,"src":"4832:38:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4832:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2589,"nodeType":"ArrayTypeName","src":"4832:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2596,"initialValue":{"arguments":[{"id":2594,"name":"numPermitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"4887:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4873:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":2591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4877:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2592,"nodeType":"ArrayTypeName","src":"4877:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4832:68:13"},{"body":{"id":2618,"nodeType":"Block","src":"4954:94:13","statements":[{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2607,"name":"tokenPermissionHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"4968:21:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2609,"indexExpression":{"id":2608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"4990:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4968:24:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"expression":{"id":2611,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"5017:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":2612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5024:9:13","memberName":"permitted","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"5017:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenPermissions_$1840_memory_ptr_$dyn_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory[] memory"}},"id":2614,"indexExpression":{"id":2613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"5034:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5017:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}],"id":2610,"name":"_hashTokenPermissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4995:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TokenPermissions_$1840_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct ISignatureTransfer.TokenPermissions memory) pure returns (bytes32)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4995:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4968:69:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2617,"nodeType":"ExpressionStatement","src":"4968:69:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"4931:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2602,"name":"numPermitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"4935:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4931:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2619,"initializationExpression":{"assignments":[2598],"declarations":[{"constant":false,"id":2598,"mutability":"mutable","name":"i","nameLocation":"4924:1:13","nodeType":"VariableDeclaration","scope":2619,"src":"4916:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"4916:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2600,"initialValue":{"hexValue":"30","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4928:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4916:13:13"},"loopExpression":{"expression":{"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4949:3:13","subExpression":{"id":2604,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"4951:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2606,"nodeType":"ExpressionStatement","src":"4949:3:13"},"nodeType":"ForStatement","src":"4911:137:13"},{"expression":{"arguments":[{"arguments":[{"id":2623,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"5116:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":2627,"name":"tokenPermissionHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"5169:21:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"expression":{"id":2625,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5152:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5156:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"5152:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5152:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2624,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5142:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2630,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5210:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5214:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5210:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2632,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"5238:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":2633,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5245:5:13","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1859,"src":"5238:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2634,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"5268:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom memory"}},"id":2635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5275:8:13","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"5268:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2636,"name":"witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"5301:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2621,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5088:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5092:6:13","memberName":"encode","nodeType":"MemberAccess","src":"5088:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5088:234:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2620,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5065:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:267:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2569,"id":2639,"nodeType":"Return","src":"5058:274:13"}]},"id":2641,"implemented":true,"kind":"function","modifiers":[],"name":"hashWithWitness","nameLocation":"4439:15:13","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"permit","nameLocation":"4514:6:13","nodeType":"VariableDeclaration","scope":2641,"src":"4464:56:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_memory_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"},"typeName":{"id":2560,"nodeType":"UserDefinedTypeName","pathNode":{"id":2559,"name":"ISignatureTransfer.PermitBatchTransferFrom","nameLocations":["4464:18:13","4483:23:13"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"4464:42:13"},"referencedDeclaration":1862,"src":"4464:42:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitBatchTransferFrom_$1862_storage_ptr","typeString":"struct ISignatureTransfer.PermitBatchTransferFrom"}},"visibility":"internal"},{"constant":false,"id":2563,"mutability":"mutable","name":"witness","nameLocation":"4538:7:13","nodeType":"VariableDeclaration","scope":2641,"src":"4530:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4530:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"witnessTypeString","nameLocation":"4571:17:13","nodeType":"VariableDeclaration","scope":2641,"src":"4555:33:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2564,"name":"string","nodeType":"ElementaryTypeName","src":"4555:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4454:140:13"},"returnParameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2641,"src":"4618:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4618:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4617:9:13"},"scope":2676,"src":"4430:909:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2657,"nodeType":"Block","src":"5453:80:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2652,"name":"_PERMIT_DETAILS_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"5491:24:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2653,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"5517:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails memory"}],"expression":{"id":2650,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5480:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5484:6:13","memberName":"encode","nodeType":"MemberAccess","src":"5480:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5480:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2649,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5470:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2648,"id":2656,"nodeType":"Return","src":"5463:63:13"}]},"id":2658,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPermitDetails","nameLocation":"5354:18:13","nodeType":"FunctionDefinition","parameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"details","nameLocation":"5413:7:13","nodeType":"VariableDeclaration","scope":2658,"src":"5373:47:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_memory_ptr","typeString":"struct IAllowanceTransfer.PermitDetails"},"typeName":{"id":2643,"nodeType":"UserDefinedTypeName","pathNode":{"id":2642,"name":"IAllowanceTransfer.PermitDetails","nameLocations":["5373:18:13","5392:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1652,"src":"5373:32:13"},"referencedDeclaration":1652,"src":"5373:32:13","typeDescriptions":{"typeIdentifier":"t_struct$_PermitDetails_$1652_storage_ptr","typeString":"struct IAllowanceTransfer.PermitDetails"}},"visibility":"internal"}],"src":"5372:49:13"},"returnParameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2658,"src":"5444:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5444:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5443:9:13"},"scope":2676,"src":"5345:188:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2674,"nodeType":"Block","src":"5683:85:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2669,"name":"_TOKEN_PERMISSIONS_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"5721:27:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2670,"name":"permitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"5750:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions memory"}],"expression":{"id":2667,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5710:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5714:6:13","memberName":"encode","nodeType":"MemberAccess","src":"5710:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5710:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2666,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5700:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2665,"id":2673,"nodeType":"Return","src":"5693:68:13"}]},"id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTokenPermissions","nameLocation":"5548:21:13","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"permitted","nameLocation":"5613:9:13","nodeType":"VariableDeclaration","scope":2675,"src":"5570:52:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_memory_ptr","typeString":"struct ISignatureTransfer.TokenPermissions"},"typeName":{"id":2660,"nodeType":"UserDefinedTypeName","pathNode":{"id":2659,"name":"ISignatureTransfer.TokenPermissions","nameLocations":["5570:18:13","5589:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":1840,"src":"5570:35:13"},"referencedDeclaration":1840,"src":"5570:35:13","typeDescriptions":{"typeIdentifier":"t_struct$_TokenPermissions_$1840_storage_ptr","typeString":"struct ISignatureTransfer.TokenPermissions"}},"visibility":"internal"}],"src":"5569:54:13"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2675,"src":"5670:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5670:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5669:9:13"},"scope":2676,"src":"5539:229:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2677,"src":"205:5565:13","usedErrors":[]}],"src":"32:5739:13"}},"src/libraries/SafeCast160.sol":{"id":14,"ast":{"absolutePath":"src/libraries/SafeCast160.sol","exportedSymbols":{"SafeCast160":[2707]},"id":2708,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2678,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast160","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2707,"linearizedBaseContracts":[2707],"name":"SafeCast160","nameLocation":"66:11:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"84:82:14","text":"@notice Thrown when a valude greater than type(uint160).max is cast to uint160"},"errorSelector":"c4bd89a9","id":2681,"name":"UnsafeCast","nameLocation":"177:10:14","nodeType":"ErrorDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[],"src":"187:2:14"},"src":"171:19:14"},{"body":{"id":2705,"nodeType":"Block","src":"354:98:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"368:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"381:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2691,"name":"uint160","nodeType":"ElementaryTypeName","src":"381:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":2690,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"376:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"376:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"390:3:14","memberName":"max","nodeType":"MemberAccess","src":"376:17:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"368:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2699,"nodeType":"IfStatement","src":"364:50:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2696,"name":"UnsafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"402:10:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"402:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2698,"nodeType":"RevertStatement","src":"395:19:14"}},{"expression":{"arguments":[{"id":2702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"439:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"431:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2700,"name":"uint160","nodeType":"ElementaryTypeName","src":"431:7:14","typeDescriptions":{}}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"431:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":2688,"id":2704,"nodeType":"Return","src":"424:21:14"}]},"documentation":{"id":2682,"nodeType":"StructuredDocumentation","src":"196:87:14","text":"@notice Safely casts uint256 to uint160\n @param value The uint256 to be cast"},"id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"297:9:14","nodeType":"FunctionDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"value","nameLocation":"315:5:14","nodeType":"VariableDeclaration","scope":2706,"src":"307:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"306:15:14"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"345:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2686,"name":"uint160","nodeType":"ElementaryTypeName","src":"345:7:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"344:9:14"},"scope":2707,"src":"288:164:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2708,"src":"58:396:14","usedErrors":[2681]}],"src":"32:423:14"}},"src/libraries/SignatureVerification.sol":{"id":15,"ast":{"absolutePath":"src/libraries/SignatureVerification.sol","exportedSymbols":{"IERC1271":[1815],"SignatureVerification":[2876]},"id":2877,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2709,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"32:24:15"},{"absolutePath":"src/interfaces/IERC1271.sol","file":"../interfaces/IERC1271.sol","id":2711,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2877,"sourceUnit":1816,"src":"58:52:15","symbolAliases":[{"foreign":{"id":2710,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"66:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignatureVerification","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2876,"linearizedBaseContracts":[2876],"name":"SignatureVerification","nameLocation":"120:21:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"148:69:15","text":"@notice Thrown when the passed in signature is not a valid length"},"errorSelector":"4be6321b","id":2714,"name":"InvalidSignatureLength","nameLocation":"228:22:15","nodeType":"ErrorDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[],"src":"250:2:15"},"src":"222:31:15"},{"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"259:73:15","text":"@notice Thrown when the recovered signer is equal to the zero address"},"errorSelector":"8baa579f","id":2717,"name":"InvalidSignature","nameLocation":"343:16:15","nodeType":"ErrorDefinition","parameters":{"id":2716,"nodeType":"ParameterList","parameters":[],"src":"359:2:15"},"src":"337:25:15"},{"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"368:77:15","text":"@notice Thrown when the recovered signer does not equal the claimedSigner"},"errorSelector":"815e1d64","id":2720,"name":"InvalidSigner","nameLocation":"456:13:15","nodeType":"ErrorDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[],"src":"469:2:15"},"src":"450:22:15"},{"documentation":{"id":2721,"nodeType":"StructuredDocumentation","src":"478:69:15","text":"@notice Thrown when the recovered contract signature is incorrect"},"errorSelector":"b0669cbc","id":2723,"name":"InvalidContractSignature","nameLocation":"558:24:15","nodeType":"ErrorDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[],"src":"582:2:15"},"src":"552:33:15"},{"constant":true,"id":2727,"mutability":"constant","name":"UPPER_BIT_MASK","nameLocation":"608:14:15","nodeType":"VariableDeclaration","scope":2876,"src":"591:102:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"591:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"components":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"626:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"id":2726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"625:68:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}},"visibility":"internal"},{"body":{"id":2874,"nodeType":"Block","src":"793:1016:15","statements":[{"assignments":[2737],"declarations":[{"constant":false,"id":2737,"mutability":"mutable","name":"r","nameLocation":"811:1:15","nodeType":"VariableDeclaration","scope":2874,"src":"803:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"803:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2738,"nodeType":"VariableDeclarationStatement","src":"803:9:15"},{"assignments":[2740],"declarations":[{"constant":false,"id":2740,"mutability":"mutable","name":"s","nameLocation":"830:1:15","nodeType":"VariableDeclaration","scope":2874,"src":"822:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"822:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2741,"nodeType":"VariableDeclarationStatement","src":"822:9:15"},{"assignments":[2743],"declarations":[{"constant":false,"id":2743,"mutability":"mutable","name":"v","nameLocation":"847:1:15","nodeType":"VariableDeclaration","scope":2874,"src":"841:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2742,"name":"uint8","nodeType":"ElementaryTypeName","src":"841:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2744,"nodeType":"VariableDeclarationStatement","src":"841:7:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2745,"name":"claimedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"863:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"877:4:15","memberName":"code","nodeType":"MemberAccess","src":"863:18:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"882:6:15","memberName":"length","nodeType":"MemberAccess","src":"863:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"863:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2872,"nodeType":"Block","src":"1600:203:15","statements":[{"assignments":[2854],"declarations":[{"constant":false,"id":2854,"mutability":"mutable","name":"magicValue","nameLocation":"1621:10:15","nodeType":"VariableDeclaration","scope":2872,"src":"1614:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2853,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1614:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":2862,"initialValue":{"arguments":[{"id":2859,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"1675:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2860,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1681:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":2856,"name":"claimedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1643:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2855,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1634:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$1815_$","typeString":"type(contract IERC1271)"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1634:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1271_$1815","typeString":"contract IERC1271"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1658:16:15","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":1814,"src":"1634:40:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes32,bytes memory) view external returns (bytes4)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1634:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"1614:77:15"},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2863,"name":"magicValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"1709:10:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2864,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1723:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$1815_$","typeString":"type(contract IERC1271)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1732:16:15","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":1814,"src":"1723:25:15","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:8:15","memberName":"selector","nodeType":"MemberAccess","src":"1723:34:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1709:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2871,"nodeType":"IfStatement","src":"1705:87:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2868,"name":"InvalidContractSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"1766:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1766:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2870,"nodeType":"RevertStatement","src":"1759:33:15"}}]},"id":2873,"nodeType":"IfStatement","src":"859:944:15","trueBody":{"id":2852,"nodeType":"Block","src":"895:699:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2750,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"913:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"923:6:15","memberName":"length","nodeType":"MemberAccess","src":"913:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"933:2:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"913:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2778,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1072:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1082:6:15","memberName":"length","nodeType":"MemberAccess","src":"1072:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3634","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1092:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"1072:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2823,"nodeType":"Block","src":"1335:64:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2820,"name":"InvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"1360:22:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1360:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2822,"nodeType":"RevertStatement","src":"1353:31:15"}]},"id":2824,"nodeType":"IfStatement","src":"1068:331:15","trueBody":{"id":2819,"nodeType":"Block","src":"1096:233:15","statements":[{"assignments":[2783],"declarations":[{"constant":false,"id":2783,"mutability":"mutable","name":"vs","nameLocation":"1150:2:15","nodeType":"VariableDeclaration","scope":2819,"src":"1142:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1142:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2784,"nodeType":"VariableDeclarationStatement","src":"1142:10:15"},{"expression":{"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2785,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"1171:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2786,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"1174:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2787,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"1170:7:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2790,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1191:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1203:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1203:7:15","typeDescriptions":{}}},{"id":2794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1212:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1212:7:15","typeDescriptions":{}}}],"id":2795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1202:18:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(bytes32),type(bytes32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(bytes32),type(bytes32))"}],"expression":{"id":2788,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1180:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1184:6:15","memberName":"decode","nodeType":"MemberAccess","src":"1180:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1180:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"src":"1170:51:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2798,"nodeType":"ExpressionStatement","src":"1170:51:15"},{"expression":{"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2799,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"1239:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"1243:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2801,"name":"UPPER_BIT_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"1248:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1243:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1239:23:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2804,"nodeType":"ExpressionStatement","src":"1239:23:15"},{"expression":{"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2805,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"1280:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2810,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"1298:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1304:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1298:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1290:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:15","typeDescriptions":{}}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1290:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1284:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2806,"name":"uint8","nodeType":"ElementaryTypeName","src":"1284:5:15","typeDescriptions":{}}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1284:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1312:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"1284:30:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1280:34:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2818,"nodeType":"ExpressionStatement","src":"1280:34:15"}]}},"id":2825,"nodeType":"IfStatement","src":"909:490:15","trueBody":{"id":2777,"nodeType":"Block","src":"937:125:15","statements":[{"expression":{"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2754,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"956:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2755,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"959:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2756,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"955:6:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2759,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"975:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"987:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"987:7:15","typeDescriptions":{}}},{"id":2763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"996:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"996:7:15","typeDescriptions":{}}}],"id":2764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"986:18:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(bytes32),type(bytes32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(bytes32),type(bytes32))"}],"expression":{"id":2757,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"964:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"968:6:15","memberName":"decode","nodeType":"MemberAccess","src":"964:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"964:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"src":"955:50:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"ExpressionStatement","src":"955:50:15"},{"expression":{"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2768,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"1023:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2771,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1033:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2773,"indexExpression":{"hexValue":"3634","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1043:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1033:13:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1027:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2769,"name":"uint8","nodeType":"ElementaryTypeName","src":"1027:5:15","typeDescriptions":{}}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1027:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1023:24:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2776,"nodeType":"ExpressionStatement","src":"1023:24:15"}]}},{"assignments":[2827],"declarations":[{"constant":false,"id":2827,"mutability":"mutable","name":"signer","nameLocation":"1420:6:15","nodeType":"VariableDeclaration","scope":2852,"src":"1412:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2826,"name":"address","nodeType":"ElementaryTypeName","src":"1412:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2834,"initialValue":{"arguments":[{"id":2829,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"1439:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2830,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"1445:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2831,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"1448:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2832,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"1451:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2828,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"1429:9:15","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1412:41:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2835,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"1471:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1489:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1481:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2836,"name":"address","nodeType":"ElementaryTypeName","src":"1481:7:15","typeDescriptions":{}}},"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1481:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1471:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2844,"nodeType":"IfStatement","src":"1467:51:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2841,"name":"InvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"1500:16:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2843,"nodeType":"RevertStatement","src":"1493:25:15"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2845,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"1536:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2846,"name":"claimedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"1546:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1536:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2851,"nodeType":"IfStatement","src":"1532:51:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2848,"name":"InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"1568:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1568:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2850,"nodeType":"RevertStatement","src":"1561:22:15"}}]}}]},"id":2875,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"709:6:15","nodeType":"FunctionDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"signature","nameLocation":"731:9:15","nodeType":"VariableDeclaration","scope":2875,"src":"716:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2728,"name":"bytes","nodeType":"ElementaryTypeName","src":"716:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"hash","nameLocation":"750:4:15","nodeType":"VariableDeclaration","scope":2875,"src":"742:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"742:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2733,"mutability":"mutable","name":"claimedSigner","nameLocation":"764:13:15","nodeType":"VariableDeclaration","scope":2875,"src":"756:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"756:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"715:63:15"},"returnParameters":{"id":2735,"nodeType":"ParameterList","parameters":[],"src":"793:0:15"},"scope":2876,"src":"700:1109:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2877,"src":"112:1699:15","usedErrors":[2714,2717,2720,2723]}],"src":"32:1780:15"}}},"contracts":{"lib/solmate/src/tokens/ERC20.sol":{"ERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\",\"details\":\"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern and gas efficient ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solmate/src/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"lib/solmate/src/utils/SafeTransferLib.sol":{"SafeTransferLib":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\",\"details\":\"Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.Note that none of the functions in this library check that a token has code at all! That responsibility is delegated to the caller.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe ETH and ERC20 transfer library that gracefully handles missing return values.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solmate/src/utils/SafeTransferLib.sol\":\"SafeTransferLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeTransferLib.sol:SafeTransferLib\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 1:\"lib/solmate/src/utils/SafeTransferLib.sol\"\nobject \"SafeTransferLib_472\" {\n    code {\n        {\n            /// @src 1:586:5954  \"library SafeTransferLib {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeTransferLib_472_deployed\")\n            codecopy(_1, dataoffset(\"SafeTransferLib_472_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 1:\"lib/solmate/src/utils/SafeTransferLib.sol\"\n    object \"SafeTransferLib_472_deployed\" {\n        code {\n            {\n                /// @src 1:586:5954  \"library SafeTransferLib {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000811000a\"\n    }\n}\n","hash":"01000007d6f44c7b2403755aeb1144015c541833655137c19b78703170be1705","factoryDependencies":{}}},"src/AllowanceTransfer.sol":{"AllowanceTransfer":{"abi":[{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"AllowanceExpired","type":"error"},{"inputs":[],"name":"ExcessiveInvalidation","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"InsufficientAllowance","type":"error"},{"inputs":[],"name":"InvalidContractSignature","type":"error"},{"inputs":[],"name":"InvalidNonce","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"InvalidSignatureLength","type":"error"},{"inputs":[],"name":"InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"signatureDeadline","type":"uint256"}],"name":"SignatureExpired","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint160","name":"amount","type":"uint160"},{"indexed":false,"internalType":"uint48","name":"expiration","type":"uint48"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"spender","type":"address"}],"name":"Lockdown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint48","name":"newNonce","type":"uint48"},{"indexed":false,"internalType":"uint48","name":"oldNonce","type":"uint48"}],"name":"NonceInvalidation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint160","name":"amount","type":"uint160"},{"indexed":false,"internalType":"uint48","name":"expiration","type":"uint48"},{"indexed":false,"internalType":"uint48","name":"nonce","type":"uint48"}],"name":"Permit","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint48","name":"newNonce","type":"uint48"}],"name":"invalidateNonces","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"internalType":"struct IAllowanceTransfer.TokenSpenderPair[]","name":"approvals","type":"tuple[]"}],"name":"lockdown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IAllowanceTransfer.PermitDetails[]","name":"details","type":"tuple[]"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IAllowanceTransfer.PermitBatch","name":"permitBatch","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IAllowanceTransfer.PermitDetails","name":"details","type":"tuple"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IAllowanceTransfer.PermitSingle","name":"permitSingle","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"internalType":"struct IAllowanceTransfer.AllowanceTransferDetails[]","name":"transferDetails","type":"tuple[]"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"signatureDeadline\",\"type\":\"uint256\"}],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}],\"SignatureExpired(uint256)\":[{\"params\":{\"signatureDeadline\":\"The timestamp at which a signature is no longer valid\"}}]},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Uses cached version if chainid and address are unchanged from construction.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"stateVariables\":{\"allowance\":{\"details\":\"Indexed in the order of token owner address, token address, spender addressThe stored word saves the allowed amount, expiration on the allowance, and nonce\"}},\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}],\"InvalidContractSignature()\":[{\"notice\":\"Thrown when the recovered contract signature is incorrect\"}],\"InvalidNonce()\":[{\"notice\":\"Thrown when validating that the inputted nonce has not been used\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when the recovered signer is equal to the zero address\"}],\"InvalidSignatureLength()\":[{\"notice\":\"Thrown when the passed in signature is not a valid length\"}],\"InvalidSigner()\":[{\"notice\":\"Thrown when the recovered signer does not equal the claimedSigner\"}],\"SignatureExpired(uint256)\":[{\"notice\":\"Thrown when validating an inputted signature that is stale\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator for the current chain.\"},\"allowance(address,address,address)\":{\"notice\":\"Maps users to tokens to spender addresses and information about the approval on the token\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AllowanceTransfer.sol\":\"AllowanceTransfer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"src/AllowanceTransfer.sol\":{\"keccak256\":\"0x5c07b6e3b4f555ea53c3a8a7146f84e8b4a0b497fd9eac7654bc6a939630895f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4172f2831478e2c9a9b1b3dc6e34ba5214531a927818ee8f61a0ba54eb54f87\",\"dweb:/ipfs/QmevdtuwCo2hm4wfoKa23HoR9wjjVUMxkxo2xtcuzfbMrW\"]},\"src/EIP712.sol\":{\"keccak256\":\"0x973d4358c262467a4c2a0c2867c676a8a138102968d8b89355c42f655d1a7a68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7219a31ace8c0a959392cc2ee06817c7c98dfc491e96d27f71a09fb23860b62c\",\"dweb:/ipfs/QmUGRLgddHZ3GoouEBoMYbRS4wVGapJrsD2nBxVwxLBibb\"]},\"src/PermitErrors.sol\":{\"keccak256\":\"0x9fd1192bbc3ffa9354f2bfc534d7a1cdf2be2c940c96ed4ac7bc37991e1e5dfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77f8b2e2c040c33e2c78f05e7e768a17f433c07adb699235c35c4dac92115070\",\"dweb:/ipfs/QmYX2VTyTm6QLtgp54kCrkAGY8uPxkx28urwLNEJsxTHJs\"]},\"src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]},\"src/interfaces/IERC1271.sol\":{\"keccak256\":\"0x96f516510d08da5b1d05d81b0bd88af6f9928bb757ba55c27e203654dfcd4fa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0942604688c369aed50905d7cef2ece68e1ff457c95a14c9f913babac29a09a\",\"dweb:/ipfs/Qmf4ZBYCKqQHfnACciz8GEMhwxPw7mhQ6fjGXwpgr8CQF8\"]},\"src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xbab1c35f0a63761be6b50a9a2ce2459b63f09587dd9c6ac46955252a1a04f43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225dca1a3d91c0737fe75c72bfecae391fc2e7b2eb2ebe1a154bfb16a7527972\",\"dweb:/ipfs/QmdGQdUCANKZ6S23TyHDtBnGvr6CtyyqNNcziVTjEHJ5rk\"]},\"src/libraries/Allowance.sol\":{\"keccak256\":\"0x65ee20fb1a77d4e25dff2feb84027ff9096b065b6fc064c80f9eee49f1f9d498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f65d62fc64a55b6e3aad9932959ab3f47d701c45f95622215aca0ba076f1a7d\",\"dweb:/ipfs/QmZjDb4Nq9pssFefg8X9bwJNJ4RJEPD8vCaFR2Ur2N4boD\"]},\"src/libraries/PermitHash.sol\":{\"keccak256\":\"0x54af80d9c3193934c6947c31f59b8f3d7918f83676fe92ed6136593ad591d478\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5264001770be2cdeb7651e4d22af7edbc4e16da6d38747efeb4f54b5472ca5c5\",\"dweb:/ipfs/QmPvwau7DXw6stGQ14hpyTeLdYDYrrrdMnUfkQTPpMXQxz\"]},\"src/libraries/SignatureVerification.sol\":{\"keccak256\":\"0x99f437ffe99aa1ff7885aec8b971f48efac00c6ebc59c02eec78c9ca850a5e30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9365414bdb67813d4ef6c89fa152dff05fc2a64992a1a4f212fa414dbdee3eab\",\"dweb:/ipfs/QmfJxSszF1rjmMoNXW5oQMo9gARMHAXYTu68fkZvdEu58i\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"AllowanceTransfer.sol:AllowanceTransfer\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[16]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r10\n\tst.1\t64, r10\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[13]\n\tjump.le\t@.BB0_6\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.le\t@.BB0_12\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.eq\t@.BB0_214\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.eq\t@.BB0_227\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI0_17[0], r0, r3\n\tsub.s!\t32, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_17[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_17[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_17[0], r1, r7\n\tand\t@CPI0_17[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_17[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r4\n\tptr.add\tr3, r4, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[11]\n\tsub.s!\t@CPI0_18[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t36, r2, r3\n\tadd\tstack-[11], r0, r2\n\tshl.s\t6, r2, r2\n\tadd\tr3, r0, stack-[10]\n\tadd\tr2, r3, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[11], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_27\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tr0, r0, stack-[16]\n.BB0_242:\n\tadd\tstack-[16], r0, r1\n\tshl.s\t6, r1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\tr1, r2, r1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[15]\n\tsub.s!\t@CPI0_19[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r1, r1\n\tptr.add\tr2, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_21[0], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_22[0], r0, r4\n\tadd\tstack-[13], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB0_242\n\tjump\t@.BB0_27\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r0, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t0, r1\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t4, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t160, r1\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\t224, r1\n\tadd\t@CPI0_3[0], r0, r1\n\tst.1\t256, r1\n\tadd\tstack-[16], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t288, r1\n\tcontext.this\tr1\n\tst.1\t320, r1\n\tadd\t128, r0, r1\n\tst.1\t192, r1\n\tadd\t352, r0, r1\n\tst.1\t64, r1\n\tld.1\t192, r2\n\tadd\t224, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tld.1\t160, r2\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tst.2\t256, r1\n\tadd\t2, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_6:\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.gt\t@.BB0_9\n\tsub.s!\t@CPI0_15[0], r1, r2\n\tjump.eq\t@.BB0_17\n\tsub.s!\t@CPI0_16[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r2\n\tadd\t@CPI0_17[0], r0, r1\n\tsub.s!\t96, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI0_17[0], r2, r4\n\tsub.s!\t0, r4, r5\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI0_17[0], r4, r4\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[16]\n\tsub.s!\t@CPI0_19[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_18[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tsub\tr2, r1, r2\n\tadd\t@CPI0_17[0], r0, r3\n\tsub.s!\t96, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_17[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.gt\t@.BB0_29\n\tadd\tstack-[13], r0, r2\n\tadd\t96, r2, r2\n\tst.1\t64, r2\n\tadd\t4, r1, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r3, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_18[0], r3, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r1, r3\n\tadd\t35, r3, r5\n\tadd\tstack[@calldatasize], r0, r6\n\tadd\t@CPI0_17[0], r0, r7\n\tsub!\tr5, r6, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_17[0], r5, r5\n\tand\t@CPI0_17[0], r6, r6\n\tsub!\tr5, r6, r9\n\tadd.ge\t0, r0, r7\n\txor\tr5, r6, r5\n\tsub.s!\t@CPI0_17[0], r5, r5\n\tadd\tr8, r0, r5\n\tadd.eq\tr7, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\t4, r3, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_18[0], r5, r4\n\tjump.gt\t@.BB0_29\n\tshl.s\t5, r5, r4\n\tadd\t63, r4, r4\n\tsub.s\t32, r0, r6\n\tadd\tr6, r0, stack-[7]\n\tand\tr4, r6, r4\n\tadd\tr4, r2, r4\n\tsub.s!\t@CPI0_18[0], r4, r6\n\tjump.gt\t@.BB0_29\n\tst.1\t64, r4\n\tst.1\tr2, r5\n\tadd\t36, r3, r3\n\tshl.s\t7, r5, r4\n\tadd\tr4, r3, r4\n\tadd\tstack[@calldatasize], r0, r6\n\tsub!\tr4, r6, r6\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_67\n.BB0_69:\n\tadd\tstack-[13], r0, r3\n\tst.1.inc\tr3, r2, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\t36, r1, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr3, r2\n\tadd\t68, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tadd\t64, r1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t@CPI0_18[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[5], r0, r2\n\tadd\t35, r2, r3\n\tadd\tstack[@calldatasize], r0, r2\n\tadd\t@CPI0_17[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_17[0], r3, r3\n\tand\t@CPI0_17[0], r2, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_17[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[5], r0, r3\n\tadd\t4, r3, r3\n\tptr.add\tr1, r3, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[5], r0, r1\n\tadd\t36, r1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\tr3, r0, stack-[1]\n\tadd\tr1, r3, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\t@CPI0_24[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32779, r0, r2\n\tadd\tr10, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_83\n\tld.1\t64, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_9:\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_171\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_DOMAIN_SEPARATOR, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_34[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tsub.s!\t@CPI0_10[0], r1, r2\n\tjump.eq\t@.BB0_192\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r2\n\tand\t@CPI0_23[0], r2, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t@CPI0_23[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tshr.s\t208, r1, r2\n\tadd\tstack-[14], r0, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_166\n\tadd\tstack-[12], r0, r1\n\tadd\tr2, r0, stack-[11]\n\tsub\tr1, r2, r1\n\tand!\t@CPI0_29[0], r1, r1\n\tjump.ne\t@.BB0_209\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r2\n\tshl.s\t208, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI0_32[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_33[0], r0, r4\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[16], r0, r6\n\tadd\tstack-[15], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_27\n\tjump\t@.BB0_2\n.BB0_17:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI0_17[0], r0, r3\n\tsub.s!\t32, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_17[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[8]\n\tsub.s!\t@CPI0_18[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[8], r0, r3\n\tadd\t35, r3, r3\n\tadd\t@CPI0_17[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_17[0], r1, r6\n\tand\t@CPI0_17[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_17[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[8], r0, r3\n\tadd\t4, r3, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_18[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[7], r0, r2\n\tshl.s\t7, r2, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr3, r2, r2\n\tadd\t36, r2, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_24\n.BB0_27:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_171:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub.s!\t256, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_35[0], r3, r1\n\tjump.gt\t@.BB0_29\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_36[0], r1, r2\n\tjump.le\t@.BB0_176\n.BB0_29:\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_214:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub.s!\t128, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r1\n\tld\tr1, r2\n\tand\t@CPI0_23[0], r2, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_23[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_224\n\tadd\t@CPI0_24[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tand\t@CPI0_23[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n.BB0_224:\n\tadd\tstack-[11], r0, r1\n\tshl.s\t160, r1, r1\n\tand\t@CPI0_26[0], r1, r1\n\tadd\tstack-[14], r0, r3\n\tor\tr1, r3, r1\n\tadd\tstack-[10], r0, r4\n\tsload\tr4, r2\n\tand\t@CPI0_27[0], r2, r2\n\tor\tr1, r2, r1\n\tsstore\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr2, r4\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_28[0], r0, r4\n\tadd\tstack-[13], r0, r5\n\tadd\tstack-[16], r0, r6\n\tadd\tstack-[15], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_27\n\tjump\t@.BB0_2\n.BB0_192:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub.s!\t128, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_19[0], r3, r5\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_19[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_227:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_17[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_19[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[16]\n\tsub.s!\t@CPI0_19[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tand\t@CPI0_19[0], r3, r2\n\tshr.s\t208, r3, r4\n\tshr.s\t160, r3, r3\n\tand\t@CPI0_23[0], r3, r3\n\tnear_call\tr0, @abi_encode_uint160_uint48_uint48, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_176:\n\tadd\tr3, r0, stack-[15]\n\tadd\t224, r3, r2\n\tst.1\t64, r2\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\tr1, r2\n\tadd\t68, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[15], r0, r3\n\tadd\t128, r3, r3\n\tst.1\tr3, r2\n\tadd\t100, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[15], r0, r3\n\tadd\t160, r3, r3\n\tst.1\tr3, r2\n\tadd\t132, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[15], r0, r3\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t192, r3, r1\n\tst.1\tr1, r2\n\tadd\t164, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\t196, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tadd\t64, r1, r1\n\tadd\tr2, r0, stack-[13]\n\tadd\tr1, r0, stack-[12]\n\tst.1\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t228, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_18[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r1, r4\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI0_17[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_17[0], r4, r4\n\tand\t@CPI0_17[0], r3, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_17[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r1, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_18[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\t36, r1, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r0, stack-[10]\n\tadd\tr1, r2, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t@CPI0_24[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32779, r0, r2\n\tadd\tr10, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_188\n\tld.1\t64, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_24:\n\tadd\tr0, r0, stack-[14]\n.BB0_26:\n\tadd\tstack-[14], r0, r1\n\tshl.s\t7, r1, r1\n\tadd\tstack-[8], r0, r2\n\tadd\tr1, r2, r1\n\tsub\tstack[@calldatasize], r1, r2\n\tsub.s\t36, r2, r2\n\tadd\t@CPI0_17[0], r0, r3\n\tsub.s!\t128, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_17[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_63[0], r2, r3\n\tjump.ge\t@.BB0_29\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\t36, r1, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[16]\n\tsub.s!\t@CPI0_19[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[16], r0, r3\n\tst.1.inc\tr2, r3, r3\n\tadd\t68, r1, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[12]\n\tsub.s!\t@CPI0_19[0], r4, r4\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr3, r4\n\tadd\t100, r1, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[11]\n\tsub.s!\t@CPI0_19[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t64, r2, r3\n\tadd\tstack-[11], r0, r4\n\tst.1\tr3, r4\n\tadd\t132, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t96, r2, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI0_24[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r5\n\tshr.s\t160, r5, r2\n\tand\t@CPI0_23[0], r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB0_39\n\tand\t@CPI0_19[0], r5, r1\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[11], r0, r4\n\tjump.eq\t@.BB0_42\n\tsub!\tr4, r1, r3\n\tjump.gt\t@.BB0_44\n\tsub\tr5, r4, r1\n\tand\t@CPI0_19[0], r1, r1\n\tand\t@CPI0_21[0], r5, r3\n\tor\tr1, r3, r1\n\tadd\tstack-[9], r0, r3\n\tsstore\tr3, r1\n.BB0_42:\n\tld.1\t64, r1\n\tadd\t68, r1, r3\n\tst.1\tr3, r4\n\tadd\t36, r1, r3\n\tadd\tstack-[12], r0, r4\n\tst.1\tr3, r4\n\tadd\t@CPI0_65[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r4\n\tadd\tstack-[16], r0, r3\n\tst.1\tr4, r3\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_48\n\tadd\tr0, r0, r2\n.BB0_46:\n\tshl.s\t5, r2, r3\n\tadd\tr1, r3, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_46\n\tadd\t1, r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_53\n.BB0_48:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r5, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_66[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB0_253\n\tadd\tr0, r0, r6\n.BB0_50:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_50\n.BB0_253:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB0_52\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr4, r1\n.BB0_52:\n\tand\t1, r2, r1\n\tadd\tr3, r0, stack[@returndatasize]\n.BB0_53:\n\tld.1\t0, r2\n\tsub.s!\t1, r2, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t31, r3, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\tr4, r2, r2\n\tsub.s!\t0, r3, r3\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tor\tr3, r2, r2\n\tand!\tr2, r1, r1\n\tjump.eq\t@.BB0_54\n\tadd\tstack-[14], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[7], r0, r1\n\tadd\tr2, r0, stack-[14]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB0_26\n\tjump\t@.BB0_27\n.BB0_39:\n\tld.1\t64, r1\n\tadd\t@CPI0_69[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r3\n\tst.1\tr3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_54:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_67[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_68[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_66[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_209:\n\tld.1\t64, r1\n\tadd\t@CPI0_30[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_44:\n\tld.1\t64, r2\n\tadd\t@CPI0_64[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_67:\n\tadd\tstack-[13], r0, r5\n\tadd\t128, r5, r5\n.BB0_68:\n\tsub\tstack[@calldatasize], r3, r6\n\tadd\t@CPI0_17[0], r0, r7\n\tsub.s!\t128, r6, r8\n\tadd\t0, r0, r8\n\tadd.lt\tr7, r0, r8\n\tand\t@CPI0_17[0], r6, r6\n\tsub.s!\t0, r6, r9\n\tadd.le\t0, r0, r7\n\tsub.s!\t@CPI0_17[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_36[0], r6, r7\n\tjump.gt\t@.BB0_29\n\tadd\t128, r6, r7\n\tst.1\t64, r7\n\tptr.add\tstack[@ptr_calldata], r3, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_19[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr6, r7, r7\n\tadd\t32, r3, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_19[0], r8, r9\n\tjump.gt\t@.BB0_2\n\tst.1\tr7, r8\n\tadd\t64, r3, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_23[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t64, r6, r8\n\tst.1\tr8, r7\n\tadd\t96, r3, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI0_23[0], r7, r8\n\tjump.gt\t@.BB0_2\n\tadd\t96, r6, r8\n\tst.1\tr8, r7\n\tst.1.inc\tr5, r6, r5\n\tadd\t128, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.lt\t@.BB0_68\n\tjump\t@.BB0_69\n.BB0_188:\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tnear_call\tr0, @fun_hashPermitDetails, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[14], r0, r3\n\tld.1\tr3, r3\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[12]\n\tadd\t64, r5, r4\n\tst.1\tr4, r1\n\tand\t@CPI0_19[0], r3, r1\n\tadd\t96, r5, r3\n\tst.1\tr3, r1\n\tadd\t128, r5, r1\n\tst.1\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1.inc\tr5, r1, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t@CPI0_37[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @finalize_allocation_12095, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_hashTypedData, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tstack-[10], r0, r1\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[16], r0, r4\n\tnear_call\tr0, @fun_verify, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_19[0], r2, r3\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @fun_updateApproval, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.gt\t@.BB0_29\n\tadd\tstack-[12], r0, r1\n\tshl.s\t5, r1, r3\n\tadd\t63, r3, r1\n\tadd\tstack-[7], r0, r2\n\tand\tr1, r2, r1\n\tld.1\t64, r2\n\tadd\tr2, r1, r1\n\tadd\tr2, r0, stack-[11]\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_18[0], r1, r4\n\tjump.gt\t@.BB0_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_29\n\tst.1\t64, r1\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[11], r0, r2\n\tst.1.inc\tr2, r1, r7\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_254\n\tadd\tr0, r0, r4\n.BB0_88:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_88\n.BB0_254:\n\tadd\tr7, r0, stack-[10]\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB0_90\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tstack-[10], r0, r4\n\tadd\tr4, r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB0_90:\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tstack-[10], r0, r7\n\tjump.ne\t@.BB0_91\n.BB0_97:\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[11], r0, r3\n\tld.1\tr3, r3\n\tsub.s!\t0, r3, r4\n\tadd\tr2, r0, r4\n\tjump.eq\t@.BB0_101\n\tadd\tr0, r0, r5\n\tadd\tr2, r0, r4\n.BB0_100:\n\tld.1.inc\tr7, r6, r7\n\tst.1.inc\tr4, r6, r4\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_100\n.BB0_101:\n\tsub\tr4, r1, r3\n\tsub.s\t32, r3, r4\n\tst.1\tr1, r4\n\tadd\t31, r3, r3\n\tadd\tstack-[7], r0, r4\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_18[0], r3, r5\n\tjump.gt\t@.BB0_29\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_29\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r4\n\tld.1\t64, r1\n\tadd\t128, r1, r5\n\tst.1\tr5, r4\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI0_19[0], r2, r2\n\tadd\t96, r1, r3\n\tst.1\tr3, r2\n\tadd\t32, r1, r2\n\tadd\t@CPI0_43[0], r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r6\n\tsub.s!\t@CPI0_44[0], r1, r3\n\tjump.gt\t@.BB0_29\n\tadd\t160, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[15]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t@CPI0_1[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_109\n\tadd\t@CPI0_45[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_113\n.BB0_91:\n\tadd\t160, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tr0, r0, r3\n.BB0_92:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_93\n\tadd\tr3, r0, stack-[15]\n\tshl.s\t5, r3, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_40[0], r0, r4\n\tst.1\tr2, r4\n\tld.1.inc\tr3, r4, r5\n\tand\t@CPI0_19[0], r4, r4\n\tadd\t64, r1, r6\n\tst.1\tr6, r4\n\tld.1\tr5, r4\n\tand\t@CPI0_19[0], r4, r4\n\tadd\t96, r1, r5\n\tst.1\tr5, r4\n\tadd\t64, r3, r4\n\tld.1\tr4, r4\n\tand\t@CPI0_23[0], r4, r4\n\tadd\t128, r1, r5\n\tst.1\tr5, r4\n\tadd\t96, r3, r3\n\tld.1\tr3, r3\n\tand\t@CPI0_23[0], r3, r3\n\tadd\t160, r1, r4\n\tst.1\tr4, r3\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_41[0], r1, r3\n\tjump.gt\t@.BB0_29\n\tadd\t192, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[15], r0, r3\n\tsub!\tr2, r3, r2\n\tadd\tstack-[10], r0, r7\n\tjump.le\t@.BB0_93\n\tadd\tstack-[14], r0, r2\n\tadd\tr2, r7, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r3, r3\n\tadd\tstack-[12], r0, r1\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB0_92\n\tjump\t@.BB0_97\n.BB0_109:\n\tld.1\t64, r3\n\tadd\t64, r3, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[15]\n\tadd\t32, r3, r2\n\tadd\t@CPI0_2[0], r0, r1\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr2, r1\n\tadd\t@CPI0_1[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[2], r0, r4\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r5\n\tadd\t128, r5, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r5, r2\n\tst.1\tr2, r1\n\tst.1\tr5, r4\n\tsub.s!\t@CPI0_44[0], r5, r1\n\tjump.gt\t@.BB0_29\n\tadd\tstack-[15], r0, r3\n\tadd\t160, r3, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[12], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n.BB0_113:\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t66, r1, r2\n\tadd\tstack-[14], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\t@CPI0_47[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r1, r4\n\tst.1\tr4, r3\n\tadd\t66, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_36[0], r1, r3\n\tjump.gt\t@.BB0_29\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t@CPI0_48[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[16], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_117\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t65, r1, r1\n\tjump.ne\t@.BB0_145\n\tadd\tstack-[5], r0, r4\n\tadd\t100, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r3\n\tadd\t68, r4, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tld\tr3, r3\n\tshr.s\t248, r3, r3\n\tjump\t@.BB0_140\n.BB0_117:\n\tld.1\t64, r3\n\tadd\t36, r3, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_50[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\tstack-[3], r0, r4\n\tst.1\tr1, r4\n\tand\t31, r4, r2\n\tadd\tr3, r0, stack-[15]\n\tadd\t100, r3, r1\n\tadd\tstack-[1], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_252\n\tadd\tr0, r0, r5\n.BB0_119:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_119\n.BB0_252:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB0_121\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_121:\n\tadd\tstack-[3], r0, r2\n\tadd\tr1, r2, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r2\n\tand\t@CPI0_19[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_123\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB0_133\n.BB0_145:\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t64, r1, r1\n\tjump.ne\t@.BB0_146\n\tadd\tstack-[5], r0, r1\n\tadd\t68, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r2\n\tld\tr2, r3\n\tand\t@CPI0_54[0], r3, r2\n\tshr.s\t255, r3, r3\n\tadd\t27, r3, r3\n.BB0_140:\n\tadd\tstack-[1], r0, r4\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r5\n\tst.1\tr5, r2\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r3\n\tadd\tstack-[15], r0, r1\n\tst.1\tr4, r1\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_249\n\tadd\tr0, r0, r6\n.BB0_142:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_142\n.BB0_249:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB0_144\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB0_144:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_149\n\tld.1\t0, r1\n\tand!\t@CPI0_19[0], r1, r1\n\tjump.ne\t@.BB0_156\n\tld.1\t64, r1\n\tadd\t@CPI0_62[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_123:\n\tadd\tstack-[3], r0, r3\n\tadd\t31, r3, r3\n\tadd\tstack-[7], r0, r4\n\tand\tr3, r4, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd\tstack-[15], r0, r6\n\tsub.s!\t@CPI0_0[0], r6, r5\n\tadd\tr4, r0, r5\n\tadd.lt\tr6, r0, r5\n\tshl.s\t64, r5, r5\n\tadd\t100, r3, r3\n\tsub.s!\t@CPI0_0[0], r3, r6\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr5, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_251\n\tadd\tr0, r0, r7\n.BB0_125:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[15], r0, r9\n\tadd\tr9, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_125\n.BB0_251:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB0_127\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[15], r0, r8\n\tadd\tr8, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_127:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_128\n.BB0_133:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[15], r0, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_18[0], r1, r4\n\tjump.gt\t@.BB0_29\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_29\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_51[0], r2, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub.s!\t@CPI0_50[0], r2, r2\n\tjump.eq\t@.BB0_158\n\tadd\t@CPI0_52[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_149:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_248\n\tadd\tr0, r0, r5\n.BB0_151:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_151\n.BB0_248:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB0_153\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_153:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t96, r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_146:\n\tld.1\t64, r1\n\tadd\t@CPI0_53[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_128:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_250\n\tadd\tr0, r0, r5\n.BB0_130:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_130\n.BB0_250:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB0_132\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_132:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t96, r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_156:\n\tadd\tstack-[16], r0, r2\n\tand\t@CPI0_19[0], r2, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_157\n.BB0_158:\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_19[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_27\n\tadd\tstack-[16], r0, r1\n\tand\t@CPI0_19[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tr0, r0, stack-[16]\n.BB0_161:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tadd\tstack-[16], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_93\n\tadd\tstack-[16], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\t32, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tand\t@CPI0_19[0], r3, r3\n\tadd\tr3, r0, stack-[14]\n\tadd\tstack-[11], r0, r3\n\tand\t@CPI0_23[0], r3, r3\n\tadd\tr3, r0, stack-[11]\n\tadd\tstack-[12], r0, r3\n\tand\t@CPI0_19[0], r3, r3\n\tadd\tr3, r0, stack-[8]\n\tadd\tstack-[15], r0, r3\n\tand\t@CPI0_23[0], r3, r3\n\tadd\tr3, r0, stack-[12]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsload\tr1, r1\n\tshr.s\t208, r1, r1\n\tadd\tstack-[12], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_166\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t0, r2, r1\n\tadd\tr2, r0, r1\n\tjump.ne\t@.BB0_168\n\tadd\t@CPI0_24[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tand\t@CPI0_23[0], r1, r1\n.BB0_168:\n\tshl.s\t160, r1, r1\n\tadd\tstack-[15], r0, r2\n\tshl.s\t208, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[8], r0, r3\n\tor\tr1, r3, r1\n\tadd\t@CPI0_59[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\tstack-[11], r0, r4\n\tst.1\tr2, r4\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_60[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_61[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[10], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB0_161\n\tjump\t@.BB0_27\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_166:\n\tld.1\t64, r1\n\tadd\t@CPI0_58[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_93:\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_157:\n\tld.1\t64, r1\n\tadd\t@CPI0_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__system_request:\n.func_begin2:\n\tadd\tr1, r0, r3\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI2_0[0], r4, r5\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r2, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI2_1[0], r1, r1\n\tadd\tr3, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation_12095:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t160, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nabi_encode_uint160_uint48_uint48:\n.func_begin4:\n\tand\t@CPI4_0[0], r4, r4\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tand\t@CPI4_0[0], r3, r3\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI4_1[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end4:\n\nfun_transfer:\n.func_begin5:\n\tnop\tstack+=[6]\n\tadd\tr4, r0, stack-[6]\n\tadd\tr3, r0, stack-[5]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[4]\n\tand\t@CPI5_0[0], r1, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tand\t@CPI5_0[0], r2, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI5_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r6\n\tshr.s\t160, r6, r3\n\tand\t@CPI5_5[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB5_6\n\tadd\tstack-[5], r0, r5\n\tand\t@CPI5_0[0], r5, r4\n\tand\t@CPI5_0[0], r6, r1\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tadd\tstack-[6], r0, r2\n\tjump.eq\t@.BB5_9\n\tsub!\tr4, r1, r3\n\tjump.gt\t@.BB5_11\n\tsub\tr6, r5, r1\n\tand\t@CPI5_0[0], r1, r1\n\tand\t@CPI5_6[0], r6, r3\n\tor\tr1, r3, r1\n\tadd\tstack-[1], r0, r3\n\tsstore\tr3, r1\n.BB5_9:\n\tld.1\t64, r1\n\tadd\t68, r1, r3\n\tst.1\tr3, r4\n\tadd\t36, r1, r4\n\tadd\tstack-[3], r0, r3\n\tst.1\tr4, r3\n\tadd\t@CPI5_9[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r4\n\tadd\tstack-[4], r0, r3\n\tst.1\tr4, r3\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB5_15\n\tadd\tr0, r0, r2\n.BB5_13:\n\tshl.s\t5, r2, r3\n\tadd\tr1, r3, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB5_13\n\tadd\t1, r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB5_20\n.BB5_15:\n\tadd\t@CPI5_1[0], r0, r3\n\tsub.s!\t@CPI5_1[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tsub.s!\t@CPI5_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r5, r3\n\tor\tr3, r1, r1\n\tor\t@CPI5_10[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI5_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB5_23\n\tadd\tr0, r0, r6\n.BB5_17:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB5_17\n.BB5_23:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB5_19\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr4, r1\n.BB5_19:\n\tand\t1, r2, r1\n\tadd\tr3, r0, stack[@returndatasize]\n.BB5_20:\n\tld.1\t0, r2\n\tsub.s!\t1, r2, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t31, r3, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\tr4, r2, r2\n\tsub.s!\t0, r3, r3\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tor\tr3, r2, r2\n\tand!\tr2, r1, r1\n\tjump.eq\t@.BB5_21\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_6:\n\tld.1\t64, r1\n\tadd\t@CPI5_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_21:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_11:\n\tld.1\t64, r2\n\tadd\t@CPI5_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_updateApproval:\n.func_begin6:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[4]\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[8]\n\tadd\t32, r1, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[6]\n\tadd\t64, r1, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[5]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tand\t@CPI6_0[0], r2, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI6_0[0], r3, r3\n\tadd\tr3, r0, stack-[7]\n\tadd\tstack-[5], r0, r3\n\tand\t@CPI6_3[0], r3, r3\n\tadd\tr3, r0, stack-[5]\n\tadd\tstack-[6], r0, r3\n\tand\t@CPI6_0[0], r3, r3\n\tadd\tr3, r0, stack-[2]\n\tadd\tstack-[8], r0, r3\n\tand\t@CPI6_3[0], r3, r3\n\tadd\tr3, r0, stack-[6]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI6_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r6\n\tsload\tr6, r1\n\tshr.s\t208, r1, r1\n\tadd\tstack-[6], r0, r5\n\tsub!\tr1, r5, r1\n\tjump.ne\t@.BB6_5\n\tadd\tstack-[5], r0, r4\n\tsub.s!\t0, r4, r1\n\tadd\tr4, r0, r1\n\tjump.ne\t@.BB6_7\n\tadd\tr6, r0, stack-[1]\n\tadd\t@CPI6_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tand\t@CPI6_3[0], r1, r1\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[1], r0, r6\n.BB6_7:\n\tshl.s\t160, r1, r1\n\tadd\tstack-[8], r0, r2\n\tshl.s\t208, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[2], r0, r3\n\tor\tr1, r3, r1\n\tadd\t@CPI6_8[0], r1, r1\n\tsstore\tr6, r1\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tst.1\tr2, r5\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tst.1\tr1, r3\n\tadd\t@CPI6_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI6_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI6_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI6_10[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB6_1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_5:\n\tld.1\t64, r1\n\tadd\t@CPI6_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_DOMAIN_SEPARATOR:\n.func_begin7:\n\tnop\tstack+=[2]\n\tadd\t@CPI7_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI7_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB7_5\n\tadd\t@CPI7_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB7_4\n\tjump\t@.BB7_1\n.BB7_5:\n\tld.1\t64, r3\n\tadd\t64, r3, r1\n\tadd\t@CPI7_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[2]\n\tadd\t32, r3, r2\n\tadd\t@CPI7_6[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r4\n\tadd\t128, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\t128, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI7_7[0], r4, r1\n\tjump.ge\t@.BB7_7\n\tadd\t160, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t@CPI7_1[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI7_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_1[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI7_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n.BB7_4:\n\tld\tr1, r1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_7:\n\tadd\t@CPI7_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_hashTypedData:\n.func_begin8:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI8_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI8_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB8_4\n\tadd\t@CPI8_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_9\n\tjump\t@.BB8_1\n.BB8_4:\n\tld.1\t64, r3\n\tadd\t64, r3, r1\n\tadd\t@CPI8_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[3]\n\tadd\t32, r3, r2\n\tadd\t@CPI8_6[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI8_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r4\n\tadd\t128, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\t128, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI8_7[0], r4, r1\n\tjump.ge\t@.BB8_6\n\tadd\t160, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t@CPI8_1[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI8_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n.BB8_9:\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t66, r1, r2\n\tadd\tstack-[2], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\t@CPI8_9[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r1, r4\n\tst.1\tr4, r3\n\tadd\t66, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI8_10[0], r1, r3\n\tjump.gt\t@.BB8_6\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI8_1[0], r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI8_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tadd\t@CPI8_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_hashPermitDetails:\n.func_begin9:\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tadd\t@CPI9_0[0], r0, r4\n\tst.1\tr3, r4\n\tld.1.inc\tr1, r4, r5\n\tand\t@CPI9_1[0], r4, r4\n\tadd\t64, r2, r6\n\tst.1\tr6, r4\n\tld.1\tr5, r4\n\tand\t@CPI9_1[0], r4, r4\n\tadd\t96, r2, r5\n\tst.1\tr5, r4\n\tadd\t64, r1, r4\n\tld.1\tr4, r4\n\tand\t@CPI9_2[0], r4, r4\n\tadd\t128, r2, r5\n\tst.1\tr5, r4\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI9_2[0], r1, r1\n\tadd\t160, r2, r4\n\tst.1\tr4, r1\n\tadd\t160, r0, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI9_3[0], r2, r1\n\tjump.ge\t@.BB9_1\n\tadd\t192, r2, r1\n\tst.1\t64, r1\n\tadd\t@CPI9_4[0], r0, r1\n\tsub.s!\t@CPI9_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI9_4[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI9_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI9_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_3\n\tld\tr1, r1\n\tret\n.BB9_1:\n\tadd\t@CPI9_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_verify:\n.func_begin10:\n\tnop\tstack+=[4]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI10_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr4, r0, stack-[1]\n\tst.2\t4, r4\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB10_27\n\tld.1\t64, r10\n\tadd\t36, r10, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI10_3[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r10, r1\n\tadd\tstack-[4], r0, r8\n\tst.1\tr1, r8\n\tand\t31, r8, r2\n\tadd\t100, r10, r1\n\tadd\tstack-[3], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r8, r4\n\tjump.eq\t@.BB10_50\n\tadd\tr0, r0, r5\n.BB10_6:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB10_6\n.BB10_50:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB10_8\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB10_8:\n\tadd\tr1, r8, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI10_4[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB10_10\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB10_20\n.BB10_27:\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t65, r2, r1\n\tjump.ne\t@.BB10_33\n\tadd\tstack-[3], r0, r4\n\tadd\t64, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r3\n\tadd\t32, r4, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tld\tr3, r3\n\tshr.s\t248, r3, r3\n\tjump\t@.BB10_28\n.BB10_10:\n\tadd\t31, r8, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t@CPI10_1[0], r0, r4\n\tsub.s!\t@CPI10_1[0], r10, r5\n\tadd\tr4, r0, r5\n\tadd.lt\tr10, r0, r5\n\tshl.s\t64, r5, r5\n\tadd\t100, r3, r3\n\tsub.s!\t@CPI10_1[0], r3, r6\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr5, r3, r3\n\tsub.s!\t@CPI10_1[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tadd\tr10, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI10_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB10_47\n\tadd\tr0, r0, r7\n.BB10_12:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB10_12\n.BB10_47:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB10_14\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB10_14:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_15\n.BB10_20:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI10_5[0], r1, r4\n\tjump.gt\t@.BB10_22\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB10_22\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB10_1\n\tld.1\tr10, r2\n\tand\t@CPI10_6[0], r2, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB10_1\n\tsub.s!\t@CPI10_3[0], r2, r2\n\tjump.eq\t@.BB10_3\n\tadd\t@CPI10_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI10_1[0], r0, r2\n\tsub.s!\t@CPI10_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_33:\n\tsub.s!\t64, r2, r1\n\tadd\tstack-[3], r0, r4\n\tjump.ne\t@.BB10_34\n\tadd\t32, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r2\n\tld\tr2, r3\n\tand\t@CPI10_12[0], r3, r2\n\tshr.s\t255, r3, r3\n\tadd\t27, r3, r3\n.BB10_28:\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r5\n\tst.1\tr5, r2\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tst.1\tr4, r1\n\tst.1\t0, r0\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI10_1[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI10_13[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI10_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB10_46\n\tadd\tr0, r0, r6\n.BB10_30:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB10_30\n.BB10_46:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB10_32\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB10_32:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_37\n\tld.1\t0, r1\n\tand!\t@CPI10_4[0], r1, r1\n\tjump.eq\t@.BB10_43\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI10_4[0], r2, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB10_45\n.BB10_3:\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_22:\n\tadd\t@CPI10_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_37:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB10_48\n\tadd\tr0, r0, r5\n.BB10_39:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB10_39\n.BB10_48:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB10_41\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB10_41:\n\tadd\t@CPI10_1[0], r0, r1\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t96, r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_43:\n\tld.1\t64, r1\n\tadd\t@CPI10_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI10_1[0], r0, r2\n\tsub.s!\t@CPI10_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_45:\n\tld.1\t64, r1\n\tadd\t@CPI10_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI10_1[0], r0, r2\n\tsub.s!\t@CPI10_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_15:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB10_49\n\tadd\tr0, r0, r5\n.BB10_17:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB10_17\n.BB10_49:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB10_19\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB10_19:\n\tadd\t@CPI10_1[0], r0, r1\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t96, r0, r2\n\tshl\tstack[@returndatasize], r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_34:\n\tld.1\t64, r1\n\tadd\t@CPI10_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI10_1[0], r0, r2\n\tsub.s!\t@CPI10_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\n__farcall:\n.func_begin11:\n.tmp0:\n\tfar_call\tr1, r2, @.BB11_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB11_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end11:\n\n__staticcall:\n.func_begin12:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB12_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB12_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end12:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_0:\nCPI5_1:\nCPI6_1:\nCPI7_1:\nCPI8_1:\nCPI9_4:\nCPI10_1:\n\t.cell 4294967295\nCPI0_1:\nCPI7_3:\nCPI8_3:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_2:\nCPI7_6:\nCPI8_6:\n\t.cell -52161594716389521330893928962118603104092639720612062241465413496839451137946\nCPI0_3:\nCPI7_5:\nCPI8_5:\n\t.cell -45779730367734237300416505028998464482483735542981242881131590982248139992214\nCPI0_4:\n\t.cell 53919893334301279589334030174039261362486096052542264263037304176640\nCPI0_5:\n\t.cell 919045397\nCPI0_6:\n\t.cell 2270264388\nCPI0_7:\n\t.cell 2270264389\nCPI0_8:\n\t.cell 2457706757\nCPI0_9:\n\t.cell 3428001919\nCPI0_10:\n\t.cell 919045398\nCPI0_11:\n\t.cell 1708749372\nCPI0_12:\n\t.cell 728216943\nCPI0_13:\n\t.cell 728216944\nCPI0_14:\n\t.cell 910484757\nCPI0_15:\n\t.cell 223916507\nCPI0_16:\n\t.cell 707625169\nCPI0_17:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_18:\nCPI10_5:\n\t.cell 18446744073709551615\nCPI0_19:\nCPI4_1:\nCPI5_0:\nCPI6_0:\nCPI9_1:\nCPI10_4:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_20:\nCPI5_2:\nCPI6_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_21:\nCPI5_6:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_22:\n\t.cell -53511297404191682329934120677549153675333312369007501589127433805429099226972\nCPI0_23:\nCPI4_0:\nCPI5_5:\nCPI6_3:\nCPI9_2:\n\t.cell 281474976710655\nCPI0_24:\nCPI5_3:\nCPI6_6:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_25:\nCPI5_4:\nCPI6_7:\nCPI7_4:\nCPI8_4:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_26:\n\t.cell 411376139330300049037104964736419422560851250125375309904609280\nCPI0_27:\n\t.cell -411376139330301510538742295639337626245683966408394965837152256\nCPI0_28:\n\t.cell -16905801749418125598911358881880658891597516302368944367831820423737834536085\nCPI0_29:\n\t.cell 281474976645120\nCPI0_30:\n\t.cell 16656689461315013577446926864877671087742376893865443309544100568702858035200\nCPI0_31:\nCPI6_5:\nCPI10_8:\n\t.cell 316912650057057350374175801344\nCPI0_32:\n\t.cell 411376139330301510538742295639337626245683966408394965837152255\nCPI0_33:\n\t.cell 38862800866400717620379257884932926128815229957387970298327282119574720616691\nCPI0_34:\n\t.cell 2535301200456458802993406410752\nCPI0_35:\n\t.cell 18446744073709551519\nCPI0_36:\nCPI8_10:\n\t.cell 18446744073709551487\nCPI0_37:\n\t.cell -5646644308650304633673671418074907635221534582828668243198505864732812971056\nCPI0_38:\n\t.cell -23008135712323165285793291361946997288496412778811870996256870959443565608960\nCPI0_39:\nCPI3_2:\nCPI5_8:\nCPI7_10:\nCPI8_12:\nCPI9_7:\nCPI10_10:\n\t.cell 2852213850513516153367582212096\nCPI0_40:\nCPI9_0:\n\t.cell 45857498783384407395167267217892383872014237107069511176979320835266024519288\nCPI0_41:\n\t.cell 18446744073709551423\nCPI0_42:\nCPI1_1:\nCPI7_8:\nCPI8_8:\nCPI9_5:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_43:\n\t.cell -36589544825516650377272014101759310010242838561916272753120378930030039529373\nCPI0_44:\n\t.cell 18446744073709551455\nCPI0_45:\nCPI7_0:\nCPI8_0:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_46:\nCPI7_2:\nCPI8_2:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_47:\nCPI8_9:\n\t.cell 11309588061646438093662687302255421419811724423900836950936401294474059186176\nCPI0_48:\nCPI10_0:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_49:\nCPI10_2:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_50:\nCPI10_3:\n\t.cell 10019309979067222254582373821846632475949454479833780424560900009889672200192\nCPI0_51:\nCPI10_6:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_52:\nCPI10_7:\n\t.cell -36003727745153843115977315250825841939871317833748553110671859368683366252544\nCPI0_53:\nCPI10_11:\n\t.cell 34330184283879907065060116633237427963330662859944784284226023607124268941312\nCPI0_54:\nCPI10_12:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819967\nCPI0_55:\nCPI10_13:\n\t.cell 10141204801825835211973625643008\nCPI0_56:\nCPI10_14:\n\t.cell -57277445299346939555017523304462417710394184523039180189118882009940632797184\nCPI0_57:\nCPI3_1:\nCPI7_9:\nCPI8_11:\nCPI9_6:\nCPI10_9:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_58:\nCPI6_4:\n\t.cell 53101767170179179614234022059546774853126925491354750665263665077259834753024\nCPI0_59:\nCPI6_8:\n\t.cell 411376139330301510538742295639337626245683966408394965837152256\nCPI0_60:\nCPI6_9:\n\t.cell 904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI0_61:\nCPI6_10:\n\t.cell -25945322668367580891504319170854679244924904783121586901380082520036406261524\nCPI0_62:\nCPI10_15:\n\t.cell -52619634544666151247648531991310182301038485061963141803196352251815302004736\nCPI0_63:\n\t.cell 18446744073709551488\nCPI0_64:\nCPI5_7:\n\t.cell -2968852162061455530780637784344380435408102914471493733484021055401547005952\nCPI0_65:\nCPI5_9:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI0_66:\nCPI5_10:\n\t.cell 7922816251426433759354395033600\nCPI0_67:\nCPI5_11:\n\t.cell 38139611465464413496808039553746763673334662531416629107351575709807806513152\nCPI0_68:\nCPI5_12:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_69:\nCPI5_13:\n\t.cell -18044483450345793312606777386879205779046816849360360974261537364396935741440\nCPI2_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\nCPI3_0:\nCPI7_7:\nCPI8_7:\n\t.cell 18446744073709551456\nCPI9_3:\n\t.cell 18446744073709551424\n","bytecode":{"object":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address,address)":"927da105","approve(address,address,uint160,uint48)":"87517c45","invalidateNonces(address,address,uint48)":"65d9723c","lockdown((address,address)[])":"cc53287f","permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)":"2b67b570","permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)":"2a2d80d1","transferFrom((address,address,uint160,address)[])":"0d58b1db","transferFrom(address,address,uint160,address)":"36c78516"}},"irOptimized":"/// @use-src 2:\"src/AllowanceTransfer.sol\", 3:\"src/EIP712.sol\", 7:\"src/interfaces/IAllowanceTransfer.sol\"\nobject \"AllowanceTransfer_1021\" {\n    code {\n        {\n            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            /// @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\"\n            mstore(160, /** @src 3:856:869  \"block.chainid\" */ chainid())\n            /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n            let _2 := add(_1, 0x20)\n            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n            mstore(_2, /** @src 3:726:806  \"keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\")\" */ 0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866)\n            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 64), /** @src 3:654:674  \"keccak256(\\\"Permit2\\\")\" */ 0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a)\n            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 96), /** @src 3:856:869  \"block.chainid\" */ chainid())\n            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 128), /** @src 3:1614:1618  \"this\" */ address())\n            /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n            mstore(_1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 128)\n            let newFreePtr := add(_1, /** @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\" */ 160)\n            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            /// @src 3:879:953  \"_CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME)\"\n            mstore(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 128, /** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ keccak256(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _2, mload(/** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ _1)))\n            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n            let _3 := datasize(\"AllowanceTransfer_1021_deployed\")\n            codecopy(newFreePtr, dataoffset(\"AllowanceTransfer_1021_deployed\"), _3)\n            setimmutable(newFreePtr, \"1026\", mload(128))\n            setimmutable(newFreePtr, \"1028\", mload(/** @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\" */ 160))\n            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n            return(newFreePtr, _3)\n        }\n    }\n    /// @use-src 1:\"lib/solmate/src/utils/SafeTransferLib.sol\", 2:\"src/AllowanceTransfer.sol\", 3:\"src/EIP712.sol\", 11:\"src/libraries/Allowance.sol\", 13:\"src/libraries/PermitHash.sol\", 15:\"src/libraries/SignatureVerification.sol\"\n    object \"AllowanceTransfer_1021_deployed\" {\n        code {\n            {\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0d58b1db {\n                        if callvalue() { revert(0, 0) }\n                        let _1 := 32\n                        if slt(add(calldatasize(), not(3)), _1) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        let _2 := 0xffffffffffffffff\n                        if gt(offset, _2) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let length := calldataload(add(4, offset))\n                        if gt(length, _2) { revert(0, 0) }\n                        let _3 := 36\n                        let _4 := 7\n                        if gt(add(add(offset, shl(_4, length)), _3), calldatasize()) { revert(0, 0) }\n                        /// @src 2:3089:3102  \"uint256 i = 0\"\n                        let var_i := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0\n                        /// @src 2:3084:3333  \"for (uint256 i = 0; i < length; ++i) {...\"\n                        for { }\n                        /** @src 2:3104:3114  \"i < length\" */ lt(var_i, length)\n                        /// @src 2:3089:3102  \"uint256 i = 0\"\n                        {\n                            /// @src 2:3116:3119  \"++i\"\n                            var_i := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ add(/** @src 2:3116:3119  \"++i\" */ var_i, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 1)\n                        }\n                        /// @src 2:3116:3119  \"++i\"\n                        {\n                            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                            let _5 := add(offset, shl(_4, var_i))\n                            if slt(add(sub(calldatasize(), _5), not(35)), 0x80) { revert(0, 0) }\n                            let memPtr := mload(64)\n                            finalize_allocation_8773(memPtr)\n                            let _6 := abi_decode_address(add(_5, _3))\n                            mstore(memPtr, _6)\n                            let _7 := abi_decode_address(add(_5, 68))\n                            mstore(add(memPtr, _1), _7)\n                            let _8 := abi_decode_address(add(_5, 100))\n                            mstore(add(memPtr, 64), _8)\n                            let _9 := abi_decode_address(add(_5, 132))\n                            mstore(add(memPtr, 96), _9)\n                            let _10 := sub(shl(160, 1), 1)\n                            /// @src 2:3297:3317  \"transferDetail.token\"\n                            fun_transfer(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(_6, _10), and(_7, _10), and(_8, _10), and(_9, _10))\n                        }\n                        return(0, 0)\n                    }\n                    case 0x2a2d80d1 {\n                        if callvalue() { revert(0, 0) }\n                        let _11 := not(3)\n                        if slt(add(calldatasize(), _11), 96) { revert(0, 0) }\n                        let value0 := abi_decode_address_8774()\n                        let offset_1 := calldataload(36)\n                        let _12 := 0xffffffffffffffff\n                        if gt(offset_1, _12) { revert(0, 0) }\n                        if slt(add(sub(calldatasize(), offset_1), _11), 96) { revert(0, 0) }\n                        let memPtr_1 := mload(64)\n                        let newFreePtr := add(memPtr_1, 96)\n                        if or(gt(newFreePtr, _12), lt(newFreePtr, memPtr_1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        mstore(64, newFreePtr)\n                        let offset_2 := calldataload(add(4, offset_1))\n                        if gt(offset_2, _12) { revert(0, 0) }\n                        let _13 := add(offset_1, offset_2)\n                        if iszero(slt(add(_13, 35), calldatasize())) { revert(0, 0) }\n                        let _14 := calldataload(add(_13, 4))\n                        let _15 := array_allocation_size_array_struct_PermitDetails_dyn(_14)\n                        let memPtr_2 := mload(64)\n                        finalize_allocation(memPtr_2, _15)\n                        let dst := memPtr_2\n                        mstore(memPtr_2, _14)\n                        dst := add(memPtr_2, 32)\n                        let srcEnd := add(add(_13, shl(7, _14)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(0, 0) }\n                        let src := add(_13, 36)\n                        for { } lt(src, srcEnd) { src := add(src, 0x80) }\n                        {\n                            if slt(sub(calldatasize(), src), 0x80) { revert(0, 0) }\n                            let memPtr_3 := mload(64)\n                            finalize_allocation_8773(memPtr_3)\n                            mstore(memPtr_3, abi_decode_address(src))\n                            mstore(add(memPtr_3, 32), abi_decode_address(add(src, 32)))\n                            mstore(add(memPtr_3, 64), abi_decode_uint48(add(src, 64)))\n                            mstore(add(memPtr_3, 96), abi_decode_uint48(add(src, 96)))\n                            mstore(dst, memPtr_3)\n                            dst := add(dst, 32)\n                        }\n                        mstore(memPtr_1, memPtr_2)\n                        let _16 := abi_decode_address(add(offset_1, 36))\n                        mstore(add(memPtr_1, 32), _16)\n                        let value := calldataload(add(offset_1, 68))\n                        mstore(add(memPtr_1, 64), value)\n                        let offset_3 := calldataload(68)\n                        if gt(offset_3, _12) { revert(0, 0) }\n                        let value2, value3 := abi_decode_bytes_calldata(add(4, offset_3), calldatasize())\n                        /// @src 2:2182:2277  \"if (block.timestamp > permitBatch.sigDeadline) revert SignatureExpired(permitBatch.sigDeadline)\"\n                        if /** @src 2:2186:2227  \"block.timestamp > permitBatch.sigDeadline\" */ gt(/** @src 2:2186:2201  \"block.timestamp\" */ timestamp(), /** @src 2:2186:2227  \"block.timestamp > permitBatch.sigDeadline\" */ value)\n                        /// @src 2:2182:2277  \"if (block.timestamp > permitBatch.sigDeadline) revert SignatureExpired(permitBatch.sigDeadline)\"\n                        {\n                            /// @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\"\n                            let _17 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                            /// @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\"\n                            mstore(_17, shl(224, 0xcd21db4f))\n                            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                            mstore(/** @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\" */ add(_17, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 4), value)\n                            /// @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\"\n                            revert(_17, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 36)\n                        }\n                        let length_1 := mload(/** @src 13:2375:2394  \"permitBatch.details\" */ mload(memPtr_1))\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        let _18 := array_allocation_size_array_struct_PermitDetails_dyn(length_1)\n                        let memPtr_4 := mload(64)\n                        finalize_allocation(memPtr_4, _18)\n                        mstore(memPtr_4, length_1)\n                        let dataSize := array_allocation_size_array_struct_PermitDetails_dyn(length_1)\n                        calldatacopy(add(memPtr_4, 32), calldatasize(), add(dataSize, not(31)))\n                        /// @src 13:2483:2496  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0\n                        /// @src 13:2478:2604  \"for (uint256 i = 0; i < numPermits; ++i) {...\"\n                        for { }\n                        /** @src 13:2498:2512  \"i < numPermits\" */ lt(var_i_1, length_1)\n                        /// @src 13:2483:2496  \"uint256 i = 0\"\n                        {\n                            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                            if eq(var_i_1, not(0))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 36)\n                            }\n                            /// @src 13:2514:2517  \"++i\"\n                            var_i_1 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ add(var_i_1, 1)\n                        }\n                        /// @src 13:2514:2517  \"++i\"\n                        {\n                            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                            mstore(/** @src 13:2533:2593  \"permitHashes[i] = _hashPermitDetails(permitBatch.details[i])\" */ memory_array_index_access_struct_PermitDetails_dyn(memPtr_4, var_i_1), /** @src 13:2551:2593  \"_hashPermitDetails(permitBatch.details[i])\" */ fun_hashPermitDetails(/** @src 13:2570:2592  \"permitBatch.details[i]\" */ mload(memory_array_index_access_struct_PermitDetails_dyn(/** @src 13:2570:2589  \"permitBatch.details\" */ mload(memPtr_1), /** @src 13:2570:2592  \"permitBatch.details[i]\" */ var_i_1))))\n                        }\n                        /// @src 13:2721:2751  \"abi.encodePacked(permitHashes)\"\n                        let expr_mpos := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                        /// @src 13:661:834  \"keccak256(...\"\n                        let pos := /** @src 13:2721:2751  \"abi.encodePacked(permitHashes)\" */ add(expr_mpos, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 32)\n                        /// @src 13:661:834  \"keccak256(...\"\n                        let pos_1 := pos\n                        let length_2 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(/** @src 13:661:834  \"keccak256(...\" */ memPtr_4)\n                        pos := pos\n                        let srcPtr := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ add(memPtr_4, 32)\n                        /// @src 13:661:834  \"keccak256(...\"\n                        let i := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0\n                        /// @src 13:661:834  \"keccak256(...\"\n                        for { }\n                        lt(i, length_2)\n                        {\n                            i := add(i, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 1)\n                        }\n                        /// @src 13:661:834  \"keccak256(...\"\n                        {\n                            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                            mstore(pos, /** @src 13:661:834  \"keccak256(...\" */ mload(srcPtr))\n                            pos := add(pos, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 32)\n                            /// @src 13:661:834  \"keccak256(...\"\n                            srcPtr := add(srcPtr, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 32)\n                        }\n                        /// @src 13:2721:2751  \"abi.encodePacked(permitHashes)\"\n                        let _19 := sub(pos, expr_mpos)\n                        mstore(expr_mpos, add(_19, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ not(31)))\n                        /// @src 13:2721:2751  \"abi.encodePacked(permitHashes)\"\n                        finalize_allocation(expr_mpos, _19)\n                        /// @src 13:2711:2752  \"keccak256(abi.encodePacked(permitHashes))\"\n                        let expr := keccak256(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ pos_1, mload(/** @src 13:2711:2752  \"keccak256(abi.encodePacked(permitHashes))\" */ expr_mpos))\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        let _20 := sub(shl(160, 1), 1)\n                        let cleaned := and(mload(add(memPtr_1, 32)), _20)\n                        let _21 := mload(add(memPtr_1, 64))\n                        /// @src 13:2643:2844  \"abi.encode(...\"\n                        let expr_mpos_1 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                        /// @src 13:2643:2844  \"abi.encode(...\"\n                        let _22 := add(expr_mpos_1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 32)\n                        mstore(_22, /** @src 13:661:834  \"keccak256(...\" */ 0xaf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863)\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2643:2844  \"abi.encode(...\" */ expr_mpos_1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 64), expr)\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2643:2844  \"abi.encode(...\" */ expr_mpos_1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 96), cleaned)\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2643:2844  \"abi.encode(...\" */ expr_mpos_1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0x80), _21)\n                        /// @src 13:2643:2844  \"abi.encode(...\"\n                        mstore(expr_mpos_1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0x80)\n                        /// @src 13:2643:2844  \"abi.encode(...\"\n                        finalize_allocation_12095(expr_mpos_1)\n                        /// @src 2:2398:2403  \"owner\"\n                        fun_verify(value2, value3, /** @src 2:2362:2396  \"_hashTypedData(permitBatch.hash())\" */ fun_hashTypedData(/** @src 13:2620:2854  \"keccak256(...\" */ keccak256(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _22, mload(/** @src 13:2620:2854  \"keccak256(...\" */ expr_mpos_1))), /** @src 2:2398:2403  \"owner\" */ value0)\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        let cleaned_1 := and(mload(add(memPtr_1, 32)), _20)\n                        let length_3 := mload(/** @src 2:2503:2522  \"permitBatch.details\" */ mload(memPtr_1))\n                        /// @src 2:2548:2561  \"uint256 i = 0\"\n                        let var_i_2 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0\n                        /// @src 2:2543:2668  \"for (uint256 i = 0; i < length; ++i) {...\"\n                        for { }\n                        /** @src 2:2563:2573  \"i < length\" */ lt(var_i_2, length_3)\n                        /// @src 2:2548:2561  \"uint256 i = 0\"\n                        {\n                            /// @src 2:2575:2578  \"++i\"\n                            var_i_2 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ add(/** @src 2:2575:2578  \"++i\" */ var_i_2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 1)\n                        }\n                        /// @src 2:2575:2578  \"++i\"\n                        {\n                            /// @src 2:2645:2652  \"spender\"\n                            fun_updateApproval(/** @src 2:2614:2636  \"permitBatch.details[i]\" */ mload(memory_array_index_access_struct_PermitDetails_dyn(/** @src 2:2614:2633  \"permitBatch.details\" */ mload(memPtr_1), /** @src 2:2614:2636  \"permitBatch.details[i]\" */ var_i_2)), /** @src 2:2645:2652  \"spender\" */ value0, cleaned_1)\n                        }\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        return(0, 0)\n                    }\n                    case 0x2b67b570 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 256) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_8774()\n                        let _23 := add(calldatasize(), not(35))\n                        if slt(_23, 0xc0) { revert(0, 0) }\n                        let memPtr_5 := mload(64)\n                        let newFreePtr_1 := add(memPtr_5, 0x60)\n                        let _24 := 0xffffffffffffffff\n                        if or(gt(newFreePtr_1, _24), lt(newFreePtr_1, memPtr_5))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr_1)\n                        if slt(_23, 0x80) { revert(0, 0) }\n                        finalize_allocation_8773(newFreePtr_1)\n                        let value_1 := calldataload(36)\n                        let _25 := sub(shl(160, 1), 1)\n                        if iszero(eq(value_1, and(value_1, _25))) { revert(0, 0) }\n                        mstore(newFreePtr_1, value_1)\n                        let value_2 := calldataload(68)\n                        if iszero(eq(value_2, and(value_2, _25))) { revert(0, 0) }\n                        mstore(add(memPtr_5, 0x80), value_2)\n                        let value_3 := calldataload(100)\n                        let _26 := 0xffffffffffff\n                        if iszero(eq(value_3, and(value_3, _26))) { revert(0, 0) }\n                        mstore(add(memPtr_5, 160), value_3)\n                        let value_4 := calldataload(132)\n                        if iszero(eq(value_4, and(value_4, _26))) { revert(0, 0) }\n                        mstore(add(memPtr_5, 0xc0), value_4)\n                        mstore(memPtr_5, newFreePtr_1)\n                        let value_5 := calldataload(164)\n                        if iszero(eq(value_5, and(value_5, _25))) { revert(0, 0) }\n                        let _27 := add(memPtr_5, 32)\n                        mstore(_27, value_5)\n                        let value_6 := calldataload(196)\n                        let _28 := add(memPtr_5, 64)\n                        mstore(_28, value_6)\n                        let offset_4 := calldataload(228)\n                        if gt(offset_4, _24) { revert(0, 0) }\n                        let value2_1, value3_1 := abi_decode_bytes_calldata(add(4, offset_4), calldatasize())\n                        /// @src 2:1720:1817  \"if (block.timestamp > permitSingle.sigDeadline) revert SignatureExpired(permitSingle.sigDeadline)\"\n                        if /** @src 2:1724:1766  \"block.timestamp > permitSingle.sigDeadline\" */ gt(/** @src 2:1724:1739  \"block.timestamp\" */ timestamp(), /** @src 2:1724:1766  \"block.timestamp > permitSingle.sigDeadline\" */ value_6)\n                        /// @src 2:1720:1817  \"if (block.timestamp > permitSingle.sigDeadline) revert SignatureExpired(permitSingle.sigDeadline)\"\n                        {\n                            /// @src 2:1775:1817  \"SignatureExpired(permitSingle.sigDeadline)\"\n                            let _29 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                            /// @src 2:1775:1817  \"SignatureExpired(permitSingle.sigDeadline)\"\n                            mstore(_29, /** @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\" */ shl(224, 0xcd21db4f))\n                            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                            mstore(/** @src 2:1775:1817  \"SignatureExpired(permitSingle.sigDeadline)\" */ add(_29, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 4), value_6)\n                            /// @src 2:1775:1817  \"SignatureExpired(permitSingle.sigDeadline)\"\n                            revert(_29, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 36)\n                        }\n                        /// @src 13:2059:2099  \"_hashPermitDetails(permitSingle.details)\"\n                        let expr_1 := fun_hashPermitDetails(/** @src 13:2078:2098  \"permitSingle.details\" */ mload(memPtr_5))\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        let cleaned_2 := and(mload(/** @src 13:2186:2206  \"permitSingle.spender\" */ _27), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _25)\n                        let _30 := mload(/** @src 13:2208:2232  \"permitSingle.sigDeadline\" */ _28)\n                        /// @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\"\n                        let expr_mpos_2 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                        /// @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\"\n                        let _31 := add(expr_mpos_2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 32)\n                        mstore(_31, /** @src 13:433:605  \"keccak256(...\" */ 0xf3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0)\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\" */ expr_mpos_2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 64), expr_1)\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\" */ expr_mpos_2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0x60), cleaned_2)\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\" */ expr_mpos_2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0x80), _30)\n                        /// @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\"\n                        mstore(expr_mpos_2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0x80)\n                        /// @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\"\n                        finalize_allocation_12095(expr_mpos_2)\n                        /// @src 2:1939:1944  \"owner\"\n                        fun_verify(value2_1, value3_1, /** @src 2:1902:1937  \"_hashTypedData(permitSingle.hash())\" */ fun_hashTypedData(/** @src 13:2128:2234  \"keccak256(abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline))\" */ keccak256(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _31, mload(/** @src 13:2128:2234  \"keccak256(abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline))\" */ expr_mpos_2))), /** @src 2:1939:1944  \"owner\" */ value0_1)\n                        /// @src 2:1972:1992  \"permitSingle.details\"\n                        let _mpos := mload(memPtr_5)\n                        /// @src 2:2001:2021  \"permitSingle.spender\"\n                        fun_updateApproval(_mpos, value0_1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(mload(/** @src 2:2001:2021  \"permitSingle.spender\" */ _27), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _25))\n                        return(0, 0)\n                    }\n                    case 0x3644e515 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret := fun_DOMAIN_SEPARATOR()\n                        let memPos := mload(64)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    case 0x36c78516 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_8774()\n                        let value1 := abi_decode_address_8781()\n                        let value2_2 := abi_decode_address_8793()\n                        let value_7 := calldataload(100)\n                        if iszero(eq(value_7, and(value_7, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        /// @src 2:2855:2860  \"token\"\n                        fun_transfer(value0_2, value1, value2_2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ value_7)\n                        return(0, 0)\n                    }\n                    case 0x65d9723c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_8774()\n                        let value1_1 := abi_decode_address_8781()\n                        let value_8 := calldataload(68)\n                        let _32 := 0xffffffffffff\n                        let _33 := and(value_8, _32)\n                        if iszero(eq(value_8, _33)) { revert(0, 0) }\n                        mstore(0, /** @src 2:4987:4997  \"msg.sender\" */ caller())\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        let _34 := 32\n                        mstore(_34, 0)\n                        let _35 := keccak256(0, 64)\n                        let _36 := sub(shl(160, 1), 1)\n                        let _37 := and(value0_3, _36)\n                        mstore(0, _37)\n                        mstore(_34, _35)\n                        let dataSlot := keccak256(0, 64)\n                        let _38 := and(value1_1, _36)\n                        mstore(0, _38)\n                        mstore(_34, dataSlot)\n                        let _39 := shr(208, sload(keccak256(0, 64)))\n                        /// @src 2:5031:5078  \"if (newNonce <= oldNonce) revert InvalidNonce()\"\n                        if /** @src 2:5035:5055  \"newNonce <= oldNonce\" */ iszero(gt(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _33, _39))\n                        /// @src 2:5031:5078  \"if (newNonce <= oldNonce) revert InvalidNonce()\"\n                        {\n                            /// @src 2:5064:5078  \"InvalidNonce()\"\n                            let _40 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                            /// @src 2:5064:5078  \"InvalidNonce()\"\n                            mstore(_40, shl(225, 0x3ab3447f))\n                            revert(_40, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 4)\n                        }\n                        /// @src 2:5243:5303  \"if (delta > type(uint16).max) revert ExcessiveInvalidation()\"\n                        if /** @src 2:5247:5271  \"delta > type(uint16).max\" */ gt(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(sub(/** @src 2:5210:5229  \"newNonce - oldNonce\" */ value_8, _39), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _32), 0xffff)\n                        /// @src 2:5243:5303  \"if (delta > type(uint16).max) revert ExcessiveInvalidation()\"\n                        {\n                            /// @src 2:5280:5303  \"ExcessiveInvalidation()\"\n                            let _41 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                            /// @src 2:5280:5303  \"ExcessiveInvalidation()\"\n                            mstore(_41, shl(225, 0x1269ad13))\n                            revert(_41, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 4)\n                        }\n                        mstore(0, /** @src 2:4987:4997  \"msg.sender\" */ caller())\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        mstore(_34, 0)\n                        let _42 := keccak256(0, 64)\n                        mstore(0, _37)\n                        mstore(_34, _42)\n                        let dataSlot_1 := keccak256(0, 64)\n                        mstore(0, _38)\n                        mstore(_34, dataSlot_1)\n                        let dataSlot_2 := keccak256(0, 64)\n                        let _43 := sload(dataSlot_2)\n                        sstore(dataSlot_2, or(and(_43, sub(shl(208, 1), 1)), and(shl(208, /** @src 2:5035:5055  \"newNonce <= oldNonce\" */ value_8), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ shl(208, 0xffffffffffff))))\n                        /// @src 2:5393:5458  \"NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce)\"\n                        let _44 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                        mstore(_44, _33)\n                        mstore(add(_44, _34), _39)\n                        /// @src 2:5393:5458  \"NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce)\"\n                        log4(_44, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 64, /** @src 2:5393:5458  \"NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce)\" */ 0x55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f3, /** @src 2:4987:4997  \"msg.sender\" */ caller(), /** @src 2:5393:5458  \"NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce)\" */ _37, _38)\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        return(0, 0)\n                    }\n                    case 0x87517c45 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let value0_4 := abi_decode_address_8774()\n                        let value1_2 := abi_decode_address_8781()\n                        let value2_3 := abi_decode_address_8793()\n                        let value_9 := calldataload(100)\n                        let _45 := 0xffffffffffff\n                        let _46 := and(value_9, _45)\n                        if iszero(eq(value_9, _46)) { revert(0, 0) }\n                        mstore(0, /** @src 2:1397:1407  \"msg.sender\" */ caller())\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        mstore(32, 0)\n                        let _47 := keccak256(0, 64)\n                        let _48 := sub(shl(160, 1), 1)\n                        let _49 := and(value0_4, _48)\n                        mstore(0, _49)\n                        mstore(32, _47)\n                        let dataSlot_3 := keccak256(0, 64)\n                        let _50 := and(value1_2, _48)\n                        mstore(0, _50)\n                        mstore(32, dataSlot_3)\n                        let dataSlot_4 := keccak256(0, 64)\n                        /// @src 11:1510:1564  \"expiration == 0 ? uint48(block.timestamp) : expiration\"\n                        let expr_2 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0\n                        /// @src 11:1510:1564  \"expiration == 0 ? uint48(block.timestamp) : expiration\"\n                        switch /** @src 11:1510:1525  \"expiration == 0\" */ iszero(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _46)\n                        case /** @src 11:1510:1564  \"expiration == 0 ? uint48(block.timestamp) : expiration\" */ 0 { expr_2 := value_9 }\n                        default {\n                            expr_2 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(/** @src 11:1535:1550  \"block.timestamp\" */ timestamp(), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _45)\n                        }\n                        let _51 := sload(dataSlot_4)\n                        let _52 := and(value2_3, _48)\n                        sstore(dataSlot_4, or(or(and(_51, shl(208, 0xffffffffffff)), and(shl(160, expr_2), shl(160, 0xffffffffffff))), _52))\n                        /// @src 2:1502:1558  \"Approval(msg.sender, token, spender, amount, expiration)\"\n                        let _53 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                        mstore(_53, _52)\n                        mstore(add(_53, 32), _46)\n                        /// @src 2:1502:1558  \"Approval(msg.sender, token, spender, amount, expiration)\"\n                        log4(_53, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 64, /** @src 2:1502:1558  \"Approval(msg.sender, token, spender, amount, expiration)\" */ 0xda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b, /** @src 2:1397:1407  \"msg.sender\" */ caller(), /** @src 2:1502:1558  \"Approval(msg.sender, token, spender, amount, expiration)\" */ _49, _50)\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        return(0, 0)\n                    }\n                    case 0x927da105 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_5 := abi_decode_address_8774()\n                        let value1_3 := abi_decode_address_8781()\n                        let value2_4 := abi_decode_address_8793()\n                        let _54 := sub(shl(160, 1), 1)\n                        mstore(0, and(value0_5, _54))\n                        mstore(32, 0)\n                        let _55 := keccak256(0, 64)\n                        mstore(0, and(value1_3, _54))\n                        mstore(32, _55)\n                        let dataSlot_5 := keccak256(0, 64)\n                        mstore(0, and(value2_4, _54))\n                        mstore(32, dataSlot_5)\n                        let _56 := sload(keccak256(0, 64))\n                        let memPos_1 := mload(64)\n                        return(memPos_1, sub(abi_encode_uint160_uint48_uint48(memPos_1, and(_56, _54), and(shr(160, _56), 0xffffffffffff), shr(208, _56)), memPos_1))\n                    }\n                    case 0xcc53287f {\n                        if callvalue() { revert(0, 0) }\n                        let _57 := 32\n                        if slt(add(calldatasize(), not(3)), _57) { revert(0, 0) }\n                        let offset_5 := calldataload(4)\n                        let _58 := 0xffffffffffffffff\n                        if gt(offset_5, _58) { revert(0, 0) }\n                        if iszero(slt(add(offset_5, 35), calldatasize())) { revert(0, 0) }\n                        let length_4 := calldataload(add(4, offset_5))\n                        if gt(length_4, _58) { revert(0, 0) }\n                        let arrayPos := add(offset_5, 36)\n                        if gt(add(add(offset_5, shl(6, length_4)), 36), calldatasize()) { revert(0, 0) }\n                        /// @src 2:4533:4546  \"uint256 i = 0\"\n                        let var_i_3 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0\n                        /// @src 2:4528:4804  \"for (uint256 i = 0; i < length; ++i) {...\"\n                        for { }\n                        /** @src 2:4548:4558  \"i < length\" */ lt(var_i_3, length_4)\n                        /// @src 2:4533:4546  \"uint256 i = 0\"\n                        {\n                            /// @src 2:4560:4563  \"++i\"\n                            var_i_3 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ add(/** @src 2:4560:4563  \"++i\" */ var_i_3, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 1)\n                        }\n                        /// @src 2:4560:4563  \"++i\"\n                        {\n                            /// @src 2:4599:4617  \"approvals[i].token\"\n                            let expr_3 := read_from_calldatat_address(/** @src 2:4599:4611  \"approvals[i]\" */ calldata_array_index_access_struct_TokenSpenderPair_calldata_dyn_calldata(arrayPos, length_4, var_i_3))\n                            /// @src 2:4653:4673  \"approvals[i].spender\"\n                            let expr_4 := read_from_calldatat_address(add(/** @src 2:4653:4665  \"approvals[i]\" */ calldata_array_index_access_struct_TokenSpenderPair_calldata_dyn_calldata(arrayPos, length_4, var_i_3), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _57))\n                            mstore(0, /** @src 2:4370:4380  \"msg.sender\" */ caller())\n                            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                            mstore(_57, 0)\n                            let _59 := keccak256(0, 64)\n                            let _60 := sub(shl(160, 1), 1)\n                            let _61 := and(expr_3, _60)\n                            mstore(0, _61)\n                            mstore(_57, _59)\n                            let dataSlot_6 := keccak256(0, 64)\n                            let _62 := and(expr_4, _60)\n                            mstore(0, _62)\n                            mstore(_57, dataSlot_6)\n                            let dataSlot_7 := keccak256(0, 64)\n                            sstore(dataSlot_7, and(sload(dataSlot_7), shl(160, 0xffffffffffffffffffffffff)))\n                            /// @src 2:4758:4789  \"Lockdown(owner, token, spender)\"\n                            let _63 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                            mstore(_63, _61)\n                            mstore(add(_63, _57), _62)\n                            /// @src 2:4758:4789  \"Lockdown(owner, token, spender)\"\n                            log2(_63, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 64, /** @src 2:4758:4789  \"Lockdown(owner, token, spender)\" */ 0x89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4, /** @src 2:4370:4380  \"msg.sender\" */ caller())\n                        }\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address_8774() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_8781() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_8793() -> value\n            {\n                value := calldataload(68)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_8773(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x80)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_12095(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 13:433:605  \"keccak256(...\" */ 160)\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_array_struct_PermitDetails_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_uint48(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, and(value, 0xffffffffffff))) { revert(0, 0) }\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function abi_encode_uint160_uint48_uint48(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                let _1 := 0xffffffffffff\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), and(value2, _1))\n            }\n            function memory_array_index_access_struct_PermitDetails_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @ast-id 820 @src 2:3496:4233  \"function _transfer(address from, address to, uint160 amount, address token) private {...\"\n            function fun_transfer(var_from, var_to, var_amount, var_token)\n            {\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 2:3624:3633  \"allowance\"\n                let _2 := 0x00\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                mstore(/** @src 2:3624:3633  \"allowance\" */ _2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(var_from, _1))\n                mstore(0x20, /** @src 2:3624:3633  \"allowance\" */ _2)\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                let _3 := 0x40\n                let _4 := keccak256(/** @src 2:3624:3633  \"allowance\" */ _2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _3)\n                let _5 := and(var_token, _1)\n                mstore(/** @src 2:3624:3633  \"allowance\" */ _2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _5)\n                mstore(0x20, _4)\n                let dataSlot := keccak256(/** @src 2:3624:3633  \"allowance\" */ _2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _3)\n                mstore(/** @src 2:3624:3633  \"allowance\" */ _2, /** @src 2:3647:3657  \"msg.sender\" */ caller())\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                mstore(0x20, dataSlot)\n                let dataSlot_1 := keccak256(/** @src 2:3624:3633  \"allowance\" */ _2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _3)\n                let _6 := sload(/** @src 2:3691:3709  \"allowed.expiration\" */ dataSlot_1)\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                let value := and(shr(160, _6), 0xffffffffffff)\n                /// @src 2:3669:3754  \"if (block.timestamp > allowed.expiration) revert AllowanceExpired(allowed.expiration)\"\n                if /** @src 2:3673:3709  \"block.timestamp > allowed.expiration\" */ gt(/** @src 2:3673:3688  \"block.timestamp\" */ timestamp(), /** @src 2:3673:3709  \"block.timestamp > allowed.expiration\" */ value)\n                /// @src 2:3669:3754  \"if (block.timestamp > allowed.expiration) revert AllowanceExpired(allowed.expiration)\"\n                {\n                    /// @src 2:3718:3754  \"AllowanceExpired(allowed.expiration)\"\n                    let _7 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(_3)\n                    /// @src 2:3718:3754  \"AllowanceExpired(allowed.expiration)\"\n                    mstore(_7, shl(225, 0x6c0d9797))\n                    /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                    mstore(/** @src 2:3718:3754  \"AllowanceExpired(allowed.expiration)\" */ add(_7, 4), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ value)\n                    /// @src 2:3718:3754  \"AllowanceExpired(allowed.expiration)\"\n                    revert(_7, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 36)\n                }\n                let cleaned := and(_6, _1)\n                /// @src 2:3809:4098  \"if (maxAmount != type(uint160).max) {...\"\n                if /** @src 2:3813:3843  \"maxAmount != type(uint160).max\" */ iszero(eq(cleaned, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _1))\n                /// @src 2:3809:4098  \"if (maxAmount != type(uint160).max) {...\"\n                {\n                    /// @src 2:3859:4088  \"if (amount > maxAmount) {...\"\n                    switch /** @src 2:3863:3881  \"amount > maxAmount\" */ gt(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(/** @src 2:3863:3881  \"amount > maxAmount\" */ var_amount, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _1), /** @src 2:3863:3881  \"amount > maxAmount\" */ cleaned)\n                    case /** @src 2:3859:4088  \"if (amount > maxAmount) {...\" */ 0 {\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        sstore(dataSlot_1, or(and(_6, shl(160, 0xffffffffffffffffffffffff)), and(sub(cleaned, /** @src 2:4028:4055  \"uint160(maxAmount) - amount\" */ var_amount), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _1)))\n                    }\n                    default /// @src 2:3859:4088  \"if (amount > maxAmount) {...\"\n                    {\n                        /// @src 2:3908:3940  \"InsufficientAllowance(maxAmount)\"\n                        let _8 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(_3)\n                        /// @src 2:3908:3940  \"InsufficientAllowance(maxAmount)\"\n                        mstore(_8, shl(224, 0xf96fb071))\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        mstore(/** @src 2:3908:3940  \"InsufficientAllowance(maxAmount)\" */ add(_8, 4), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ cleaned)\n                        /// @src 2:3908:3940  \"InsufficientAllowance(maxAmount)\"\n                        revert(_8, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 36)\n                    }\n                }\n                /// @src 1:1532:2887  \"assembly {...\"\n                let usr$freeMemoryPointer := mload(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _3)\n                /// @src 1:1532:2887  \"assembly {...\"\n                mstore(usr$freeMemoryPointer, shl(224, 0x23b872dd))\n                mstore(add(usr$freeMemoryPointer, 4), var_from)\n                mstore(add(usr$freeMemoryPointer, 36), var_to)\n                mstore(add(usr$freeMemoryPointer, 68), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(/** @src 2:4179:4226  \"ERC20(token).safeTransferFrom(from, to, amount)\" */ var_amount, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _1))\n                if iszero(/** @src 1:1532:2887  \"assembly {...\" */ and(or(and(eq(mload(/** @src 2:3624:3633  \"allowance\" */ _2), /** @src 1:1532:2887  \"assembly {...\" */ 1), gt(returndatasize(), 31)), iszero(returndatasize())), call(gas(), _5, /** @src 2:3624:3633  \"allowance\" */ _2, /** @src 1:1532:2887  \"assembly {...\" */ usr$freeMemoryPointer, 100, /** @src 2:3624:3633  \"allowance\" */ _2, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0x20)))\n                {\n                    let memPtr := mload(_3)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 4), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0x20)\n                    mstore(add(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 36), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 20)\n                    mstore(add(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 68), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ \"TRANSFER_FROM_FAILED\")\n                    revert(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 100)\n                }\n            }\n            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n            function calldata_array_index_access_struct_TokenSpenderPair_calldata_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(base_ref, shl(6, index))\n            }\n            function read_from_calldatat_address(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                returnValue := value\n            }\n            /// @ast-id 1020 @src 2:5695:6225  \"function _updateApproval(PermitDetails memory details, address owner, address spender) private {...\"\n            function fun_updateApproval(var_details_mpos, var_owner, var_spender)\n            {\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                let _1 := 0xffffffffffff\n                let cleaned := and(mload(/** @src 2:5815:5828  \"details.nonce\" */ add(var_details_mpos, 96)), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _1)\n                let _2 := sub(shl(160, 1), 1)\n                let cleaned_1 := and(mload(/** @src 2:5854:5867  \"details.token\" */ var_details_mpos), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _2)\n                let cleaned_2 := and(mload(/** @src 2:5894:5908  \"details.amount\" */ add(var_details_mpos, 32)), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _2)\n                /// @src 2:5938:5956  \"details.expiration\"\n                let _3 := 64\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                let cleaned_3 := and(mload(/** @src 2:5938:5956  \"details.expiration\" */ add(var_details_mpos, _3)), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _1)\n                let _4 := and(var_owner, _2)\n                /// @src -1:-1:-1\n                let _5 := 0\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _4)\n                mstore(/** @src 2:5894:5908  \"details.amount\" */ 32, /** @src -1:-1:-1 */ _5)\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                let _6 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 2:5938:5956  \"details.expiration\" */ _3)\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ cleaned_1)\n                mstore(/** @src 2:5894:5908  \"details.amount\" */ 32, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _6)\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _5, /** @src 2:5938:5956  \"details.expiration\" */ _3)\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                let _7 := and(var_spender, _2)\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _7)\n                mstore(/** @src 2:5894:5908  \"details.amount\" */ 32, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ dataSlot)\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 2:5938:5956  \"details.expiration\" */ _3)\n                /// @src 2:6043:6092  \"if (allowed.nonce != nonce) revert InvalidNonce()\"\n                if /** @src 2:6047:6069  \"allowed.nonce != nonce\" */ iszero(eq(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ shr(208, sload(/** @src 2:6047:6060  \"allowed.nonce\" */ dataSlot_1)), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ cleaned))\n                /// @src 2:6043:6092  \"if (allowed.nonce != nonce) revert InvalidNonce()\"\n                {\n                    /// @src 2:6078:6092  \"InvalidNonce()\"\n                    let _8 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(/** @src 2:5938:5956  \"details.expiration\" */ _3)\n                    /// @src 2:6078:6092  \"InvalidNonce()\"\n                    mstore(_8, /** @src 2:5064:5078  \"InvalidNonce()\" */ shl(225, 0x3ab3447f))\n                    /// @src 2:6078:6092  \"InvalidNonce()\"\n                    revert(_8, 4)\n                }\n                /// @src 11:843:922  \"expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration\"\n                let expr := /** @src -1:-1:-1 */ _5\n                /// @src 11:843:922  \"expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration\"\n                switch /** @src 11:843:883  \"expiration == BLOCK_TIMESTAMP_EXPIRATION\" */ iszero(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ cleaned_3)\n                case /** @src 11:843:922  \"expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration\" */ 0 { expr := cleaned_3 }\n                default {\n                    expr := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(/** @src 11:893:908  \"block.timestamp\" */ timestamp(), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _1)\n                }\n                /// @src 11:1001:1060  \"assembly {...\"\n                sstore(dataSlot_1, /** @src 11:1834:1895  \"(uint256(nonce) << 208) | uint256(expiration) << 160 | amount\" */ or(/** @src 11:1834:1886  \"(uint256(nonce) << 208) | uint256(expiration) << 160\" */ or(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(shl(208, add(/** @src 11:787:796  \"nonce + 1\" */ cleaned, /** @src 11:795:796  \"1\" */ 0x01)), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ shl(208, 0xffffffffffff)), and(shl(/** @src 11:1883:1886  \"160\" */ 0xa0, /** @src 11:1860:1879  \"uint256(expiration)\" */ expr), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ shl(160, 0xffffffffffff))), cleaned_2))\n                /// @src 2:6162:6218  \"Permit(owner, token, spender, amount, expiration, nonce)\"\n                let _9 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(/** @src 2:5938:5956  \"details.expiration\" */ _3)\n                /// @src 2:6162:6218  \"Permit(owner, token, spender, amount, expiration, nonce)\"\n                log4(_9, sub(abi_encode_uint160_uint48_uint48(_9, cleaned_2, cleaned_3, cleaned), _9), 0xc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec, _4, cleaned_1, _7)\n            }\n            /// @ast-id 1072 @src 3:1123:1339  \"function DOMAIN_SEPARATOR() public view returns (bytes32) {...\"\n            function fun_DOMAIN_SEPARATOR() -> var\n            {\n                /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                switch /** @src 3:1198:1231  \"block.chainid == _CACHED_CHAIN_ID\" */ eq(/** @src 3:1198:1211  \"block.chainid\" */ chainid(), /** @src 3:1215:1231  \"_CACHED_CHAIN_ID\" */ loadimmutable(\"1028\"))\n                case /** @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\" */ 0 {\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    let _1 := add(expr_mpos, 0x20)\n                    /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                    mstore(_1, /** @src 3:726:806  \"keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\")\" */ 0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866)\n                    /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                    mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ expr_mpos, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 64), /** @src 3:654:674  \"keccak256(\\\"Permit2\\\")\" */ 0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a)\n                    /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                    mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ expr_mpos, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 96), /** @src 3:1198:1211  \"block.chainid\" */ chainid())\n                    /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                    mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ expr_mpos, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 128), /** @src 3:1614:1618  \"this\" */ address())\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 128)\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    finalize_allocation_12095(expr_mpos)\n                    /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                    expr := /** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ keccak256(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _1, mload(/** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ expr_mpos))\n                }\n                default /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                {\n                    expr := /** @src 3:1246:1270  \"_CACHED_DOMAIN_SEPARATOR\" */ loadimmutable(\"1026\")\n                }\n                /// @src 3:1191:1332  \"return block.chainid == _CACHED_CHAIN_ID...\"\n                var := expr\n            }\n            /// @ast-id 1116 @src 3:1685:1852  \"function _hashTypedData(bytes32 dataHash) internal view returns (bytes32) {...\"\n            function fun_hashTypedData(var_dataHash) -> var\n            {\n                /// @src 3:1815:1833  \"DOMAIN_SEPARATOR()\"\n                let expr := fun_DOMAIN_SEPARATOR()\n                /// @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\"\n                let expr_mpos := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                /// @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\"\n                let _1 := add(expr_mpos, 0x20)\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                mstore(_1, shl(240, 6401))\n                mstore(add(/** @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\" */ expr_mpos, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 34), expr)\n                mstore(add(/** @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\" */ expr_mpos, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 66), var_dataHash)\n                /// @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\"\n                mstore(expr_mpos, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 66)\n                let newFreePtr := add(expr_mpos, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n                /// @src 3:1769:1845  \"return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash))\"\n                var := /** @src 3:1776:1845  \"keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash))\" */ keccak256(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _1, mload(/** @src 3:1776:1845  \"keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash))\" */ expr_mpos))\n            }\n            /// @ast-id 2658 @src 13:5345:5533  \"function _hashPermitDetails(IAllowanceTransfer.PermitDetails memory details) private pure returns (bytes32) {...\"\n            function fun_hashPermitDetails(var_details_2644_mpos) -> var\n            {\n                /// @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\"\n                let expr_2654_mpos := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                /// @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\"\n                let _1 := add(expr_2654_mpos, 0x20)\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                mstore(_1, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 0x65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678)\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                let _2 := sub(shl(160, 1), 1)\n                mstore(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ add(/** @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\" */ expr_2654_mpos, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 64), and(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ mload(var_details_2644_mpos), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _2))\n                mstore(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ add(/** @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\" */ expr_2654_mpos, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 96), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ mload(add(var_details_2644_mpos, /** @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\" */ 0x20)), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _2))\n                /// @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\"\n                let memberValue0 := mload(add(var_details_2644_mpos, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 64))\n                let _3 := 0xffffffffffff\n                mstore(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ add(/** @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\" */ expr_2654_mpos, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 128), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(memberValue0, _3))\n                mstore(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ add(/** @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\" */ expr_2654_mpos, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 160), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ mload(add(var_details_2644_mpos, 96)), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _3))\n                /// @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\"\n                mstore(expr_2654_mpos, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 160)\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                let newFreePtr := add(expr_2654_mpos, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 192)\n                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_2654_mpos))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n                /// @src 13:5463:5526  \"return keccak256(abi.encode(_PERMIT_DETAILS_TYPEHASH, details))\"\n                var := /** @src 13:5470:5526  \"keccak256(abi.encode(_PERMIT_DETAILS_TYPEHASH, details))\" */ keccak256(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _1, mload(/** @src 13:5470:5526  \"keccak256(abi.encode(_PERMIT_DETAILS_TYPEHASH, details))\" */ expr_2654_mpos))\n            }\n            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n            function abi_decode_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                value0 := calldataload(headStart)\n                value1 := calldataload(add(headStart, 32))\n            }\n            /// @ast-id 2875 @src 15:700:1809  \"function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {...\"\n            function fun_verify(var_signature_offset, var_signature_length, var_hash, var_claimedSigner)\n            {\n                /// @src 15:803:812  \"bytes32 r\"\n                let var_r := /** @src -1:-1:-1 */ 0\n                /// @src 15:822:831  \"bytes32 s\"\n                let var_s := /** @src -1:-1:-1 */ var_r\n                /// @src 15:841:848  \"uint8 v\"\n                let var_v := /** @src -1:-1:-1 */ var_r\n                /// @src 15:859:1803  \"if (claimedSigner.code.length == 0) {...\"\n                switch /** @src 15:863:893  \"claimedSigner.code.length == 0\" */ iszero(/** @src 15:863:888  \"claimedSigner.code.length\" */ extcodesize(var_claimedSigner))\n                case /** @src 15:859:1803  \"if (claimedSigner.code.length == 0) {...\" */ 0 {\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    let _1 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                    let _2 := shl(225, 0x0b135d3f)\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    mstore(_1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _2)\n                    mstore(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ add(_1, 4), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ var_hash)\n                    mstore(add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 36), 64)\n                    mstore(add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 68), var_signature_length)\n                    calldatacopy(add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 100), var_signature_offset, var_signature_length)\n                    mstore(add(add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ var_signature_length), 100), /** @src -1:-1:-1 */ var_r)\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    let _3 := staticcall(gas(), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(/** @src 15:1634:1657  \"IERC1271(claimedSigner)\" */ var_claimedSigner, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ sub(shl(160, 1), 1)), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, add(sub(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(add(var_signature_length, 31), not(31))), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 100), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, 32)\n                    if iszero(_3)\n                    {\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        let pos := mload(64)\n                        returndatacopy(pos, /** @src -1:-1:-1 */ var_r, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    let expr := /** @src -1:-1:-1 */ var_r\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    if _3\n                    {\n                        let _4 := 32\n                        if gt(_4, returndatasize()) { _4 := returndatasize() }\n                        finalize_allocation(_1, _4)\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        if slt(sub(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ add(_1, _4), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _1), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ 32)\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        {\n                            revert(/** @src -1:-1:-1 */ var_r, var_r)\n                        }\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        let value := mload(_1)\n                        if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                        {\n                            revert(/** @src -1:-1:-1 */ var_r, var_r)\n                        }\n                        /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                        expr := value\n                    }\n                    /// @src 15:1705:1792  \"if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature()\"\n                    if /** @src 15:1709:1757  \"magicValue != IERC1271.isValidSignature.selector\" */ iszero(eq(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(/** @src 15:1709:1757  \"magicValue != IERC1271.isValidSignature.selector\" */ expr, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ shl(224, 0xffffffff)), _2))\n                    /// @src 15:1705:1792  \"if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature()\"\n                    {\n                        /// @src 15:1766:1792  \"InvalidContractSignature()\"\n                        let _5 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                        /// @src 15:1766:1792  \"InvalidContractSignature()\"\n                        mstore(_5, shl(226, 0x2c19a72f))\n                        revert(_5, /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ 4)\n                    }\n                }\n                default /// @src 15:859:1803  \"if (claimedSigner.code.length == 0) {...\"\n                {\n                    /// @src 15:909:1399  \"if (signature.length == 65) {...\"\n                    switch /** @src 15:913:935  \"signature.length == 65\" */ eq(var_signature_length, /** @src 15:933:935  \"65\" */ 0x41)\n                    case /** @src 15:909:1399  \"if (signature.length == 65) {...\" */ 0 {\n                        /// @src 15:1068:1399  \"if (signature.length == 64) {...\"\n                        switch /** @src 15:1072:1094  \"signature.length == 64\" */ eq(var_signature_length, /** @src 15:1092:1094  \"64\" */ 0x40)\n                        case /** @src 15:1068:1399  \"if (signature.length == 64) {...\" */ 0 {\n                            /// @src 15:1360:1384  \"InvalidSignatureLength()\"\n                            let _6 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(/** @src 15:1092:1094  \"64\" */ 0x40)\n                            /// @src 15:1360:1384  \"InvalidSignatureLength()\"\n                            mstore(_6, shl(224, 0x4be6321b))\n                            revert(_6, 4)\n                        }\n                        default /// @src 15:1068:1399  \"if (signature.length == 64) {...\"\n                        {\n                            /// @src 15:1180:1221  \"abi.decode(signature, (bytes32, bytes32))\"\n                            let expr_component, expr_2796_component := abi_decode_bytes32t_bytes32(var_signature_offset, add(var_signature_offset, var_signature_length))\n                            /// @src 15:1170:1221  \"(r, vs) = abi.decode(signature, (bytes32, bytes32))\"\n                            var_r := expr_component\n                            /// @src 15:1239:1262  \"s = vs & UPPER_BIT_MASK\"\n                            var_s := /** @src 15:1243:1262  \"vs & UPPER_BIT_MASK\" */ and(expr_2796_component, /** @src 15:626:692  \"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\" */ sub(shl(255, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 1), 1))\n                            /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                            let sum := add(shr(/** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0xff, /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ expr_2796_component), /** @src 15:1312:1314  \"27\" */ 0x1b)\n                            /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                            if gt(sum, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0xff)\n                            /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                            {\n                                /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0x24)\n                            }\n                            /// @src 15:1280:1314  \"v = uint8(uint256(vs >> 255)) + 27\"\n                            var_v := sum\n                        }\n                    }\n                    default /// @src 15:909:1399  \"if (signature.length == 65) {...\"\n                    {\n                        /// @src 15:964:1005  \"abi.decode(signature, (bytes32, bytes32))\"\n                        let expr_component_1, expr_component_2 := abi_decode_bytes32t_bytes32(var_signature_offset, add(var_signature_offset, var_signature_length))\n                        /// @src 15:955:1005  \"(r, s) = abi.decode(signature, (bytes32, bytes32))\"\n                        var_s := expr_component_2\n                        var_r := expr_component_1\n                        /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                        if iszero(lt(/** @src 15:1043:1045  \"64\" */ 0x40, /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ var_signature_length))\n                        {\n                            /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0x24)\n                        }\n                        /// @src 15:1023:1047  \"v = uint8(signature[64])\"\n                        var_v := /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ shr(248, /** @src 15:1033:1046  \"signature[64]\" */ calldataload(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ add(var_signature_offset, /** @src 15:1043:1045  \"64\" */ 0x40)))\n                    }\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    let _7 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                    mstore(_7, var_hash)\n                    /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                    mstore(add(_7, 32), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ var_v, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 0xff))\n                    mstore(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ add(_7, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ 64), var_r)\n                    mstore(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ add(_7, 96), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ var_s)\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    mstore(/** @src -1:-1:-1 */ 0, 0)\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    if iszero(staticcall(gas(), 1, _7, /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ 128, /** @src -1:-1:-1 */ 0, /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ 32))\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    {\n                        /// @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\"\n                        let pos_1 := mload(64)\n                        returndatacopy(pos_1, /** @src -1:-1:-1 */ 0, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ returndatasize())\n                        revert(pos_1, returndatasize())\n                    }\n                    let _8 := sub(shl(160, 1), 1)\n                    /// @src 15:1471:1491  \"signer == address(0)\"\n                    let _9 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(/** @src 15:1429:1453  \"ecrecover(hash, v, r, s)\" */ mload(/** @src -1:-1:-1 */ 0), /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _8)\n                    /// @src 15:1467:1518  \"if (signer == address(0)) revert InvalidSignature()\"\n                    if /** @src 15:1471:1491  \"signer == address(0)\" */ iszero(_9)\n                    /// @src 15:1467:1518  \"if (signer == address(0)) revert InvalidSignature()\"\n                    {\n                        /// @src 15:1500:1518  \"InvalidSignature()\"\n                        let _10 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                        /// @src 15:1500:1518  \"InvalidSignature()\"\n                        mstore(_10, shl(224, 0x8baa579f))\n                        revert(_10, 4)\n                    }\n                    /// @src 15:1532:1583  \"if (signer != claimedSigner) revert InvalidSigner()\"\n                    if /** @src 15:1536:1559  \"signer != claimedSigner\" */ iszero(eq(_9, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ and(/** @src 15:1536:1559  \"signer != claimedSigner\" */ var_claimedSigner, /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ _8)))\n                    /// @src 15:1532:1583  \"if (signer != claimedSigner) revert InvalidSigner()\"\n                    {\n                        /// @src 15:1568:1583  \"InvalidSigner()\"\n                        let _11 := /** @src 2:561:6227  \"contract AllowanceTransfer is IAllowanceTransfer, EIP712 {...\" */ mload(64)\n                        /// @src 15:1568:1583  \"InvalidSigner()\"\n                        mstore(_11, shl(226, 0x20578759))\n                        revert(_11, 4)\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000811000a\"\n    }\n}\n","hash":"0100039f3a13e6ca9d8e41aca9a982311bc559b53fd0aa30e62a6208445aefb8","factoryDependencies":{}}},"src/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Maintains cross-chain replay protection in the event of a forkReference: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Uses cached version if chainid and address are unchanged from construction.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator for the current chain.\"}},\"notice\":\"EIP712 helpers for permit2\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/EIP712.sol\":{\"keccak256\":\"0x973d4358c262467a4c2a0c2867c676a8a138102968d8b89355c42f655d1a7a68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7219a31ace8c0a959392cc2ee06817c7c98dfc491e96d27f71a09fb23860b62c\",\"dweb:/ipfs/QmUGRLgddHZ3GoouEBoMYbRS4wVGapJrsD2nBxVwxLBibb\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"EIP712.sol:EIP712\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r5\n\tst.1\t64, r5\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tand\t@CPI0_5[0], r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_7[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_7[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32773, r0, r2\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI0_1[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_12\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_11\n\tjump\t@.BB0_2\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.2\t0, r1\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t4, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t160, r1\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\t224, r1\n\tadd\t@CPI0_3[0], r0, r1\n\tst.1\t256, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[2], r0, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t288, r1\n\tcontext.this\tr1\n\tst.1\t320, r1\n\tadd\t128, r0, r1\n\tst.1\t192, r1\n\tadd\t352, r0, r1\n\tst.1\t64, r1\n\tld.1\t192, r2\n\tadd\t224, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tld.1\t160, r2\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tst.2\t256, r1\n\tadd\t2, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\t160, r1\n\tadd\t@CPI0_3[0], r0, r1\n\tst.1\t192, r1\n\tadd\t@CPI0_1[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t224, r1\n\tcontext.this\tr1\n\tst.1\t256, r1\n\tst.1\t128, r3\n\tadd\t288, r0, r1\n\tst.1\t64, r1\n\tld.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n.BB0_11:\n\tld\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__system_request:\n.func_begin2:\n\tadd\tr1, r0, r3\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI2_0[0], r4, r5\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r2, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI2_1[0], r1, r1\n\tadd\tr3, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_2:\n\t.cell -52161594716389521330893928962118603104092639720612062241465413496839451137946\nCPI0_3:\n\t.cell -45779730367734237300416505028998464482483735542981242881131590982248139992214\nCPI0_4:\n\t.cell 53919893334301279589334030174039261362486096052542264263037304176640\nCPI0_5:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_6:\n\t.cell 24546620489973610155841927127420402288116261745730758458098507669580139200512\nCPI0_7:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_8:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_9:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_10:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_11:\n\t.cell 904625697166532776746648320380374280103671755200316909509741426855349583872\nCPI0_12:\n\t.cell 2535301200456458802993406410752\nCPI1_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI2_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\n","bytecode":{"object":"0002000000000002000300000000000200010000000103550000006001100270000000390010019d0000000101200190000000560000c13d0000008005000039000000400050043f0000000001000031000000040110008c000000b10000413d0000000101000367000000000101043b0000003e011001970000003f0110009c000000b10000c13d0000000001000416000000000110004c000000b10000c13d000000040100008a00000000011000310000004002000041000000000310004c000000000300001900000000030240190000004001100197000000000410004c000000000200a019000000400110009c00000000010300190000000001026019000000000110004c000000b10000c13d000000410100004100000000001004390000000001000412000200000001001d00000004001004430000002001000039000000240010044300000039010000410000000002000414000000390320009c0000000001024019000000c00110021000000042011001c70000800502000039000300000005001d00df00da0000040f0000000102200190000000b10000613d000000000101043b000100000001001d0000003a01000041000000000010043900000039010000410000000002000414000000390320009c0000000001024019000000c00110021000000043011001c70000800b0200003900df00da0000040f0000000102200190000000b10000613d000000000101043b0000000102000029000000000121004b000000810000c13d0000004101000041000000000010043900000002010000290000000400100443000000240000044300000039010000410000000002000414000000390320009c0000000001024019000000c00110021000000042011001c7000080050200003900df00da0000040f0000000102200190000000a80000c13d000000b10000013d0000000001000416000000000110004c000000b10000c13d0000003a01000041000300000001001d00000000001004390000800b01000039000200000001001d0000000402000039000100000002001d00df00c90000040f000000a00010043f0000003b01000041000000e00010043f0000003c01000041000001000010043f000000030100002900000000001004390000000201000029000000010200002900df00c90000040f000001200010043f0000000001000410000001400010043f0000008001000039000000c00010043f0000016001000039000000400010043f000000c00200043d000000e00100003900df00b30000040f000000800010043f000001400000044300000160001004430000002001000039000000a00200043d0000018000100443000001a0002004430000010000100443000000020100003900000120001004430000003d01000041000000e00001042e0000003b01000041000000a00010043f0000003c01000041000000c00010043f0000003a01000041000000000010043900000039010000410000000002000414000000390320009c0000000001024019000000c00110021000000043011001c70000800b0200003900df00da0000040f00000003030000290000000102200190000000b10000613d000000000101043b000000e00010043f0000000001000410000001000010043f000000800030043f0000012001000039000000400010043f000000800100043d00000039020000410000000003000414000000390430009c0000000003028019000000390410009c00000000010280190000006001100210000000c002300210000000000121019f00000044011001c7000080100200003900df00da0000040f0000000102200190000000b10000613d000000000101043b000000400200043d00000000001204350000003901000041000000390320009c0000000001024019000000400110021000000045011001c7000000e00001042e0000000001000019000000e1000104300000003903000041000000390410009c00000000010380190000004001100210000000390420009c00000000020380190000006002200210000000000112019f0000000002000414000000390420009c0000000002038019000000c002200210000000000112019f00000046011001c7000080100200003900df00da0000040f0000000102200190000000c70000613d000000000101043b000000000001042d0000000001000019000000e100010430000000000301001900000039010000410000000004000414000000390540009c0000000001044019000000c001100210000000600220021000000000011200190000004701100041000000000203001900df00da0000040f0000000102200190000000d80000613d000000000101043b000000000001042d0000000001000019000000e100010430000000dd002104230000000102000039000000000001042d0000000002000019000000000001042d000000df00000432000000e00001042e000000e1000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff9a8a0592ac89c5ad3bc6df8224c17b485976f597df104ee20d0df415241f670b8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8669ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a00000002000000000000000000000000000000c0000001000000000000000000ffffffff000000000000000000000000000000000000000000000000000000003644e515000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000310ab089e4439a4c15d089f94afb7896ff553aecb10793d0ab882de59d99a32e020000020000000000000000000000000000004400000000000000000000000002000002000000000000000000000000000000040000000000000000000000000200000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000020000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515"}},"irOptimized":"/// @use-src 3:\"src/EIP712.sol\"\nobject \"EIP712_1117\" {\n    code {\n        {\n            /// @src 3:295:1854  \"contract EIP712 {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            /// @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\"\n            mstore(160, /** @src 3:856:869  \"block.chainid\" */ chainid())\n            /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n            let _2 := add(_1, 0x20)\n            /// @src 3:295:1854  \"contract EIP712 {...\"\n            mstore(_2, /** @src 3:726:806  \"keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\")\" */ 0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866)\n            /// @src 3:295:1854  \"contract EIP712 {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 3:295:1854  \"contract EIP712 {...\" */ 64), /** @src 3:654:674  \"keccak256(\\\"Permit2\\\")\" */ 0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a)\n            /// @src 3:295:1854  \"contract EIP712 {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 3:295:1854  \"contract EIP712 {...\" */ 96), /** @src 3:856:869  \"block.chainid\" */ chainid())\n            /// @src 3:295:1854  \"contract EIP712 {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 3:295:1854  \"contract EIP712 {...\" */ 128), /** @src 3:1614:1618  \"this\" */ address())\n            /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n            mstore(_1, /** @src 3:295:1854  \"contract EIP712 {...\" */ 128)\n            let newFreePtr := add(_1, /** @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\" */ 160)\n            /// @src 3:295:1854  \"contract EIP712 {...\"\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:295:1854  \"contract EIP712 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 3:295:1854  \"contract EIP712 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            /// @src 3:879:953  \"_CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME)\"\n            mstore(/** @src 3:295:1854  \"contract EIP712 {...\" */ 128, /** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ keccak256(/** @src 3:295:1854  \"contract EIP712 {...\" */ _2, mload(/** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ _1)))\n            /// @src 3:295:1854  \"contract EIP712 {...\"\n            let _3 := datasize(\"EIP712_1117_deployed\")\n            codecopy(newFreePtr, dataoffset(\"EIP712_1117_deployed\"), _3)\n            setimmutable(newFreePtr, \"1026\", mload(128))\n            setimmutable(newFreePtr, \"1028\", mload(/** @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\" */ 160))\n            /// @src 3:295:1854  \"contract EIP712 {...\"\n            return(newFreePtr, _3)\n        }\n    }\n    /// @use-src 3:\"src/EIP712.sol\"\n    object \"EIP712_1117_deployed\" {\n        code {\n            {\n                /// @src 3:295:1854  \"contract EIP712 {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    if eq(0x3644e515, shr(224, calldataload(_2)))\n                    {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                        let expr := /** @src 3:295:1854  \"contract EIP712 {...\" */ _2\n                        /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                        switch /** @src 3:1198:1231  \"block.chainid == _CACHED_CHAIN_ID\" */ eq(/** @src 3:1198:1211  \"block.chainid\" */ chainid(), /** @src 3:1215:1231  \"_CACHED_CHAIN_ID\" */ loadimmutable(\"1028\"))\n                        case /** @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\" */ 0 {\n                            /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                            let _3 := add(_1, 0x20)\n                            /// @src 3:295:1854  \"contract EIP712 {...\"\n                            mstore(_3, /** @src 3:726:806  \"keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\")\" */ 0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866)\n                            /// @src 3:295:1854  \"contract EIP712 {...\"\n                            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 3:295:1854  \"contract EIP712 {...\" */ 64), /** @src 3:654:674  \"keccak256(\\\"Permit2\\\")\" */ 0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a)\n                            /// @src 3:295:1854  \"contract EIP712 {...\"\n                            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 3:295:1854  \"contract EIP712 {...\" */ 96), /** @src 3:1198:1211  \"block.chainid\" */ chainid())\n                            /// @src 3:295:1854  \"contract EIP712 {...\"\n                            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 3:295:1854  \"contract EIP712 {...\" */ 128), /** @src 3:1614:1618  \"this\" */ address())\n                            /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                            mstore(_1, /** @src 3:295:1854  \"contract EIP712 {...\" */ 128)\n                            let newFreePtr := add(_1, 160)\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                            {\n                                mstore(_2, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(_2, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                            /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                            expr := /** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ keccak256(/** @src 3:295:1854  \"contract EIP712 {...\" */ _3, mload(/** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ _1))\n                        }\n                        default /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                        {\n                            expr := /** @src 3:1246:1270  \"_CACHED_DOMAIN_SEPARATOR\" */ loadimmutable(\"1026\")\n                        }\n                        /// @src 3:295:1854  \"contract EIP712 {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, expr)\n                        return(memPos, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000811000a\"\n    }\n}\n","hash":"01000049e0d5f1bb1a4fc2fe2b448586335e798ae42c8fab1e79b57bf1d469eb","factoryDependencies":{}}},"src/Permit2.sol":{"Permit2":{"abi":[{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"AllowanceExpired","type":"error"},{"inputs":[],"name":"ExcessiveInvalidation","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxAmount","type":"uint256"}],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidContractSignature","type":"error"},{"inputs":[],"name":"InvalidNonce","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"InvalidSignatureLength","type":"error"},{"inputs":[],"name":"InvalidSigner","type":"error"},{"inputs":[],"name":"LengthMismatch","type":"error"},{"inputs":[{"internalType":"uint256","name":"signatureDeadline","type":"uint256"}],"name":"SignatureExpired","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint160","name":"amount","type":"uint160"},{"indexed":false,"internalType":"uint48","name":"expiration","type":"uint48"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"spender","type":"address"}],"name":"Lockdown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint48","name":"newNonce","type":"uint48"},{"indexed":false,"internalType":"uint48","name":"oldNonce","type":"uint48"}],"name":"NonceInvalidation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint160","name":"amount","type":"uint160"},{"indexed":false,"internalType":"uint48","name":"expiration","type":"uint48"},{"indexed":false,"internalType":"uint48","name":"nonce","type":"uint48"}],"name":"Permit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"word","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"mask","type":"uint256"}],"name":"UnorderedNonceInvalidation","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint48","name":"newNonce","type":"uint48"}],"name":"invalidateNonces","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wordPos","type":"uint256"},{"internalType":"uint256","name":"mask","type":"uint256"}],"name":"invalidateUnorderedNonces","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"internalType":"struct IAllowanceTransfer.TokenSpenderPair[]","name":"approvals","type":"tuple[]"}],"name":"lockdown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"nonceBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IAllowanceTransfer.PermitDetails[]","name":"details","type":"tuple[]"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IAllowanceTransfer.PermitBatch","name":"permitBatch","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IAllowanceTransfer.PermitDetails","name":"details","type":"tuple"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IAllowanceTransfer.PermitSingle","name":"permitSingle","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions","name":"permitted","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails","name":"transferDetails","type":"tuple"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions[]","name":"permitted","type":"tuple[]"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","name":"transferDetails","type":"tuple[]"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions","name":"permitted","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails","name":"transferDetails","type":"tuple"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"witness","type":"bytes32"},{"internalType":"string","name":"witnessTypeString","type":"string"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitWitnessTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions[]","name":"permitted","type":"tuple[]"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","name":"transferDetails","type":"tuple[]"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"witness","type":"bytes32"},{"internalType":"string","name":"witnessTypeString","type":"string"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitWitnessTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"internalType":"struct IAllowanceTransfer.AllowanceTransferDetails[]","name":"transferDetails","type":"tuple[]"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"signatureDeadline\",\"type\":\"uint256\"}],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"word\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"UnorderedNonceInvalidation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wordPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"invalidateUnorderedNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonceBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Users must approve Permit2 before calling any of the transfer functions.\",\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}],\"InvalidAmount(uint256)\":[{\"params\":{\"maxAmount\":\"The maximum amount a spender can request to transfer\"}}],\"LengthMismatch()\":[{\"details\":\"If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\"}],\"SignatureExpired(uint256)\":[{\"params\":{\"signatureDeadline\":\"The timestamp at which a signature is no longer valid\"}}]},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Uses cached version if chainid and address are unchanged from construction.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"invalidateUnorderedNonces(uint256,uint256)\":{\"details\":\"The wordPos is maxed at type(uint248).max\",\"params\":{\"mask\":\"A bitmap masked against msg.sender's current bitmap at the word position\",\"wordPos\":\"A number to index the nonceBitmap at\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"details\":\"Reverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\"}},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\"}},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}],\"InvalidAmount(uint256)\":[{\"notice\":\"Thrown when the requested amount for a transfer is larger than the permissioned amount\"}],\"InvalidContractSignature()\":[{\"notice\":\"Thrown when the recovered contract signature is incorrect\"}],\"InvalidNonce()\":[{\"notice\":\"Thrown when validating that the inputted nonce has not been used\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when the recovered signer is equal to the zero address\"}],\"InvalidSignatureLength()\":[{\"notice\":\"Thrown when the passed in signature is not a valid length\"}],\"InvalidSigner()\":[{\"notice\":\"Thrown when the recovered signer does not equal the claimedSigner\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\"}],\"SignatureExpired(uint256)\":[{\"notice\":\"Thrown when validating an inputted signature that is stale\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"},\"UnorderedNonceInvalidation(address,uint256,uint256)\":{\"notice\":\"Emits an event when the owner successfully invalidates an unordered nonce.\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator for the current chain.\"},\"allowance(address,address,address)\":{\"notice\":\"Maps users to tokens to spender addresses and information about the approval on the token\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"invalidateUnorderedNonces(uint256,uint256)\":{\"notice\":\"Invalidates the bits specified in mask for the bitmap at the word position\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"nonceBitmap(address,uint256)\":{\"notice\":\"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"notice\":\"Transfers a token using a signed permit message\"},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit message\"},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"notice\":\"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"notice\":\"Permit2 handles signature-based transfers in SignatureTransfer and allowance-based transfers in AllowanceTransfer.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Permit2.sol\":\"Permit2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"src/AllowanceTransfer.sol\":{\"keccak256\":\"0x5c07b6e3b4f555ea53c3a8a7146f84e8b4a0b497fd9eac7654bc6a939630895f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4172f2831478e2c9a9b1b3dc6e34ba5214531a927818ee8f61a0ba54eb54f87\",\"dweb:/ipfs/QmevdtuwCo2hm4wfoKa23HoR9wjjVUMxkxo2xtcuzfbMrW\"]},\"src/EIP712.sol\":{\"keccak256\":\"0x973d4358c262467a4c2a0c2867c676a8a138102968d8b89355c42f655d1a7a68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7219a31ace8c0a959392cc2ee06817c7c98dfc491e96d27f71a09fb23860b62c\",\"dweb:/ipfs/QmUGRLgddHZ3GoouEBoMYbRS4wVGapJrsD2nBxVwxLBibb\"]},\"src/Permit2.sol\":{\"keccak256\":\"0x934c0eb24a52eb5900f01f5c328374b670366adf995ba9ed49bcd3d7b87b159e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdfd05b3007726dc6dd2822c1dd9dc1b2471fbec507f30efa71a1a214c98bab6\",\"dweb:/ipfs/QmPq4hptCSUACQdynSa86bdEexE7RryzosrhUAZ9Xkqc5a\"]},\"src/PermitErrors.sol\":{\"keccak256\":\"0x9fd1192bbc3ffa9354f2bfc534d7a1cdf2be2c940c96ed4ac7bc37991e1e5dfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77f8b2e2c040c33e2c78f05e7e768a17f433c07adb699235c35c4dac92115070\",\"dweb:/ipfs/QmYX2VTyTm6QLtgp54kCrkAGY8uPxkx28urwLNEJsxTHJs\"]},\"src/SignatureTransfer.sol\":{\"keccak256\":\"0xd826676d51208b14d32ef4c49ac3ba86da1a5a56f482e3cdd44760e82fe903c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc8b1dd1ed29102ede192f50fcf990df33e8408ca6eca0299c855733382d2c55\",\"dweb:/ipfs/QmYYAx5wd19HKJcak5dDbiWLZV3gs5wapr4ezgWP9CyH9v\"]},\"src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]},\"src/interfaces/IERC1271.sol\":{\"keccak256\":\"0x96f516510d08da5b1d05d81b0bd88af6f9928bb757ba55c27e203654dfcd4fa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0942604688c369aed50905d7cef2ece68e1ff457c95a14c9f913babac29a09a\",\"dweb:/ipfs/Qmf4ZBYCKqQHfnACciz8GEMhwxPw7mhQ6fjGXwpgr8CQF8\"]},\"src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xbab1c35f0a63761be6b50a9a2ce2459b63f09587dd9c6ac46955252a1a04f43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225dca1a3d91c0737fe75c72bfecae391fc2e7b2eb2ebe1a154bfb16a7527972\",\"dweb:/ipfs/QmdGQdUCANKZ6S23TyHDtBnGvr6CtyyqNNcziVTjEHJ5rk\"]},\"src/libraries/Allowance.sol\":{\"keccak256\":\"0x65ee20fb1a77d4e25dff2feb84027ff9096b065b6fc064c80f9eee49f1f9d498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f65d62fc64a55b6e3aad9932959ab3f47d701c45f95622215aca0ba076f1a7d\",\"dweb:/ipfs/QmZjDb4Nq9pssFefg8X9bwJNJ4RJEPD8vCaFR2Ur2N4boD\"]},\"src/libraries/PermitHash.sol\":{\"keccak256\":\"0x54af80d9c3193934c6947c31f59b8f3d7918f83676fe92ed6136593ad591d478\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5264001770be2cdeb7651e4d22af7edbc4e16da6d38747efeb4f54b5472ca5c5\",\"dweb:/ipfs/QmPvwau7DXw6stGQ14hpyTeLdYDYrrrdMnUfkQTPpMXQxz\"]},\"src/libraries/SignatureVerification.sol\":{\"keccak256\":\"0x99f437ffe99aa1ff7885aec8b971f48efac00c6ebc59c02eec78c9ca850a5e30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9365414bdb67813d4ef6c89fa152dff05fc2a64992a1a4f212fa414dbdee3eab\",\"dweb:/ipfs/QmfJxSszF1rjmMoNXW5oQMo9gARMHAXYTu68fkZvdEu58i\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Permit2.sol:Permit2\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tnear_call\tr0, @__runtime, @DEFAULT_UNWIND\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.2\t0, r1\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t4, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t160, r1\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\t224, r1\n\tadd\t@CPI0_3[0], r0, r1\n\tst.1\t256, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[2], r0, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t288, r1\n\tcontext.this\tr1\n\tst.1\t320, r1\n\tadd\t128, r0, r1\n\tst.1\t192, r1\n\tadd\t352, r0, r1\n\tst.1\t64, r1\n\tld.1\t192, r2\n\tadd\t224, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tld.1\t160, r2\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tst.2\t256, r1\n\tadd\t2, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__system_request:\n.func_begin2:\n\tadd\tr1, r0, r3\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI2_0[0], r4, r5\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r2, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI2_1[0], r1, r1\n\tadd\tr3, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__runtime:\n.func_begin3:\n\tnop\tstack+=[17]\n\tadd\t128, r0, r10\n\tst.1\t64, r10\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB3_22\n\tadd\t0, r0, stack-[17]\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[12]\n\tjump.le\t@.BB3_2\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tjump.gt\t@.BB3_17\n\tsub.s!\t@CPI3_7[0], r1, r2\n\tjump.gt\t@.BB3_15\n\tsub.s!\t@CPI3_10[0], r1, r2\n\tjump.eq\t@.BB3_179\n\tsub.s!\t@CPI3_11[0], r1, r1\n\tjump.ne\t@.BB3_22\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_21[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_21[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_25[0], r1, r2\n\tjump.gt\t@.BB3_22\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_52[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_2:\n\tsub.s!\t@CPI3_12[0], r1, r2\n\tjump.le\t@.BB3_3\n\tsub.s!\t@CPI3_13[0], r1, r2\n\tjump.gt\t@.BB3_9\n\tsub.s!\t@CPI3_16[0], r1, r2\n\tjump.eq\t@.BB3_142\n\tsub.s!\t@CPI3_17[0], r1, r1\n\tjump.ne\t@.BB3_22\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_21[0], r0, r2\n\tsub.s!\t256, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_21[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tld.1\t64, r3\n\tsub.s!\t@CPI3_23[0], r3, r1\n\tjump.gt\t@.BB3_35\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI3_26[0], r3, r2\n\tjump.gt\t@.BB3_35\n\tadd\tr3, r0, stack-[16]\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_25[0], r2, r3\n\tjump.gt\t@.BB3_22\n\tst.1\tr1, r2\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tstack-[16], r0, r4\n\tadd\t128, r4, r3\n\tst.1\tr3, r2\n\tst.1.inc\tr4, r1, r2\n\tadd\t68, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\t64, r4, r2\n\tadd\t100, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n\tadd\t@CPI3_21[0], r0, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t132, r2, r3\n\tsub.s!\t64, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr1, r0, r4\n\tand\t@CPI3_21[0], r3, r3\n\tsub.s!\t0, r3, r5\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI3_21[0], r3, r3\n\tadd.ne\tr4, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t196, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI3_25[0], r3, r3\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t228, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_22[0], r1, r3\n\tjump.gt\t@.BB3_22\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_string_calldata, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[11]\n\tadd\tr2, r0, stack-[10]\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tnear_call\tr0, @fun_hashTokenPermissions, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[15], r0, r3\n\tld.1\tr3, r3\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[14]\n\tadd\t128, r5, r4\n\tst.1\tr4, r3\n\tadd\t64, r5, r3\n\tst.1\tr3, r1\n\tadd\t96, r5, r1\n\tadd\tstack-[12], r0, r3\n\tst.1\tr1, r3\n\tadd\t160, r5, r1\n\tst.1\tr1, r2\n\tadd\t160, r0, r1\n\tst.1.inc\tr5, r1, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\t@CPI3_54[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @finalize_allocation_21849, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tstack-[16], r0, r1\n\tadd\tstack-[13], r0, r2\n\tadd\tstack-[11], r0, r4\n\tadd\tstack-[10], r0, r5\n\tnear_call\tr0, @fun_permitTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_17:\n\tsub.s!\t@CPI3_2[0], r1, r2\n\tjump.gt\t@.BB3_20\n\tsub.s!\t@CPI3_5[0], r1, r2\n\tjump.eq\t@.BB3_216\n\tsub.s!\t@CPI3_6[0], r1, r1\n\tjump.ne\t@.BB3_22\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI3_21[0], r0, r3\n\tsub.s!\t32, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_21[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_21[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_22\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_22[0], r2, r4\n\tjump.gt\t@.BB3_22\n\tadd\t35, r2, r4\n\tadd\t@CPI3_21[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_21[0], r1, r7\n\tand\t@CPI3_21[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_21[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_22\n\tadd\t4, r2, r4\n\tptr.add\tr3, r4, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[10]\n\tsub.s!\t@CPI3_22[0], r3, r3\n\tjump.gt\t@.BB3_22\n\tadd\t36, r2, r3\n\tadd\tstack-[10], r0, r2\n\tshl.s\t6, r2, r2\n\tadd\tr3, r0, stack-[9]\n\tadd\tr2, r3, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tr0, r0, stack-[16]\n\tjump.ne\t@.BB3_229\n.BB3_236:\n\tadd\t@CPI3_31[0], r0, r1\n\tadd\tstack-[16], r0, r3\n\tsub.s!\t@CPI3_31[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tmul\t@CPI3_35[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_3:\n\tsub.s!\t@CPI3_18[0], r1, r2\n\tjump.eq\t@.BB3_23\n\tsub.s!\t@CPI3_19[0], r1, r2\n\tjump.eq\t@.BB3_61\n\tsub.s!\t@CPI3_20[0], r1, r1\n\tjump.ne\t@.BB3_22\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r2\n\tadd\t@CPI3_21[0], r0, r1\n\tsub.s!\t96, r2, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI3_21[0], r2, r4\n\tsub.s!\t0, r4, r5\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI3_21[0], r4, r4\n\tadd.ne\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[16]\n\tsub.s!\t@CPI3_25[0], r3, r3\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_22[0], r1, r3\n\tjump.gt\t@.BB3_22\n\tsub\tr2, r1, r2\n\tadd\t@CPI3_21[0], r0, r3\n\tsub.s!\t96, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_21[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_21[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_22\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI3_23[0], r2, r2\n\tjump.gt\t@.BB3_35\n\tadd\tstack-[13], r0, r2\n\tadd\t96, r2, r2\n\tst.1\t64, r2\n\tadd\t4, r1, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r3, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_22[0], r3, r5\n\tjump.gt\t@.BB3_22\n\tadd\tr3, r1, r3\n\tadd\t35, r3, r5\n\tadd\tstack[@calldatasize], r0, r6\n\tadd\t@CPI3_21[0], r0, r7\n\tsub!\tr5, r6, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI3_21[0], r5, r5\n\tand\t@CPI3_21[0], r6, r6\n\tsub!\tr5, r6, r9\n\tadd.ge\t0, r0, r7\n\txor\tr5, r6, r5\n\tsub.s!\t@CPI3_21[0], r5, r5\n\tadd\tr8, r0, r5\n\tadd.eq\tr7, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_22\n\tadd\t4, r3, r5\n\tptr.add\tr4, r5, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI3_22[0], r5, r4\n\tjump.gt\t@.BB3_35\n\tshl.s\t5, r5, r4\n\tadd\t63, r4, r4\n\tsub.s\t32, r0, r6\n\tadd\tr6, r0, stack-[7]\n\tand\tr4, r6, r4\n\tadd\tr4, r2, r4\n\tsub.s!\t@CPI3_22[0], r4, r6\n\tjump.gt\t@.BB3_35\n\tst.1\t64, r4\n\tst.1\tr2, r5\n\tshl.s\t7, r5, r4\n\tadd\t36, r3, r3\n\tadd\tr3, r4, r4\n\tadd\tstack[@calldatasize], r0, r6\n\tsub!\tr4, r6, r6\n\tjump.gt\t@.BB3_22\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_90\n.BB3_92:\n\tadd\tstack-[13], r0, r3\n\tst.1.inc\tr3, r2, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\t36, r1, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_25[0], r2, r3\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[6], r0, r3\n\tst.1\tr3, r2\n\tadd\t68, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tadd\t64, r1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t68, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_22[0], r1, r3\n\tjump.gt\t@.BB3_22\n\tadd\t35, r1, r4\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI3_21[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_21[0], r4, r4\n\tand\t@CPI3_21[0], r3, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_21[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_22\n\tadd\t4, r1, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI3_22[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tadd\t36, r1, r2\n\tadd\tstack-[4], r0, r1\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r2, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB3_22\n\tadd\t@CPI3_42[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_43[0], r1, r1\n\tadd\t32779, r0, r2\n\tadd\tr10, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB3_106\n\tld.1\t64, r1\n\tadd\t@CPI3_57[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_31[0], r0, r2\n\tsub.s!\t@CPI3_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_58[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_9:\n\tsub.s!\t@CPI3_14[0], r1, r2\n\tjump.eq\t@.BB3_169\n\tsub.s!\t@CPI3_15[0], r1, r1\n\tjump.ne\t@.BB3_22\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_21[0], r0, r2\n\tsub.s!\t128, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_21[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_25[0], r1, r2\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_25[0], r2, r3\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t68, r4, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_25[0], r3, r5\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t100, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI3_25[0], r4, r5\n\tjump.gt\t@.BB3_22\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_15:\n\tsub.s!\t@CPI3_8[0], r1, r2\n\tjump.eq\t@.BB3_188\n\tsub.s!\t@CPI3_9[0], r1, r1\n\tjump.ne\t@.BB3_22\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_21[0], r0, r2\n\tsub.s!\t128, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_21[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI3_25[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI3_25[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_25[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t100, r1, r1\n\tld\tr1, r2\n\tand\t@CPI3_41[0], r2, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI3_41[0], r2, r1\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_213\n\tadd\t@CPI3_42[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_43[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tand\t@CPI3_41[0], r1, r1\n\tadd\tr1, r0, stack-[11]\n.BB3_213:\n\tadd\tstack-[11], r0, r1\n\tshl.s\t160, r1, r1\n\tand\t@CPI3_44[0], r1, r1\n\tadd\tstack-[14], r0, r3\n\tor\tr1, r3, r1\n\tadd\tstack-[10], r0, r4\n\tsload\tr4, r2\n\tand\t@CPI3_45[0], r2, r2\n\tor\tr1, r2, r1\n\tsstore\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[13], r0, r4\n\tst.1\tr2, r4\n\tst.1\tr1, r3\n\tadd\t@CPI3_31[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_31[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_31[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_46[0], r0, r4\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[16], r0, r6\n\tadd\tstack-[15], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB3_33\n\tjump\t@.BB3_22\n.BB3_20:\n\tsub.s!\t@CPI3_3[0], r1, r2\n\tjump.eq\t@.BB3_238\n\tsub.s!\t@CPI3_4[0], r1, r1\n\tjump.ne\t@.BB3_22\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI3_21[0], r0, r3\n\tsub.s!\t192, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_21[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_21[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_22\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_22[0], r2, r3\n\tjump.gt\t@.BB3_22\n\tadd\t4, r2, r4\n\tsub\tr1, r4, r3\n\tadd\t@CPI3_21[0], r0, r5\n\tsub.s!\t96, r3, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI3_21[0], r3, r3\n\tsub.s!\t0, r3, r7\n\tadd.le\t0, r0, r5\n\tsub.s!\t@CPI3_21[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB3_22\n\tld.1\t64, r11\n\tsub.s!\t@CPI3_23[0], r11, r3\n\tjump.gt\t@.BB3_35\n\tadd\t96, r11, r3\n\tst.1\t64, r3\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add\tr5, r4, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI3_22[0], r6, r7\n\tjump.gt\t@.BB3_22\n\tadd\tr6, r4, r4\n\tadd\t31, r4, r6\n\tadd\t@CPI3_21[0], r0, r7\n\tsub!\tr6, r1, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI3_21[0], r6, r6\n\tand\t@CPI3_21[0], r1, r9\n\tsub!\tr6, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr6, r9, r6\n\tsub.s!\t@CPI3_21[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB3_22\n\tptr.add\tr5, r4, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI3_22[0], r6, r5\n\tjump.gt\t@.BB3_35\n\tshl.s\t5, r6, r5\n\tadd\t63, r5, r5\n\tsub.s\t32, r0, r12\n\tand\tr5, r12, r5\n\tadd\tr5, r3, r5\n\tsub.s!\t@CPI3_22[0], r5, r7\n\tjump.gt\t@.BB3_35\n\tst.1\t64, r5\n\tst.1\tr3, r6\n\tadd\t32, r4, r4\n\tshl.s\t6, r6, r5\n\tadd\tr5, r4, r5\n\tsub!\tr5, r1, r7\n\tjump.gt\t@.BB3_22\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB3_289\n.BB3_294:\n\tst.1.inc\tr11, r3, r3\n\tadd\t36, r2, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr3, r0, stack-[8]\n\tst.1\tr3, r1\n\tadd\t68, r2, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t64, r11, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t36, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_22[0], r1, r3\n\tjump.gt\t@.BB3_22\n\tadd\t35, r1, r4\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI3_21[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_21[0], r4, r4\n\tand\t@CPI3_21[0], r3, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_21[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_22\n\tadd\t4, r1, r4\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[6]\n\tsub.s!\t@CPI3_22[0], r4, r4\n\tjump.gt\t@.BB3_22\n\tadd\t36, r1, r4\n\tadd\tstack-[6], r0, r1\n\tshl.s\t6, r1, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr1, r4, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t68, r2, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI3_25[0], r1, r1\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t132, r2, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI3_22[0], r4, r1\n\tjump.gt\t@.BB3_22\n\tadd\t35, r4, r1\n\tadd\t@CPI3_21[0], r0, r5\n\tsub!\tr1, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_21[0], r3, r7\n\tand\t@CPI3_21[0], r1, r1\n\tsub!\tr1, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr1, r7, r1\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tadd\t4, r4, r1\n\tptr.add\tr2, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_22[0], r1, r5\n\tjump.gt\t@.BB3_22\n\tadd\t36, r4, r4\n\tadd\tr1, r4, r5\n\tsub!\tr5, r3, r5\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t164, r2, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI3_22[0], r5, r6\n\tjump.gt\t@.BB3_22\n\tadd\t35, r5, r6\n\tadd\t@CPI3_21[0], r0, r7\n\tsub!\tr6, r3, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI3_21[0], r3, r9\n\tand\t@CPI3_21[0], r6, r6\n\tsub!\tr6, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr6, r9, r6\n\tsub.s!\t@CPI3_21[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB3_22\n\tadd\t4, r5, r6\n\tptr.add\tr2, r6, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t@CPI3_22[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tadd\t36, r5, r5\n\tadd\tstack-[3], r0, r2\n\tadd\tr5, r0, stack-[2]\n\tadd\tr2, r5, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB3_22\n\tld.1\t64, r5\n\tsub.s!\t@CPI3_26[0], r5, r2\n\tjump.gt\t@.BB3_35\n\tadd\tr12, r0, stack-[16]\n\tadd\tr11, r0, stack-[14]\n\tadd\t160, r5, r2\n\tst.1\t64, r2\n\tadd\t128, r5, r2\n\tadd\t@CPI3_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r5, r2\n\tadd\t@CPI3_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r5, r2\n\tadd\t@CPI3_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r5, r2\n\tadd\t@CPI3_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd!\t107, r0, r6\n\tst.1\tr5, r6\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tjump.eq\t@.BB3_311\n\tadd\tr0, r0, r7\n.BB3_310:\n\tadd\tr7, r3, r8\n\tadd\t32, r7, r7\n\tadd\tr7, r5, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB3_310\n.BB3_311:\n\tadd\tr6, r3, r5\n\tand\t31, r1, r6\n\tst.1\tr5, r0\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r1, r7\n\tjump.eq\t@.BB3_337\n\tadd\tr0, r0, r8\n.BB3_313:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr4, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB3_313\n.BB3_337:\n\tsub.s!\t0, r6, r8\n\tjump.eq\t@.BB3_315\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tadd\tr5, r7, r7\n\tshl.s\t3, r6, r6\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB3_315:\n\tadd\tr1, r5, r1\n\tadd\tstack-[17], r0, r4\n\tst.1\tr1, r4\n\tsub\tr1, r2, r1\n\tsub.s\t32, r1, r4\n\tst.1\tr2, r4\n\tadd\t31, r1, r1\n\tadd\tstack-[16], r0, r4\n\tand\tr1, r4, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI3_22[0], r1, r5\n\tjump.gt\t@.BB3_35\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_35\n\tst.1\t64, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tsub.s!\t@CPI3_31[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI3_31[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_31[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_32[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r4\n\tadd\tstack-[14], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tld.1\tr3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t@CPI3_22[0], r1, r1\n\tjump.gt\t@.BB3_35\n\tadd\tstack-[13], r0, r1\n\tshl.s\t5, r1, r3\n\tadd\t63, r3, r1\n\tand\tr1, r4, r1\n\tld.1\t64, r2\n\tadd\tr2, r1, r1\n\tadd\tr2, r0, stack-[12]\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI3_22[0], r1, r4\n\tjump.gt\t@.BB3_35\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_35\n\tst.1\t64, r1\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[12], r0, r2\n\tst.1.inc\tr2, r1, r7\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB3_333\n\tadd\tr0, r0, r4\n.BB3_323:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_323\n.BB3_333:\n\tadd\tr7, r0, stack-[11]\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB3_325\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tstack-[11], r0, r4\n\tadd\tr4, r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB3_325:\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[13], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB3_332\n\tadd\t96, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[9]\n.BB3_327:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tadd\tstack-[16], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_116\n\tadd\tstack-[16], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI3_33[0], r0, r4\n\tst.1\tr2, r4\n\tld.1.inc\tr3, r3, r4\n\tand\t@CPI3_25[0], r3, r3\n\tadd\t64, r1, r5\n\tst.1\tr5, r3\n\tld.1\tr4, r3\n\tadd\t96, r1, r4\n\tst.1\tr4, r3\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI3_34[0], r1, r3\n\tjump.gt\t@.BB3_35\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI3_31[0], r0, r3\n\tsub.s!\t@CPI3_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI3_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_32[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[16], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_116\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[15], r0, r3\n\tadd\tr2, r3, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[16], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[13], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB3_327\n.BB3_332:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t32, r1, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tstack-[12], r0, r1\n\tnear_call\tr0, @abi_encode_array_bytes32_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r5\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r6\n\tadd\t100, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r7\n\tadd\tr1, r0, r3\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tcontext.caller\tr4\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r5\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[4], r0, r4\n\tadd\tstack-[2], r0, r6\n\tadd\tstack-[3], r0, r7\n\tnear_call\tr0, @fun__permitTransferFrom, @DEFAULT_UNWIND\n\tadd\t@CPI3_31[0], r0, r1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tmul\t@CPI3_35[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_179:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_21[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_21[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[15], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_31[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_31[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_31[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI3_53[0], r0, r4\n\tadd\tstack-[12], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB3_33\n\tjump\t@.BB3_22\n.BB3_142:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_21[0], r0, r2\n\tsub.s!\t256, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_21[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI3_25[0], r1, r1\n\tjump.gt\t@.BB3_22\n\tld.1\t64, r3\n\tsub.s!\t@CPI3_23[0], r3, r1\n\tjump.gt\t@.BB3_35\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI3_55[0], r3, r2\n\tjump.gt\t@.BB3_35\n\tadd\tr3, r0, stack-[15]\n\tadd\t224, r3, r2\n\tst.1\t64, r2\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_25[0], r2, r3\n\tjump.gt\t@.BB3_22\n\tst.1\tr1, r2\n\tadd\t68, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_25[0], r2, r3\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[15], r0, r3\n\tadd\t128, r3, r3\n\tst.1\tr3, r2\n\tadd\t100, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_41[0], r2, r3\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[15], r0, r3\n\tadd\t160, r3, r3\n\tst.1\tr3, r2\n\tadd\t132, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_41[0], r2, r3\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[15], r0, r3\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t192, r3, r1\n\tst.1\tr1, r2\n\tadd\t164, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_25[0], r1, r2\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\t196, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tadd\t64, r1, r1\n\tadd\tr2, r0, stack-[13]\n\tadd\tr1, r0, stack-[12]\n\tst.1\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t228, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_22[0], r1, r3\n\tjump.gt\t@.BB3_22\n\tadd\t35, r1, r4\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI3_21[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_21[0], r4, r4\n\tand\t@CPI3_21[0], r3, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_21[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_22\n\tadd\t4, r1, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI3_22[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tadd\t36, r1, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r0, stack-[10]\n\tadd\tr1, r2, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB3_22\n\tadd\t@CPI3_42[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_43[0], r1, r1\n\tadd\t32779, r0, r2\n\tadd\tr10, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB3_159\n\tld.1\t64, r1\n\tadd\t@CPI3_57[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_31[0], r0, r2\n\tsub.s!\t@CPI3_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_58[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_216:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_21[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_21[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_25[0], r1, r3\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[16]\n\tsub.s!\t@CPI3_25[0], r3, r3\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t68, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI3_25[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tand\t@CPI3_25[0], r3, r2\n\tshr.s\t208, r3, r4\n\tshr.s\t160, r3, r3\n\tand\t@CPI3_41[0], r3, r3\n\tnear_call\tr0, @abi_encode_uint160_uint48_uint48, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI3_31[0], r0, r2\n\tsub.s!\t@CPI3_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_31[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_61:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_21[0], r0, r2\n\tsub.s!\t320, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_21[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tld.1\t64, r3\n\tsub.s!\t@CPI3_23[0], r3, r1\n\tjump.gt\t@.BB3_35\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI3_26[0], r3, r2\n\tjump.gt\t@.BB3_35\n\tadd\tr3, r0, stack-[16]\n\tadd\t160, r3, r2\n\tst.1\t64, r2\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_25[0], r2, r3\n\tjump.gt\t@.BB3_22\n\tst.1\tr1, r2\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tstack-[16], r0, r4\n\tadd\t128, r4, r3\n\tst.1\tr3, r2\n\tst.1.inc\tr4, r1, r2\n\tadd\t68, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tadd\t64, r4, r2\n\tadd\t100, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n\tadd\t@CPI3_21[0], r0, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t132, r2, r3\n\tsub.s!\t64, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr1, r0, r4\n\tand\t@CPI3_21[0], r3, r3\n\tsub.s!\t0, r3, r5\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI3_21[0], r3, r3\n\tadd.ne\tr4, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t196, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[12]\n\tsub.s!\t@CPI3_25[0], r3, r3\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t260, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI3_22[0], r3, r4\n\tjump.gt\t@.BB3_22\n\tadd\t35, r3, r4\n\tadd\t@CPI3_21[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI3_21[0], r2, r7\n\tand\t@CPI3_21[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI3_21[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_22\n\tadd\t4, r3, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[11]\n\tsub.s!\t@CPI3_22[0], r4, r4\n\tjump.gt\t@.BB3_22\n\tadd\t36, r3, r4\n\tadd\tstack-[11], r0, r3\n\tadd\tr4, r0, stack-[10]\n\tadd\tr3, r4, r3\n\tsub!\tr3, r2, r3\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t292, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_22[0], r1, r3\n\tjump.gt\t@.BB3_22\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_string_calldata, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[9]\n\tadd\tr2, r0, stack-[8]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @finalize_allocation_19045, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tadd\t128, r3, r1\n\tadd\t@CPI3_67[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t96, r3, r1\n\tadd\t@CPI3_68[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t@CPI3_69[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t@CPI3_70[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t32, r2, r2\n\tadd\tr2, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r4\n\tand\t31, r4, r2\n\tadd\tstack-[10], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB3_338\n\tadd\tr0, r0, r5\n.BB3_75:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_75\n.BB3_338:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB3_77\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB3_77:\n\tadd\tstack-[11], r0, r2\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\tstack-[13], r0, r1\n\tsub\tr2, r1, r2\n\tsub.s\t32, r2, r3\n\tst.1\tr1, r3\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[13]\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tnear_call\tr0, @fun_hashTokenPermissions, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r5\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r6\n\tadd\t228, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r7\n\tadd\tr1, r0, r3\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[15]\n\tcontext.caller\tr4\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tstack-[16], r0, r1\n\tadd\tstack-[12], r0, r2\n\tadd\tstack-[9], r0, r4\n\tadd\tstack-[8], r0, r5\n\tnear_call\tr0, @fun_permitTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_169:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_21[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_21[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tnear_call\tr0, @fun_DOMAIN_SEPARATOR, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_52[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_188:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI3_21[0], r0, r2\n\tsub.s!\t96, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI3_21[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI3_25[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI3_25[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r2\n\tand\t@CPI3_41[0], r2, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI3_41[0], r2, r1\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tsload\tr1, r1\n\tshr.s\t208, r1, r2\n\tadd\tstack-[14], r0, r1\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB3_137\n\tadd\tstack-[13], r0, r1\n\tadd\tr2, r0, stack-[10]\n\tsub\tr1, r2, r1\n\tand!\t@CPI3_47[0], r1, r1\n\tjump.ne\t@.BB3_198\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tadd\tstack-[13], r0, r2\n\tshl.s\t208, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI3_50[0], r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_31[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_31[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_31[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_51[0], r0, r4\n\tadd\tstack-[12], r0, r5\n\tadd\tstack-[16], r0, r6\n\tadd\tstack-[15], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB3_33\n\tjump\t@.BB3_22\n.BB3_238:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI3_21[0], r0, r3\n\tsub.s!\t128, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_21[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI3_22[0], r3, r1\n\tjump.gt\t@.BB3_22\n\tadd\t4, r3, r1\n\tsub\tr2, r1, r4\n\tadd\t@CPI3_21[0], r0, r5\n\tsub.s!\t96, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI3_21[0], r4, r4\n\tsub.s!\t0, r4, r7\n\tadd.le\t0, r0, r5\n\tsub.s!\t@CPI3_21[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB3_22\n\tld.1\t64, r12\n\tsub.s!\t@CPI3_23[0], r12, r4\n\tjump.le\t@.BB3_243\n.BB3_35:\n\tadd\t@CPI3_62[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_58[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_23:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI3_21[0], r0, r3\n\tsub.s!\t32, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_21[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_21[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_22\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[7]\n\tsub.s!\t@CPI3_22[0], r3, r3\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[7], r0, r3\n\tadd\t35, r3, r3\n\tadd\t@CPI3_21[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\t0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI3_21[0], r1, r6\n\tand\t@CPI3_21[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.ge\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI3_21[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB3_22\n\tadd\tstack-[7], r0, r3\n\tadd\t4, r3, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI3_22[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[6], r0, r2\n\tshl.s\t7, r2, r2\n\tadd\tstack-[7], r0, r3\n\tadd\tr3, r2, r2\n\tadd\t36, r2, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_30\n.BB3_33:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_243:\n\tadd\t96, r12, r4\n\tst.1\t64, r4\n\tptr.add\tstack[@ptr_calldata], r0, r6\n\tptr.add\tr6, r1, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI3_22[0], r5, r7\n\tjump.gt\t@.BB3_22\n\tadd\tr5, r1, r5\n\tadd\t31, r5, r1\n\tadd\t@CPI3_21[0], r0, r7\n\tsub!\tr1, r2, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI3_21[0], r1, r1\n\tand\t@CPI3_21[0], r2, r9\n\tsub!\tr1, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr1, r9, r1\n\tsub.s!\t@CPI3_21[0], r1, r1\n\tadd\tr8, r0, r1\n\tadd.eq\tr7, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB3_22\n\tptr.add\tr6, r5, r1\n\tld\tr1, r7\n\tsub.s!\t@CPI3_22[0], r7, r1\n\tjump.gt\t@.BB3_35\n\tshl.s\t5, r7, r1\n\tadd\t63, r1, r6\n\tsub.s\t32, r0, r1\n\tand\tr6, r1, r6\n\tadd\tr6, r4, r6\n\tsub.s!\t@CPI3_22[0], r6, r8\n\tjump.gt\t@.BB3_35\n\tst.1\t64, r6\n\tst.1\tr4, r7\n\tadd\t32, r5, r5\n\tshl.s\t6, r7, r6\n\tadd\tr6, r5, r6\n\tsub!\tr6, r2, r8\n\tjump.gt\t@.BB3_22\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB3_249\n.BB3_254:\n\tst.1.inc\tr12, r4, r4\n\tadd\t36, r3, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr4, r0, stack-[7]\n\tst.1\tr4, r2\n\tadd\t68, r3, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t64, r12, r3\n\tadd\tr3, r0, stack-[6]\n\tst.1\tr3, r2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI3_22[0], r4, r3\n\tjump.gt\t@.BB3_22\n\tadd\t35, r4, r5\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI3_21[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_21[0], r5, r5\n\tand\t@CPI3_21[0], r3, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI3_21[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_22\n\tadd\t4, r4, r5\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[5]\n\tsub.s!\t@CPI3_22[0], r5, r5\n\tjump.gt\t@.BB3_22\n\tadd\t36, r4, r5\n\tadd\tstack-[5], r0, r4\n\tshl.s\t6, r4, r4\n\tadd\tr5, r0, stack-[4]\n\tadd\tr4, r5, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t68, r2, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[3]\n\tsub.s!\t@CPI3_25[0], r4, r4\n\tjump.gt\t@.BB3_22\n\tptr.add.s\t100, r2, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI3_22[0], r4, r5\n\tjump.gt\t@.BB3_22\n\tadd\t35, r4, r5\n\tadd\t@CPI3_21[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI3_21[0], r3, r8\n\tand\t@CPI3_21[0], r5, r5\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI3_21[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB3_22\n\tadd\t4, r4, r5\n\tptr.add\tr2, r5, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[2]\n\tsub.s!\t@CPI3_22[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tadd\t36, r4, r4\n\tadd\tstack-[2], r0, r2\n\tadd\tr4, r0, stack-[1]\n\tadd\tr2, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_263\n.BB3_22:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_229:\n\tadd\t@CPI3_31[0], r0, r1\n\tadd\tstack-[17], r0, r3\n\tsub.s!\t@CPI3_31[0], r3, r2\n\tadd\tr3, r0, stack-[16]\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_37[0], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tr0, r0, r1\n\tadd\tr0, r0, r2\n.BB3_230:\n\tadd\tr2, r0, stack-[11]\n\tshl.s\t6, r2, r2\n\tadd\tstack-[9], r0, r3\n\tadd\tr2, r3, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add\tr3, r2, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[14]\n\tsub.s!\t@CPI3_25[0], r4, r4\n\tjump.gt\t@.BB3_22\n\tadd\t32, r2, r2\n\tptr.add\tr3, r2, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI3_25[0], r2, r2\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[15], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_32[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[15], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_32[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[15], r0, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_32[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI3_38[0], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_31[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_31[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_31[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI3_40[0], r0, r4\n\tadd\tstack-[12], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_22\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[10], r0, r1\n\tsub!\tr2, r1, r1\n\tadd\tstack-[16], r0, r1\n\tjump.lt\t@.BB3_230\n\tjump\t@.BB3_236\n.BB3_30:\n\tadd\tr0, r0, stack-[14]\n.BB3_32:\n\tadd\tstack-[14], r0, r1\n\tshl.s\t7, r1, r1\n\tadd\tstack-[7], r0, r2\n\tadd\tr1, r2, r1\n\tsub\tstack[@calldatasize], r1, r2\n\tsub.s\t36, r2, r2\n\tadd\t@CPI3_21[0], r0, r3\n\tsub.s!\t128, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI3_21[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI3_21[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB3_22\n\tld.1\t64, r2\n\tsub.s!\t@CPI3_71[0], r2, r3\n\tjump.ge\t@.BB3_35\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\t36, r1, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[16]\n\tsub.s!\t@CPI3_25[0], r3, r3\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[16], r0, r3\n\tst.1.inc\tr2, r3, r3\n\tadd\t68, r1, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[13]\n\tsub.s!\t@CPI3_25[0], r4, r4\n\tjump.gt\t@.BB3_22\n\tadd\tstack-[13], r0, r4\n\tst.1\tr3, r4\n\tadd\t100, r1, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[11]\n\tsub.s!\t@CPI3_25[0], r3, r3\n\tjump.gt\t@.BB3_22\n\tadd\t64, r2, r3\n\tadd\tstack-[11], r0, r4\n\tst.1\tr3, r4\n\tadd\t132, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI3_25[0], r1, r1\n\tjump.gt\t@.BB3_22\n\tadd\t96, r2, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI3_42[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_43[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tadd\tstack-[10], r0, r5\n\tshr.s\t160, r5, r2\n\tand\t@CPI3_41[0], r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB3_45\n\tand\t@CPI3_25[0], r5, r1\n\tsub.s!\t@CPI3_25[0], r1, r2\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[11], r0, r4\n\tjump.eq\t@.BB3_48\n\tsub!\tr4, r1, r3\n\tjump.gt\t@.BB3_60\n\tsub\tr5, r4, r1\n\tand\t@CPI3_25[0], r1, r1\n\tand\t@CPI3_38[0], r5, r3\n\tor\tr1, r3, r1\n\tadd\tstack-[8], r0, r3\n\tsstore\tr3, r1\n.BB3_48:\n\tld.1\t64, r1\n\tadd\t68, r1, r3\n\tst.1\tr3, r4\n\tadd\t36, r1, r3\n\tadd\tstack-[13], r0, r4\n\tst.1\tr3, r4\n\tadd\t@CPI3_73[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r4\n\tadd\tstack-[16], r0, r3\n\tst.1\tr4, r3\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB3_52\n\tadd\tr0, r0, r2\n.BB3_50:\n\tshl.s\t5, r2, r3\n\tadd\tr1, r3, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB3_50\n\tadd\tstack[@returndatasize], r0, r3\n\tadd\tstack-[9], r0, r4\n\tjump\t@.BB3_57\n.BB3_52:\n\tadd\t@CPI3_31[0], r0, r3\n\tsub.s!\t@CPI3_31[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tsub.s!\t@CPI3_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r5, r3\n\tor\tr3, r1, r1\n\tor\t@CPI3_74[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_31[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB3_336\n\tadd\tr0, r0, r6\n.BB3_54:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB3_54\n.BB3_336:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB3_56\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr4, r1\n.BB3_56:\n\tand\t1, r2, r4\n\tadd\tr3, r0, stack[@returndatasize]\n.BB3_57:\n\tld.1\t0, r1\n\tsub.s!\t1, r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tand\tr2, r1, r1\n\tsub.s!\t0, r3, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tor\tr2, r1, r1\n\tand!\tr1, r4, r1\n\tjump.eq\t@.BB3_58\n\tadd\tstack-[14], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[14]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB3_32\n\tjump\t@.BB3_33\n.BB3_45:\n\tld.1\t64, r1\n\tadd\t@CPI3_77[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r3\n\tst.1\tr3, r2\n\tadd\t@CPI3_31[0], r0, r2\n\tsub.s!\t@CPI3_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_58[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_58:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI3_75[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_76[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_31[0], r0, r2\n\tsub.s!\t@CPI3_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_74[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_198:\n\tld.1\t64, r1\n\tadd\t@CPI3_48[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_31[0], r0, r2\n\tsub.s!\t@CPI3_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_49[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_60:\n\tld.1\t64, r2\n\tadd\t@CPI3_72[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_58[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_90:\n\tadd\tstack-[13], r0, r5\n\tadd\t128, r5, r5\n.BB3_91:\n\tsub\tstack[@calldatasize], r3, r6\n\tadd\t@CPI3_21[0], r0, r7\n\tsub.s!\t128, r6, r8\n\tadd\t0, r0, r8\n\tadd.lt\tr7, r0, r8\n\tand\t@CPI3_21[0], r6, r6\n\tsub.s!\t0, r6, r9\n\tadd.le\t0, r0, r7\n\tsub.s!\t@CPI3_21[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB3_22\n\tld.1\t64, r6\n\tsub.s!\t@CPI3_34[0], r6, r7\n\tjump.gt\t@.BB3_35\n\tadd\t128, r6, r7\n\tst.1\t64, r7\n\tptr.add\tstack[@ptr_calldata], r3, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI3_25[0], r7, r8\n\tjump.gt\t@.BB3_22\n\tst.1.inc\tr6, r7, r7\n\tadd\t32, r3, r8\n\tptr.add\tstack[@ptr_calldata], r8, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI3_25[0], r8, r9\n\tjump.gt\t@.BB3_22\n\tst.1\tr7, r8\n\tadd\t64, r3, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI3_41[0], r7, r8\n\tjump.gt\t@.BB3_22\n\tadd\t64, r6, r8\n\tst.1\tr8, r7\n\tadd\t96, r3, r7\n\tptr.add\tstack[@ptr_calldata], r7, r7\n\tld\tr7, r7\n\tsub.s!\t@CPI3_41[0], r7, r8\n\tjump.gt\t@.BB3_22\n\tadd\t96, r6, r8\n\tst.1\tr8, r7\n\tst.1.inc\tr5, r6, r5\n\tadd\t128, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.lt\t@.BB3_91\n\tjump\t@.BB3_92\n.BB3_289:\n\tadd\t128, r11, r6\n.BB3_290:\n\tsub\tr1, r4, r7\n\tadd\t@CPI3_21[0], r0, r8\n\tsub.s!\t64, r7, r9\n\tadd\t0, r0, r9\n\tadd.lt\tr8, r0, r9\n\tand\t@CPI3_21[0], r7, r7\n\tsub.s!\t0, r7, r10\n\tadd.le\t0, r0, r8\n\tsub.s!\t@CPI3_21[0], r7, r7\n\tadd\tr9, r0, r7\n\tadd.eq\tr8, r0, r7\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB3_22\n\tld.1\t64, r7\n\tsub.s!\t@CPI3_24[0], r7, r8\n\tjump.gt\t@.BB3_35\n\tadd\t64, r7, r8\n\tst.1\t64, r8\n\tptr.add\tstack[@ptr_calldata], r4, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI3_25[0], r8, r9\n\tjump.gt\t@.BB3_22\n\tst.1.inc\tr7, r8, r8\n\tadd\t32, r4, r9\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tld\tr9, r9\n\tst.1\tr8, r9\n\tst.1.inc\tr6, r7, r6\n\tadd\t64, r4, r4\n\tsub!\tr4, r5, r7\n\tjump.lt\t@.BB3_290\n\tjump\t@.BB3_294\n.BB3_249:\n\tadd\t128, r12, r7\n.BB3_250:\n\tsub\tr2, r5, r8\n\tadd\t@CPI3_21[0], r0, r9\n\tsub.s!\t64, r8, r10\n\tadd\t0, r0, r10\n\tadd.lt\tr9, r0, r10\n\tand\t@CPI3_21[0], r8, r8\n\tsub.s!\t0, r8, r11\n\tadd.le\t0, r0, r9\n\tsub.s!\t@CPI3_21[0], r8, r8\n\tadd\tr10, r0, r8\n\tadd.eq\tr9, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB3_22\n\tld.1\t64, r8\n\tsub.s!\t@CPI3_24[0], r8, r9\n\tjump.gt\t@.BB3_35\n\tadd\t64, r8, r9\n\tst.1\t64, r9\n\tptr.add\tstack[@ptr_calldata], r5, r9\n\tld\tr9, r9\n\tsub.s!\t@CPI3_25[0], r9, r10\n\tjump.gt\t@.BB3_22\n\tst.1.inc\tr8, r9, r9\n\tadd\t32, r5, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tld\tr10, r10\n\tst.1\tr9, r10\n\tst.1.inc\tr7, r8, r7\n\tadd\t64, r5, r5\n\tsub!\tr5, r6, r8\n\tjump.lt\t@.BB3_250\n\tjump\t@.BB3_254\n.BB3_159:\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tnear_call\tr0, @fun_hashPermitDetails, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[14], r0, r3\n\tld.1\tr3, r3\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[12]\n\tadd\t64, r5, r4\n\tst.1\tr4, r1\n\tand\t@CPI3_25[0], r3, r1\n\tadd\t96, r5, r3\n\tst.1\tr3, r1\n\tadd\t128, r5, r1\n\tst.1\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1.inc\tr5, r1, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\t@CPI3_56[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @finalize_allocation_19045, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[13], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_hashTypedData, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tstack-[10], r0, r1\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[16], r0, r4\n\tnear_call\tr0, @fun_verify, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI3_25[0], r2, r3\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @fun_updateApproval, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_106:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t@CPI3_22[0], r1, r1\n\tjump.gt\t@.BB3_35\n\tadd\tstack-[12], r0, r1\n\tshl.s\t5, r1, r3\n\tadd\t63, r3, r1\n\tadd\tstack-[7], r0, r2\n\tand\tr1, r2, r1\n\tld.1\t64, r2\n\tadd\tr2, r1, r1\n\tadd\tr2, r0, stack-[11]\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI3_22[0], r1, r4\n\tjump.gt\t@.BB3_35\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_35\n\tst.1\t64, r1\n\tadd\tstack-[11], r0, r1\n\tadd\tstack-[12], r0, r2\n\tst.1.inc\tr1, r2, r7\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB3_335\n\tadd\tr0, r0, r4\n.BB3_111:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_111\n.BB3_335:\n\tadd\tr7, r0, stack-[10]\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB3_113\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tstack-[10], r0, r4\n\tadd\tr4, r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB3_113:\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tstack-[11], r0, r7\n\tjump.ne\t@.BB3_114\n.BB3_121:\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tld.1\tr7, r3\n\tsub.s!\t0, r3, r4\n\tadd\tr2, r0, r4\n\tjump.eq\t@.BB3_124\n\tadd\tr0, r0, r5\n\tadd\tr2, r0, r4\n.BB3_123:\n\tadd\t32, r7, r7\n\tld.1\tr7, r6\n\tst.1.inc\tr4, r6, r4\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB3_123\n.BB3_124:\n\tsub\tr4, r1, r3\n\tsub.s\t32, r3, r4\n\tst.1\tr1, r4\n\tadd\t31, r3, r3\n\tadd\tstack-[7], r0, r4\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI3_22[0], r3, r5\n\tjump.gt\t@.BB3_35\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB3_35\n\tst.1\t64, r3\n\tadd\t@CPI3_31[0], r0, r3\n\tsub.s!\t@CPI3_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI3_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_32[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r4\n\tld.1\t64, r1\n\tadd\t128, r1, r5\n\tst.1\tr5, r4\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI3_25[0], r2, r2\n\tadd\t96, r1, r3\n\tst.1\tr3, r2\n\tadd\t32, r1, r2\n\tadd\t@CPI3_61[0], r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r6\n\tsub.s!\t@CPI3_26[0], r1, r3\n\tjump.gt\t@.BB3_35\n\tadd\t160, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI3_31[0], r0, r3\n\tsub.s!\t@CPI3_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI3_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_32[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tnear_call\tr0, @fun_hashTypedData, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tstack-[2], r0, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[16], r0, r4\n\tnear_call\tr0, @fun_verify, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI3_25[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB3_33\n\tadd\tstack-[16], r0, r1\n\tand\t@CPI3_25[0], r1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tr0, r0, stack-[16]\n.BB3_132:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tadd\tstack-[16], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_116\n\tshl.s\t5, r3, r2\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\t32, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r3\n\tand\t@CPI3_25[0], r3, r3\n\tadd\tr3, r0, stack-[14]\n\tadd\tstack-[11], r0, r3\n\tand\t@CPI3_41[0], r3, r3\n\tadd\tr3, r0, stack-[11]\n\tadd\tstack-[12], r0, r3\n\tand\t@CPI3_25[0], r3, r3\n\tadd\tr3, r0, stack-[8]\n\tadd\tstack-[15], r0, r3\n\tand\t@CPI3_41[0], r3, r3\n\tadd\tr3, r0, stack-[12]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsload\tr1, r1\n\tshr.s\t208, r1, r1\n\tadd\tstack-[12], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB3_137\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t0, r2, r1\n\tadd\tr2, r0, r1\n\tjump.ne\t@.BB3_139\n\tadd\t@CPI3_42[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI3_31[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_43[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tld\tr1, r1\n\tand\t@CPI3_41[0], r1, r1\n.BB3_139:\n\tshl.s\t160, r1, r1\n\tadd\tstack-[15], r0, r2\n\tshl.s\t208, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[8], r0, r3\n\tor\tr1, r3, r1\n\tadd\t@CPI3_64[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\tstack-[11], r0, r4\n\tst.1\tr2, r4\n\tst.1\tr1, r3\n\tadd\t@CPI3_31[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_31[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_31[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_65[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_66[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[10], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_22\n\tadd\tstack-[16], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB3_132\n\tjump\t@.BB3_33\n.BB3_137:\n\tld.1\t64, r1\n\tadd\t@CPI3_63[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_31[0], r0, r2\n\tsub.s!\t@CPI3_31[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_49[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_263:\n\tld.1\tr12, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI3_22[0], r2, r2\n\tjump.gt\t@.BB3_35\n\tadd\tstack-[14], r0, r2\n\tshl.s\t5, r2, r3\n\tadd\t63, r3, r2\n\tand\tr2, r1, r1\n\tld.1\t64, r2\n\tadd\tr2, r1, r1\n\tadd\tr2, r0, stack-[13]\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI3_22[0], r1, r4\n\tjump.gt\t@.BB3_35\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_35\n\tadd\tr12, r0, stack-[11]\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[13], r0, r2\n\tst.1.inc\tr2, r1, r7\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB3_334\n\tadd\tr0, r0, r4\n.BB3_268:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_268\n.BB3_334:\n\tadd\tr7, r0, stack-[10]\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB3_270\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tstack-[10], r0, r4\n\tadd\tr4, r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB3_270:\n\tadd\tstack-[17], r0, r4\n\tadd\tstack-[14], r0, r1\n\tsub!\tr4, r1, r1\n\tadd\tstack-[11], r0, r3\n\tjump.ge\t@.BB3_277\n\tadd\t96, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[8]\n.BB3_272:\n\tld.1\tr3, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r4, r2\n\tjump.le\t@.BB3_116\n\tadd\tr4, r0, stack-[16]\n\tshl.s\t5, r4, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI3_33[0], r0, r4\n\tst.1\tr2, r4\n\tld.1.inc\tr3, r3, r4\n\tand\t@CPI3_25[0], r3, r3\n\tadd\t64, r1, r5\n\tst.1\tr5, r3\n\tld.1\tr4, r3\n\tadd\t96, r1, r4\n\tst.1\tr4, r3\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI3_34[0], r1, r3\n\tjump.gt\t@.BB3_35\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI3_31[0], r0, r3\n\tsub.s!\t@CPI3_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI3_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_32[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[16], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[10], r0, r2\n\tjump.le\t@.BB3_116\n\tadd\tstack-[15], r0, r5\n\tadd\tr2, r5, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r4, r4\n\tadd\tstack-[14], r0, r1\n\tsub!\tr4, r1, r1\n\tjump.lt\t@.BB3_272\n.BB3_277:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t32, r1, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tstack-[13], r0, r1\n\tnear_call\tr0, @abi_encode_array_bytes32_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[7], r0, r3\n\tld.1\tr3, r3\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[15]\n\tadd\t128, r5, r4\n\tst.1\tr4, r3\n\tadd\t64, r5, r3\n\tst.1\tr3, r1\n\tadd\t96, r5, r1\n\tadd\tstack-[12], r0, r3\n\tst.1\tr1, r3\n\tadd\t160, r5, r1\n\tst.1\tr1, r2\n\tadd\t160, r0, r1\n\tst.1.inc\tr5, r1, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\t@CPI3_36[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @finalize_allocation_21849, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r5\n\tadd\tstack-[11], r0, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[5], r0, r3\n\tadd\tstack-[3], r0, r4\n\tadd\tstack-[1], r0, r6\n\tadd\tstack-[2], r0, r7\n\tnear_call\tr0, @fun__permitTransferFrom, @DEFAULT_UNWIND\n\tadd\t@CPI3_31[0], r0, r1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t@CPI3_31[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tmul\t@CPI3_35[0], r1, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB3_114:\n\tadd\t160, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tr0, r0, r3\n.BB3_115:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_116\n\tadd\tr3, r0, stack-[15]\n\tshl.s\t5, r3, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI3_59[0], r0, r4\n\tst.1\tr2, r4\n\tld.1.inc\tr3, r4, r5\n\tand\t@CPI3_25[0], r4, r4\n\tadd\t64, r1, r6\n\tst.1\tr6, r4\n\tld.1\tr5, r4\n\tand\t@CPI3_25[0], r4, r4\n\tadd\t96, r1, r5\n\tst.1\tr5, r4\n\tadd\t64, r3, r4\n\tld.1\tr4, r4\n\tand\t@CPI3_41[0], r4, r4\n\tadd\t128, r1, r5\n\tst.1\tr5, r4\n\tadd\t96, r3, r3\n\tld.1\tr3, r3\n\tand\t@CPI3_41[0], r3, r3\n\tadd\t160, r1, r4\n\tst.1\tr4, r3\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI3_60[0], r1, r3\n\tjump.gt\t@.BB3_35\n\tadd\t192, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI3_31[0], r0, r3\n\tsub.s!\t@CPI3_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI3_31[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_31[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_32[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_22\n\tadd\tstack-[11], r0, r7\n\tld.1\tr7, r2\n\tadd\tstack-[15], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB3_116\n\tadd\tstack-[10], r0, r2\n\tadd\tstack-[14], r0, r4\n\tadd\tr4, r2, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r3, r3\n\tadd\tstack-[12], r0, r1\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB3_115\n\tjump\t@.BB3_121\n.BB3_116:\n\tadd\t@CPI3_62[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_58[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation_19045:\n.func_begin4:\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t160, r1, r1\n\tst.1\t64, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfinalize_allocation_21849:\n.func_begin5:\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tjump.ge\t@.BB5_1\n\tadd\t192, r1, r1\n\tst.1\t64, r1\n\tret\n.BB5_1:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfinalize_allocation:\n.func_begin6:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r3\n\tjump.gt\t@.BB6_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB6_2\n\tst.1\t64, r1\n\tret\n.BB6_2:\n\tadd\t@CPI6_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nabi_decode_string_calldata:\n.func_begin7:\n\tadd\t31, r1, r3\n\tadd\t@CPI7_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI7_0[0], r2, r6\n\tand\t@CPI7_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI7_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB7_1\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI7_1[0], r3, r4\n\tjump.gt\t@.BB7_1\n\tadd\t32, r1, r1\n\tadd\tr1, r3, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB7_1\n\tadd\tr3, r0, r2\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nabi_encode_uint160_uint48_uint48:\n.func_begin8:\n\tand\t@CPI8_0[0], r4, r4\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tand\t@CPI8_0[0], r3, r3\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI8_1[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end8:\n\nfun_transfer:\n.func_begin9:\n\tnop\tstack+=[7]\n\tadd\tr4, r0, stack-[7]\n\tadd\tr3, r0, stack-[6]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[5]\n\tand\t@CPI9_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tand\t@CPI9_0[0], r2, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI9_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tshr.s\t160, r6, r3\n\tand\t@CPI9_5[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB9_6\n\tadd\tstack-[6], r0, r5\n\tand\t@CPI9_0[0], r5, r4\n\tand\t@CPI9_0[0], r6, r1\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd\tstack-[7], r0, r2\n\tjump.eq\t@.BB9_9\n\tsub!\tr4, r1, r3\n\tjump.gt\t@.BB9_22\n\tsub\tr6, r5, r1\n\tand\t@CPI9_0[0], r1, r1\n\tand\t@CPI9_6[0], r6, r3\n\tor\tr1, r3, r1\n\tadd\tstack-[1], r0, r3\n\tsstore\tr3, r1\n.BB9_9:\n\tld.1\t64, r1\n\tadd\t68, r1, r3\n\tst.1\tr3, r4\n\tadd\t36, r1, r4\n\tadd\tstack-[4], r0, r3\n\tst.1\tr4, r3\n\tadd\t@CPI9_9[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r4\n\tadd\tstack-[5], r0, r3\n\tst.1\tr4, r3\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB9_13\n\tadd\tr0, r0, r2\n.BB9_11:\n\tshl.s\t5, r2, r3\n\tadd\tr1, r3, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_11\n\tadd\tstack[@returndatasize], r0, r3\n\tadd\tstack-[2], r0, r4\n\tjump\t@.BB9_18\n.BB9_13:\n\tadd\t@CPI9_1[0], r0, r3\n\tsub.s!\t@CPI9_1[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tsub.s!\t@CPI9_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r5, r3\n\tor\tr3, r1, r1\n\tor\t@CPI9_10[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI9_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB9_23\n\tadd\tr0, r0, r6\n.BB9_15:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB9_15\n.BB9_23:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB9_17\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr4, r1\n.BB9_17:\n\tand\t1, r2, r4\n\tadd\tr3, r0, stack[@returndatasize]\n.BB9_18:\n\tld.1\t0, r1\n\tsub.s!\t1, r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tand\tr2, r1, r1\n\tsub.s!\t0, r3, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tor\tr2, r1, r1\n\tand!\tr1, r4, r1\n\tjump.eq\t@.BB9_19\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_6:\n\tld.1\t64, r1\n\tadd\t@CPI9_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_19:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI9_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_22:\n\tld.1\t64, r2\n\tadd\t@CPI9_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_updateApproval:\n.func_begin10:\n\tnop\tstack+=[8]\n\tadd\tr3, r0, stack-[4]\n\tadd\t96, r1, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[8]\n\tadd\t32, r1, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[6]\n\tadd\t64, r1, r3\n\tld.1\tr3, r3\n\tadd\tr3, r0, stack-[5]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tand\t@CPI10_0[0], r2, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI10_0[0], r3, r3\n\tadd\tr3, r0, stack-[7]\n\tadd\tstack-[5], r0, r3\n\tand\t@CPI10_3[0], r3, r3\n\tadd\tr3, r0, stack-[5]\n\tadd\tstack-[6], r0, r3\n\tand\t@CPI10_0[0], r3, r3\n\tadd\tr3, r0, stack-[2]\n\tadd\tstack-[8], r0, r3\n\tand\t@CPI10_3[0], r3, r3\n\tadd\tr3, r0, stack-[6]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI10_0[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r6\n\tsload\tr6, r1\n\tshr.s\t208, r1, r1\n\tadd\tstack-[6], r0, r5\n\tsub!\tr1, r5, r1\n\tjump.ne\t@.BB10_5\n\tadd\tstack-[5], r0, r4\n\tsub.s!\t0, r4, r1\n\tadd\tr4, r0, r1\n\tjump.ne\t@.BB10_7\n\tadd\tr6, r0, stack-[1]\n\tadd\t@CPI10_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tand\t@CPI10_3[0], r1, r1\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[1], r0, r6\n.BB10_7:\n\tshl.s\t160, r1, r1\n\tadd\tstack-[8], r0, r2\n\tshl.s\t208, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[2], r0, r3\n\tor\tr1, r3, r1\n\tadd\t@CPI10_8[0], r1, r1\n\tsstore\tr6, r1\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tst.1\tr2, r5\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tst.1\tr1, r3\n\tadd\t@CPI10_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI10_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI10_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI10_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI10_10[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB10_1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_5:\n\tld.1\t64, r1\n\tadd\t@CPI10_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI10_1[0], r0, r2\n\tsub.s!\t@CPI10_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_DOMAIN_SEPARATOR:\n.func_begin11:\n\tnop\tstack+=[2]\n\tadd\t@CPI11_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI11_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB11_5\n\tadd\t@CPI11_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB11_4\n\tjump\t@.BB11_1\n.BB11_5:\n\tld.1\t64, r3\n\tadd\t64, r3, r1\n\tadd\t@CPI11_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[2]\n\tadd\t32, r3, r2\n\tadd\t@CPI11_6[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI11_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r4\n\tadd\t128, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\t128, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI11_7[0], r4, r1\n\tjump.ge\t@.BB11_7\n\tadd\t160, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t@CPI11_1[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI11_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI11_1[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI11_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n.BB11_4:\n\tld\tr1, r1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_7:\n\tadd\t@CPI11_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_hashTypedData:\n.func_begin12:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI12_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI12_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB12_4\n\tadd\t@CPI12_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB12_9\n\tjump\t@.BB12_1\n.BB12_4:\n\tld.1\t64, r3\n\tadd\t64, r3, r1\n\tadd\t@CPI12_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[3]\n\tadd\t32, r3, r2\n\tadd\t@CPI12_6[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI12_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI12_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r4\n\tadd\t128, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\t128, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI12_7[0], r4, r1\n\tjump.ge\t@.BB12_6\n\tadd\t160, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI12_1[0], r0, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t@CPI12_1[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI12_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI12_1[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI12_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n.BB12_9:\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t66, r1, r2\n\tadd\tstack-[2], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\t@CPI12_9[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r1, r4\n\tst.1\tr4, r3\n\tadd\t66, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI12_10[0], r1, r3\n\tjump.gt\t@.BB12_6\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI12_1[0], r0, r3\n\tsub.s!\t@CPI12_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI12_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_6:\n\tadd\t@CPI12_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_permitTransferFrom:\n.func_begin13:\n\tnop\tstack+=[10]\n\tadd\tr5, r0, stack-[5]\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[6]\n\tadd\tr2, r0, stack-[10]\n\tadd\tr1, r0, stack-[8]\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t164, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI13_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r3\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB13_3\n\tadd\tstack-[8], r0, r1\n\tld.1.inc\tr1, r1, r2\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tsub!\tr3, r1, r3\n\tjump.gt\t@.BB13_5\n\tld.1\tr2, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[10], r0, r1\n\tand\t@CPI13_3[0], r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tshr.s\t8, r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tadd\tstack-[9], r0, r2\n\tand\t255, r2, r2\n\tshl\t1, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\txor\tr3, r2, r3\n\tsstore\tr1, r3\n\tand!\tr3, r2, r1\n\tjump.eq\t@.BB13_9\n\tadd\t@CPI13_5[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t36, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t@CPI13_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB13_13\n\tadd\t@CPI13_5[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB13_18\n\tjump\t@.BB13_1\n.BB13_13:\n\tld.1\t64, r3\n\tadd\t64, r3, r1\n\tadd\t@CPI13_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[9]\n\tadd\t32, r3, r2\n\tadd\t@CPI13_9[0], r0, r1\n\tadd\tr2, r0, stack-[2]\n\tst.1\tr2, r1\n\tadd\t@CPI13_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r4\n\tadd\t128, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\t128, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI13_10[0], r4, r1\n\tjump.ge\t@.BB13_15\n\tadd\t160, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tadd\tstack-[2], r0, r3\n\tsub.s!\t@CPI13_1[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI13_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n.BB13_18:\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t66, r1, r2\n\tadd\tstack-[6], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\t@CPI13_12[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r1, r4\n\tst.1\tr4, r3\n\tadd\t66, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI13_13[0], r1, r3\n\tjump.gt\t@.BB13_15\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI13_1[0], r0, r3\n\tsub.s!\t@CPI13_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t@CPI13_14[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_15[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB13_44\n\tld.1\t64, r10\n\tadd\t36, r10, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_16[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r10, r1\n\tadd\tstack-[5], r0, r8\n\tst.1\tr1, r8\n\tand\t31, r8, r2\n\tadd\t100, r10, r1\n\tadd\tstack-[4], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r8, r4\n\tjump.eq\t@.BB13_81\n\tadd\tr0, r0, r5\n.BB13_24:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB13_24\n.BB13_81:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB13_26\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB13_26:\n\tadd\tr1, r8, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB13_28\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB13_38\n.BB13_44:\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t65, r2, r1\n\tjump.ne\t@.BB13_50\n\tadd\tstack-[4], r0, r4\n\tadd\t64, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r3\n\tadd\t32, r4, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tld\tr3, r3\n\tshr.s\t248, r3, r3\n\tjump\t@.BB13_45\n.BB13_28:\n\tadd\t31, r8, r4\n\tsub.s\t32, r0, r3\n\tand\tr4, r3, r5\n\tadd\t@CPI13_1[0], r0, r3\n\tsub.s!\t@CPI13_1[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t100, r5, r6\n\tsub.s!\t@CPI13_1[0], r6, r5\n\tadd\tr3, r0, r5\n\tadd.lt\tr6, r0, r5\n\tshl.s\t96, r5, r5\n\tor\tr4, r5, r5\n\tsub.s!\t@CPI13_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r5, r1\n\tadd\tr10, r0, stack-[9]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI13_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB13_80\n\tadd\tr0, r0, r7\n.BB13_30:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB13_30\n.BB13_80:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB13_32\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB13_32:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_33\n.BB13_38:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI13_17[0], r1, r4\n\tjump.gt\t@.BB13_15\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB13_15\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB13_1\n\tld.1\tr10, r2\n\tand\t@CPI13_18[0], r2, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB13_1\n\tsub.s!\t@CPI13_16[0], r2, r2\n\tjump.eq\t@.BB13_63\n\tadd\t@CPI13_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_50:\n\tsub.s!\t64, r2, r1\n\tadd\tstack-[4], r0, r4\n\tjump.ne\t@.BB13_51\n\tadd\t32, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r2\n\tld\tr2, r3\n\tand\t@CPI13_22[0], r3, r2\n\tshr.s\t255, r3, r3\n\tadd\t27, r3, r3\n.BB13_45:\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r5\n\tst.1\tr5, r2\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r3\n\tadd\tstack-[9], r0, r1\n\tst.1\tr4, r1\n\tst.1\t0, r0\n\tadd\t@CPI13_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI13_1[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_23[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI13_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB13_78\n\tadd\tr0, r0, r6\n.BB13_47:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB13_47\n.BB13_78:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB13_49\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB13_49:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_54\n\tld.1\t0, r1\n\tand!\t@CPI13_3[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.eq\t@.BB13_60\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB13_62\n.BB13_63:\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tand\t@CPI13_3[0], r1, r2\n\tadd\t132, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI13_3[0], r3, r1\n\tjump.gt\t@.BB13_1\n\tld.1\t64, r1\n\tadd\t68, r1, r4\n\tadd\tstack-[7], r0, r5\n\tst.1\tr4, r5\n\tadd\t36, r1, r4\n\tst.1\tr4, r3\n\tadd\t@CPI13_25[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r3\n\tadd\tstack-[10], r0, r4\n\tst.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB13_68\n\tadd\tr0, r0, r2\n.BB13_66:\n\tshl.s\t5, r2, r3\n\tadd\tr1, r3, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB13_66\n\tadd\t1, r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB13_73\n.BB13_68:\n\tadd\t@CPI13_1[0], r0, r4\n\tsub.s!\t@CPI13_1[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI13_1[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tor\t@CPI13_26[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI13_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB13_76\n\tadd\tr0, r0, r6\n.BB13_70:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB13_70\n.BB13_76:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB13_72\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr4, r1\n.BB13_72:\n\tand\t1, r2, r1\n\tadd\tr3, r0, stack[@returndatasize]\n.BB13_73:\n\tld.1\t0, r2\n\tsub.s!\t1, r2, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t31, r3, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\tr4, r2, r2\n\tsub.s!\t0, r3, r3\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tor\tr3, r2, r2\n\tand!\tr2, r1, r1\n\tjump.eq\t@.BB13_74\n\tret\n.BB13_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_15:\n\tadd\t@CPI13_30[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_31[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t@CPI13_34[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_5:\n\tld.1\t64, r2\n\tadd\t@CPI13_33[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI13_1[0], r0, r1\n\tsub.s!\t@CPI13_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_9:\n\tld.1\t64, r1\n\tadd\t@CPI13_32[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_74:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_28[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_54:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB13_77\n\tadd\tr0, r0, r5\n.BB13_56:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB13_56\n.BB13_77:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB13_58\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB13_58:\n\tadd\t@CPI13_1[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI13_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_60:\n\tld.1\t64, r1\n\tadd\t@CPI13_29[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_62:\n\tld.1\t64, r1\n\tadd\t@CPI13_24[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_33:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB13_79\n\tadd\tr0, r0, r5\n.BB13_35:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB13_35\n.BB13_79:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB13_37\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB13_37:\n\tadd\t@CPI13_1[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI13_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI13_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_51:\n\tld.1\t64, r1\n\tadd\t@CPI13_21[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI13_1[0], r0, r2\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun__permitTransferFrom:\n.func_begin14:\n\tnop\tstack+=[11]\n\tadd\tr7, r0, stack-[3]\n\tadd\tr6, r0, stack-[2]\n\tadd\tr5, r0, stack-[4]\n\tadd\tr4, r0, stack-[9]\n\tadd\tr3, r0, stack-[7]\n\tadd\tr2, r0, stack-[10]\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr1, r0, stack-[11]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[5]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI14_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r4\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB14_3\n\tadd\tstack-[6], r0, r1\n\tsub!\tr1, r3, r1\n\tjump.ne\t@.BB14_5\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[9], r0, r1\n\tand\t@CPI14_5[0], r1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tshr.s\t8, r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tadd\tstack-[8], r0, r2\n\tand\t255, r2, r2\n\tshl\t1, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\txor\tr3, r2, r3\n\tsstore\tr1, r3\n\tand!\tr3, r2, r1\n\tjump.eq\t@.BB14_9\n\tadd\t@CPI14_7[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t36, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI14_9[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB14_13\n\tadd\t@CPI14_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_8[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB14_18\n\tjump\t@.BB14_1\n.BB14_13:\n\tld.1\t64, r3\n\tadd\t64, r3, r1\n\tadd\t@CPI14_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[8]\n\tadd\t32, r3, r2\n\tadd\t@CPI14_11[0], r0, r1\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r1\n\tadd\t@CPI14_9[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r4\n\tadd\t128, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\t128, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI14_12[0], r4, r1\n\tjump.ge\t@.BB14_15\n\tadd\t160, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tadd\tstack-[5], r0, r3\n\tsub.s!\t@CPI14_1[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI14_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n.BB14_18:\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t66, r1, r2\n\tadd\tstack-[4], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\t@CPI14_14[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r1, r4\n\tst.1\tr4, r3\n\tadd\t66, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI14_15[0], r1, r3\n\tjump.gt\t@.BB14_15\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI14_1[0], r0, r3\n\tsub.s!\t@CPI14_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI14_16[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_17[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r8\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB14_44\n\tld.1\t64, r10\n\tadd\t36, r10, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI14_18[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r10, r1\n\tadd\tstack-[3], r0, r9\n\tst.1\tr1, r9\n\tand\t31, r9, r2\n\tadd\t100, r10, r1\n\tadd\tstack-[2], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r9, r4\n\tjump.eq\t@.BB14_90\n\tadd\tr0, r0, r5\n.BB14_24:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB14_24\n.BB14_90:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB14_26\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB14_26:\n\tadd\tr1, r9, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB14_28\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB14_38\n.BB14_44:\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t65, r2, r1\n\tjump.ne\t@.BB14_50\n\tadd\tstack-[2], r0, r4\n\tadd\t64, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r3\n\tadd\t32, r4, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tld\tr3, r3\n\tshr.s\t248, r3, r3\n\tjump\t@.BB14_45\n.BB14_28:\n\tadd\t31, r9, r4\n\tsub.s\t32, r0, r3\n\tand\tr4, r3, r5\n\tadd\t@CPI14_1[0], r0, r3\n\tsub.s!\t@CPI14_1[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t100, r5, r6\n\tsub.s!\t@CPI14_1[0], r6, r5\n\tadd\tr3, r0, r5\n\tadd.lt\tr6, r0, r5\n\tshl.s\t96, r5, r5\n\tor\tr4, r5, r5\n\tsub.s!\t@CPI14_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r5, r1\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI14_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB14_89\n\tadd\tr0, r0, r7\n.BB14_30:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB14_30\n.BB14_89:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB14_32\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB14_32:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[7], r0, r8\n\tjump.eq\t@.BB14_33\n.BB14_38:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI14_19[0], r1, r4\n\tjump.gt\t@.BB14_15\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB14_15\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB14_1\n\tld.1\tr10, r2\n\tand\t@CPI14_20[0], r2, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB14_1\n\tsub.s!\t@CPI14_18[0], r2, r2\n\tjump.eq\t@.BB14_63\n\tadd\t@CPI14_21[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_50:\n\tsub.s!\t64, r2, r1\n\tadd\tstack-[2], r0, r4\n\tjump.ne\t@.BB14_51\n\tadd\t32, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r2\n\tld\tr2, r3\n\tand\t@CPI14_23[0], r3, r2\n\tshr.s\t255, r3, r3\n\tadd\t27, r3, r3\n.BB14_45:\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r5\n\tst.1\tr5, r2\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r3\n\tadd\tstack-[8], r0, r1\n\tst.1\tr4, r1\n\tst.1\t0, r0\n\tadd\t@CPI14_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI14_1[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_24[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI14_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB14_87\n\tadd\tr0, r0, r6\n.BB14_47:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB14_47\n.BB14_87:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB14_49\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB14_49:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[7], r0, r8\n\tjump.eq\t@.BB14_54\n\tld.1\t0, r1\n\tand!\t@CPI14_5[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tjump.eq\t@.BB14_60\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB14_62\n.BB14_63:\n\tsub.s!\t0, r8, r1\n\tjump.eq\t@.BB14_69\n\tadd\tr0, r0, r7\n\tjump\t@.BB14_65\n.BB14_81:\n\tand\t1, r2, r1\n\tadd\tr3, r0, stack[@returndatasize]\n.BB14_82:\n\tld.1\t0, r2\n\tsub.s!\t1, r2, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t31, r3, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\tr4, r2, r2\n\tsub.s!\t0, r3, r3\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tor\tr3, r2, r2\n\tand!\tr2, r1, r1\n\tjump.eq\t@.BB14_83\n.BB14_84:\n\tadd\t1, r7, r7\n\tsub!\tr7, r8, r1\n\tjump.ge\t@.BB14_69\n.BB14_65:\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r7, r2\n\tjump.le\t@.BB14_66\n\tsub!\tr7, r8, r2\n\tjump.ge\t@.BB14_66\n\tshl.s\t5, r7, r2\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tshl.s\t6, r7, r2\n\tadd\tstack-[10], r0, r3\n\tadd\tr2, r3, r2\n\tadd\t32, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r3, r3\n\tld\tr3, r3\n\tadd\t32, r1, r5\n\tld.1\tr5, r5\n\tsub!\tr3, r5, r6\n\tjump.gt\t@.BB14_70\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB14_84\n\tptr.add\tr4, r2, r4\n\tld.1\tr1, r1\n\tand\t@CPI14_5[0], r1, r2\n\tld\tr4, r4\n\tsub.s!\t@CPI14_5[0], r4, r1\n\tjump.gt\t@.BB14_1\n\tld.1\t64, r1\n\tadd\t68, r1, r5\n\tst.1\tr5, r3\n\tadd\t36, r1, r3\n\tst.1\tr3, r4\n\tadd\t@CPI14_28[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r3\n\tadd\tstack-[9], r0, r4\n\tst.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB14_77\n\tadd\tr0, r0, r2\n.BB14_75:\n\tshl.s\t5, r2, r3\n\tadd\tr1, r3, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB14_75\n\tadd\t1, r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB14_82\n.BB14_77:\n\tadd\tr7, r0, stack-[8]\n\tadd\t@CPI14_1[0], r0, r4\n\tsub.s!\t@CPI14_1[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI14_1[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tor\t@CPI14_29[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI14_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB14_85\n\tadd\tr0, r0, r6\n.BB14_79:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB14_79\n.BB14_85:\n\tand!\t31, r5, r5\n\tadd\tstack-[7], r0, r8\n\tadd\tstack-[8], r0, r7\n\tjump.eq\t@.BB14_81\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr4, r1\n\tjump\t@.BB14_81\n.BB14_69:\n\tret\n.BB14_66:\n\tadd\t@CPI14_26[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_27[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_70:\n\tld.1\t64, r1\n\tadd\t@CPI14_32[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r5\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_27[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_83:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_15:\n\tadd\t@CPI14_26[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI14_27[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_3:\n\tld.1\t64, r1\n\tadd\t@CPI14_35[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r4\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_27[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_5:\n\tld.1\t64, r1\n\tadd\t@CPI14_3[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_9:\n\tld.1\t64, r1\n\tadd\t@CPI14_34[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_54:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB14_86\n\tadd\tr0, r0, r5\n.BB14_56:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB14_56\n.BB14_86:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB14_58\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB14_58:\n\tadd\t@CPI14_1[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI14_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_60:\n\tld.1\t64, r1\n\tadd\t@CPI14_33[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_62:\n\tld.1\t64, r1\n\tadd\t@CPI14_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_33:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB14_88\n\tadd\tr0, r0, r5\n.BB14_35:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB14_35\n.BB14_88:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB14_37\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB14_37:\n\tadd\t@CPI14_1[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI14_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI14_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_51:\n\tld.1\t64, r1\n\tadd\t@CPI14_22[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI14_1[0], r0, r2\n\tsub.s!\t@CPI14_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\nabi_encode_array_bytes32_dyn:\n.func_begin15:\n\tld.1\tr1, r3\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB15_3\n\tadd\tr0, r0, r4\n.BB15_2:\n\tadd\t32, r1, r1\n\tld.1\tr1, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB15_2\n.BB15_3:\n\tadd\tr2, r0, r1\n\tret\n.func_end15:\n\nabi_encode_string:\n.func_begin16:\n\tld.1\tr1, r3\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB16_3\n\tadd\tr0, r0, r4\n.BB16_2:\n\tadd\tr4, r2, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB16_2\n.BB16_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tret\n.func_end16:\n\nabi_encode_bytes32_bytes32_address_uint256_uint256_bytes32:\n.func_begin17:\n\tadd\t160, r1, r8\n\tst.1\tr8, r7\n\tadd\t128, r1, r7\n\tst.1\tr7, r6\n\tadd\t96, r1, r6\n\tst.1\tr6, r5\n\tand\t@CPI17_0[0], r4, r4\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tst.1\tr1, r2\n\tadd\t192, r1, r1\n\tret\n.func_end17:\n\nfun_hashPermitDetails:\n.func_begin18:\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tadd\t@CPI18_0[0], r0, r4\n\tst.1\tr3, r4\n\tld.1.inc\tr1, r4, r5\n\tand\t@CPI18_1[0], r4, r4\n\tadd\t64, r2, r6\n\tst.1\tr6, r4\n\tld.1\tr5, r4\n\tand\t@CPI18_1[0], r4, r4\n\tadd\t96, r2, r5\n\tst.1\tr5, r4\n\tadd\t64, r1, r4\n\tld.1\tr4, r4\n\tand\t@CPI18_2[0], r4, r4\n\tadd\t128, r2, r5\n\tst.1\tr5, r4\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI18_2[0], r1, r1\n\tadd\t160, r2, r4\n\tst.1\tr4, r1\n\tadd\t160, r0, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI18_3[0], r2, r1\n\tjump.ge\t@.BB18_1\n\tadd\t192, r2, r1\n\tst.1\t64, r1\n\tadd\t@CPI18_4[0], r0, r1\n\tsub.s!\t@CPI18_4[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI18_4[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI18_4[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI18_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB18_3\n\tld\tr1, r1\n\tret\n.BB18_1:\n\tadd\t@CPI18_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI18_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB18_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\nfun_hashTokenPermissions:\n.func_begin19:\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tadd\t@CPI19_0[0], r0, r4\n\tst.1\tr3, r4\n\tld.1.inc\tr1, r1, r4\n\tand\t@CPI19_1[0], r1, r1\n\tadd\t64, r2, r5\n\tst.1\tr5, r1\n\tld.1\tr4, r1\n\tadd\t96, r2, r4\n\tst.1\tr4, r1\n\tadd\t96, r0, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI19_2[0], r2, r1\n\tjump.ge\t@.BB19_1\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\t@CPI19_3[0], r0, r1\n\tsub.s!\t@CPI19_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI19_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI19_3[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI19_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_3\n\tld\tr1, r1\n\tret\n.BB19_1:\n\tadd\t@CPI19_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI19_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB19_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end19:\n\nfun_verify:\n.func_begin20:\n\tnop\tstack+=[4]\n\tadd\tr3, r0, stack-[2]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI20_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr4, r0, stack-[1]\n\tst.2\t4, r4\n\tadd\t@CPI20_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI20_2[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB20_27\n\tld.1\t64, r10\n\tadd\t36, r10, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI20_3[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r10, r1\n\tadd\tstack-[4], r0, r8\n\tst.1\tr1, r8\n\tand\t31, r8, r2\n\tadd\t100, r10, r1\n\tadd\tstack-[3], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r8, r4\n\tjump.eq\t@.BB20_50\n\tadd\tr0, r0, r5\n.BB20_6:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB20_6\n.BB20_50:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB20_8\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB20_8:\n\tadd\tr1, r8, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI20_4[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB20_10\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB20_20\n.BB20_27:\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t65, r2, r1\n\tjump.ne\t@.BB20_33\n\tadd\tstack-[3], r0, r4\n\tadd\t64, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r3\n\tadd\t32, r4, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tld\tr3, r3\n\tshr.s\t248, r3, r3\n\tjump\t@.BB20_28\n.BB20_10:\n\tadd\t31, r8, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t@CPI20_1[0], r0, r4\n\tsub.s!\t@CPI20_1[0], r10, r5\n\tadd\tr4, r0, r5\n\tadd.lt\tr10, r0, r5\n\tshl.s\t64, r5, r5\n\tadd\t100, r3, r3\n\tsub.s!\t@CPI20_1[0], r3, r6\n\tadd.ge\tr4, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr5, r3, r3\n\tsub.s!\t@CPI20_1[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tadd\tr10, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI20_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB20_47\n\tadd\tr0, r0, r7\n.BB20_12:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB20_12\n.BB20_47:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB20_14\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB20_14:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_15\n.BB20_20:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI20_5[0], r1, r4\n\tjump.gt\t@.BB20_22\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB20_22\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB20_1\n\tld.1\tr10, r2\n\tand\t@CPI20_6[0], r2, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB20_1\n\tsub.s!\t@CPI20_3[0], r2, r2\n\tjump.eq\t@.BB20_3\n\tadd\t@CPI20_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI20_1[0], r0, r2\n\tsub.s!\t@CPI20_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_33:\n\tsub.s!\t64, r2, r1\n\tadd\tstack-[3], r0, r4\n\tjump.ne\t@.BB20_34\n\tadd\t32, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r2\n\tld\tr2, r3\n\tand\t@CPI20_12[0], r3, r2\n\tshr.s\t255, r3, r3\n\tadd\t27, r3, r3\n.BB20_28:\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r5\n\tst.1\tr5, r2\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tst.1\tr4, r1\n\tst.1\t0, r0\n\tadd\t@CPI20_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI20_1[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI20_13[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI20_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB20_46\n\tadd\tr0, r0, r6\n.BB20_30:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB20_30\n.BB20_46:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB20_32\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB20_32:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_37\n\tld.1\t0, r1\n\tand!\t@CPI20_4[0], r1, r1\n\tjump.eq\t@.BB20_43\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI20_4[0], r2, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB20_45\n.BB20_3:\n\tret\n.BB20_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_22:\n\tadd\t@CPI20_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI20_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_37:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB20_48\n\tadd\tr0, r0, r5\n.BB20_39:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB20_39\n.BB20_48:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB20_41\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB20_41:\n\tadd\t@CPI20_1[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI20_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_43:\n\tld.1\t64, r1\n\tadd\t@CPI20_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI20_1[0], r0, r2\n\tsub.s!\t@CPI20_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_45:\n\tld.1\t64, r1\n\tadd\t@CPI20_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI20_1[0], r0, r2\n\tsub.s!\t@CPI20_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_15:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB20_49\n\tadd\tr0, r0, r5\n.BB20_17:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB20_17\n.BB20_49:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB20_19\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB20_19:\n\tadd\t@CPI20_1[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI20_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI20_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB20_34:\n\tld.1\t64, r1\n\tadd\t@CPI20_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI20_1[0], r0, r2\n\tsub.s!\t@CPI20_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI20_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end20:\n\n__farcall:\n.func_begin21:\n.tmp0:\n\tfar_call\tr1, r2, @.BB21_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB21_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end21:\n\n__staticcall:\n.func_begin22:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB22_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB22_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end22:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_0:\nCPI3_31:\nCPI9_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\nCPI18_4:\nCPI19_3:\nCPI20_1:\n\t.cell 4294967295\nCPI0_1:\nCPI11_3:\nCPI12_3:\nCPI13_7:\nCPI14_9:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_2:\nCPI11_6:\nCPI12_6:\nCPI13_9:\nCPI14_11:\n\t.cell -52161594716389521330893928962118603104092639720612062241465413496839451137946\nCPI0_3:\nCPI11_5:\nCPI12_5:\nCPI13_8:\nCPI14_10:\n\t.cell -45779730367734237300416505028998464482483735542981242881131590982248139992214\nCPI0_4:\n\t.cell 53919893334301279589334030174039261362486096052542264263037304176640\nCPI1_1:\nCPI3_32:\nCPI11_8:\nCPI12_8:\nCPI13_11:\nCPI14_13:\nCPI18_5:\nCPI19_4:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI2_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\nCPI3_0:\n\t.cell 1073339568\nCPI3_1:\n\t.cell 2457706756\nCPI3_2:\n\t.cell 3990438986\nCPI3_3:\n\t.cell 3990438987\nCPI3_4:\n\t.cell 4270768551\nCPI3_5:\n\t.cell 2457706757\nCPI3_6:\n\t.cell 3428001919\nCPI3_7:\n\t.cell 1708749371\nCPI3_8:\n\t.cell 1708749372\nCPI3_9:\n\t.cell 2270264389\nCPI3_10:\n\t.cell 1073339569\nCPI3_11:\n\t.cell 1340091204\nCPI3_12:\n\t.cell 728216943\nCPI3_13:\n\t.cell 910484756\nCPI3_14:\n\t.cell 910484757\nCPI3_15:\n\t.cell 919045398\nCPI3_16:\n\t.cell 728216944\nCPI3_17:\n\t.cell 821201786\nCPI3_18:\n\t.cell 223916507\nCPI3_19:\n\t.cell 326904318\nCPI3_20:\n\t.cell 707625169\nCPI3_21:\nCPI7_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI3_22:\nCPI6_0:\nCPI7_1:\nCPI13_17:\nCPI14_19:\nCPI20_5:\n\t.cell 18446744073709551615\nCPI3_23:\n\t.cell 18446744073709551519\nCPI3_24:\n\t.cell 18446744073709551551\nCPI3_25:\nCPI8_1:\nCPI9_0:\nCPI10_0:\nCPI13_3:\nCPI14_5:\nCPI17_0:\nCPI18_1:\nCPI19_1:\nCPI20_4:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI3_26:\n\t.cell 18446744073709551455\nCPI3_27:\n\t.cell 24482125837415189826193954846931915305796936482980204944253573417775359066112\nCPI3_28:\n\t.cell 45887579695064744350438288568983904622698081512668883793020143111986962772533\nCPI3_29:\n\t.cell 50396478879115731667501023508898187513284017248092665020259100045602556503154\nCPI3_30:\n\t.cell 36364269189027265657849793126811529603360992855128991335683039462307780175956\nCPI3_33:\nCPI19_0:\n\t.cell 44106415275352249113444967718141186665599676077178725771330103259701384644257\nCPI3_34:\nCPI12_10:\nCPI13_13:\nCPI14_15:\n\t.cell 18446744073709551487\nCPI3_35:\n\t.cell 79228162532711081667253501952\nCPI3_36:\n\t.cell -1379249444374983727103743338131876140780887249151639403762952341926609438874\nCPI3_37:\n\t.cell 5070602400912917605986812821504\nCPI3_38:\nCPI9_6:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI3_39:\nCPI9_2:\nCPI10_2:\nCPI13_4:\nCPI14_6:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI3_40:\n\t.cell -53511297404191682329934120677549153675333312369007501589127433805429099226972\nCPI3_41:\nCPI8_0:\nCPI9_5:\nCPI10_3:\nCPI18_2:\n\t.cell 281474976710655\nCPI3_42:\nCPI9_3:\nCPI10_6:\nCPI13_0:\nCPI14_0:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI3_43:\nCPI9_4:\nCPI10_7:\nCPI11_4:\nCPI12_4:\nCPI13_2:\nCPI14_2:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI3_44:\n\t.cell 411376139330300049037104964736419422560851250125375309904609280\nCPI3_45:\n\t.cell -411376139330301510538742295639337626245683966408394965837152256\nCPI3_46:\n\t.cell -16905801749418125598911358881880658891597516302368944367831820423737834536085\nCPI3_47:\n\t.cell 281474976645120\nCPI3_48:\n\t.cell 16656689461315013577446926864877671087742376893865443309544100568702858035200\nCPI3_49:\nCPI10_5:\nCPI13_20:\nCPI14_4:\nCPI20_8:\n\t.cell 316912650057057350374175801344\nCPI3_50:\n\t.cell 411376139330301510538742295639337626245683966408394965837152255\nCPI3_51:\n\t.cell 38862800866400717620379257884932926128815229957387970298327282119574720616691\nCPI3_52:\n\t.cell 2535301200456458802993406410752\nCPI3_53:\n\t.cell 24885269194749830475812991193303187181597602674742320143500459090804363465101\nCPI3_54:\n\t.cell -49026240159818504903981134379649553742198394140906139455299181134923405197050\nCPI3_55:\n\t.cell 18446744073709551391\nCPI3_56:\n\t.cell -5646644308650304633673671418074907635221534582828668243198505864732812971056\nCPI3_57:\nCPI13_34:\nCPI14_35:\n\t.cell -23008135712323165285793291361946997288496412778811870996256870959443565608960\nCPI3_58:\nCPI4_2:\nCPI5_2:\nCPI6_2:\nCPI9_8:\nCPI11_10:\nCPI12_12:\nCPI13_31:\nCPI14_27:\nCPI18_7:\nCPI19_6:\nCPI20_10:\n\t.cell 2852213850513516153367582212096\nCPI3_59:\nCPI18_0:\n\t.cell 45857498783384407395167267217892383872014237107069511176979320835266024519288\nCPI3_60:\n\t.cell 18446744073709551423\nCPI3_61:\n\t.cell -36589544825516650377272014101759310010242838561916272753120378930030039529373\nCPI3_62:\nCPI4_1:\nCPI5_1:\nCPI6_1:\nCPI11_9:\nCPI12_11:\nCPI13_30:\nCPI14_26:\nCPI18_6:\nCPI19_5:\nCPI20_9:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI3_63:\nCPI10_4:\nCPI13_32:\nCPI14_34:\n\t.cell 53101767170179179614234022059546774853126925491354750665263665077259834753024\nCPI3_64:\nCPI10_8:\n\t.cell 411376139330301510538742295639337626245683966408394965837152256\nCPI3_65:\nCPI10_9:\n\t.cell 904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI3_66:\nCPI10_10:\n\t.cell -25945322668367580891504319170854679244924904783121586901380082520036406261524\nCPI3_67:\n\t.cell 47687900540987272257023881420742124550618237578713499480529411956393262448640\nCPI3_68:\n\t.cell 49931798205134128319682575132504678990741255784315358791419842096215747552364\nCPI3_69:\n\t.cell 45885773405599232487416464989104885674915664378852087144662249645329268043877\nCPI3_70:\n\t.cell 36364269189027299453766588957930272399916463196798095343972910781529072168528\nCPI3_71:\nCPI19_2:\n\t.cell 18446744073709551488\nCPI3_72:\nCPI9_7:\n\t.cell -2968852162061455530780637784344380435408102914471493733484021055401547005952\nCPI3_73:\nCPI9_9:\nCPI13_25:\nCPI14_28:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI3_74:\nCPI9_10:\nCPI13_26:\nCPI14_29:\n\t.cell 7922816251426433759354395033600\nCPI3_75:\nCPI9_11:\nCPI13_27:\nCPI14_30:\n\t.cell 38139611465464413496808039553746763673334662531416629107351575709807806513152\nCPI3_76:\nCPI9_12:\nCPI13_28:\nCPI14_31:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI3_77:\nCPI9_13:\n\t.cell -18044483450345793312606777386879205779046816849360360974261537364396935741440\nCPI4_0:\nCPI11_7:\nCPI12_7:\nCPI13_10:\nCPI14_12:\n\t.cell 18446744073709551456\nCPI5_0:\nCPI18_3:\n\t.cell 18446744073709551424\nCPI11_0:\nCPI12_0:\nCPI13_5:\nCPI14_7:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI11_2:\nCPI12_2:\nCPI13_6:\nCPI14_8:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI12_9:\nCPI13_12:\nCPI14_14:\n\t.cell 11309588061646438093662687302255421419811724423900836950936401294474059186176\nCPI13_14:\nCPI14_16:\nCPI20_0:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI13_15:\nCPI14_17:\nCPI20_2:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI13_16:\nCPI14_18:\nCPI20_3:\n\t.cell 10019309979067222254582373821846632475949454479833780424560900009889672200192\nCPI13_18:\nCPI14_20:\nCPI20_6:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI13_19:\nCPI14_21:\nCPI20_7:\n\t.cell -36003727745153843115977315250825841939871317833748553110671859368683366252544\nCPI13_21:\nCPI14_22:\nCPI20_11:\n\t.cell 34330184283879907065060116633237427963330662859944784284226023607124268941312\nCPI13_22:\nCPI14_23:\nCPI20_12:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819967\nCPI13_23:\nCPI14_24:\nCPI20_13:\n\t.cell 10141204801825835211973625643008\nCPI13_24:\nCPI14_25:\nCPI20_14:\n\t.cell -57277445299346939555017523304462417710394184523039180189118882009940632797184\nCPI13_29:\nCPI14_33:\nCPI20_15:\n\t.cell -52619634544666151247648531991310182301038485061963141803196352251815302004736\nCPI13_33:\nCPI14_32:\n\t.cell 24949152120555342893642076180256588724364794719800428814778150814029195509760\nCPI14_3:\n\t.cell -276993178125079126609077990423781266409355083808998631732833805395786989568\n","bytecode":{"object":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address,address)":"927da105","approve(address,address,uint160,uint48)":"87517c45","invalidateNonces(address,address,uint48)":"65d9723c","invalidateUnorderedNonces(uint256,uint256)":"3ff9dcb1","lockdown((address,address)[])":"cc53287f","nonceBitmap(address,uint256)":"4fe02b44","permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)":"2b67b570","permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)":"2a2d80d1","permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)":"30f28b7a","permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)":"edd9444b","permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)":"137c29fe","permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)":"fe8ec1a7","transferFrom((address,address,uint160,address)[])":"0d58b1db","transferFrom(address,address,uint160,address)":"36c78516"}},"irOptimized":"/// @use-src 2:\"src/AllowanceTransfer.sol\", 3:\"src/EIP712.sol\", 4:\"src/Permit2.sol\", 6:\"src/SignatureTransfer.sol\", 7:\"src/interfaces/IAllowanceTransfer.sol\", 10:\"src/interfaces/ISignatureTransfer.sol\"\nobject \"Permit2_1129\" {\n    code {\n        {\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            /// @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\"\n            mstore(160, /** @src 3:856:869  \"block.chainid\" */ chainid())\n            /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n            let _2 := add(_1, 0x20)\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            mstore(_2, /** @src 3:726:806  \"keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\")\" */ 0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866)\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 64), /** @src 3:654:674  \"keccak256(\\\"Permit2\\\")\" */ 0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a)\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 96), /** @src 3:856:869  \"block.chainid\" */ chainid())\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 128), /** @src 3:1614:1618  \"this\" */ address())\n            /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n            mstore(_1, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 128)\n            let newFreePtr := add(_1, /** @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\" */ 160)\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            /// @src 3:879:953  \"_CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME)\"\n            mstore(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 128, /** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _2, mload(/** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ _1)))\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            let _3 := datasize(\"Permit2_1129_deployed\")\n            codecopy(newFreePtr, dataoffset(\"Permit2_1129_deployed\"), _3)\n            setimmutable(newFreePtr, \"1026\", mload(128))\n            setimmutable(newFreePtr, \"1028\", mload(/** @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\" */ 160))\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            return(newFreePtr, _3)\n        }\n    }\n    /// @use-src 1:\"lib/solmate/src/utils/SafeTransferLib.sol\", 2:\"src/AllowanceTransfer.sol\", 3:\"src/EIP712.sol\", 4:\"src/Permit2.sol\", 6:\"src/SignatureTransfer.sol\", 11:\"src/libraries/Allowance.sol\", 13:\"src/libraries/PermitHash.sol\", 15:\"src/libraries/SignatureVerification.sol\"\n    object \"Permit2_1129_deployed\" {\n        code {\n            {\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x0d58b1db {\n                        if callvalue() { revert(_3, _3) }\n                        let _4 := 32\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        let _5 := 0xffffffffffffffff\n                        if gt(offset, _5) { revert(_3, _3) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_3, _3) }\n                        let length := calldataload(add(_2, offset))\n                        if gt(length, _5) { revert(_3, _3) }\n                        let _6 := 36\n                        let _7 := 7\n                        if gt(add(add(offset, shl(_7, length)), _6), calldatasize()) { revert(_3, _3) }\n                        /// @src 2:3089:3102  \"uint256 i = 0\"\n                        let var_i := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _3\n                        /// @src 2:3084:3333  \"for (uint256 i = 0; i < length; ++i) {...\"\n                        for { }\n                        /** @src 2:3104:3114  \"i < length\" */ lt(var_i, length)\n                        /// @src 2:3089:3102  \"uint256 i = 0\"\n                        {\n                            /// @src 2:3116:3119  \"++i\"\n                            var_i := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ add(/** @src 2:3116:3119  \"++i\" */ var_i, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 1)\n                        }\n                        /// @src 2:3116:3119  \"++i\"\n                        {\n                            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                            let _8 := add(offset, shl(_7, var_i))\n                            if slt(add(sub(calldatasize(), _8), not(35)), 0x80) { revert(_3, _3) }\n                            let memPtr := mload(_1)\n                            finalize_allocation_13074(memPtr)\n                            let _9 := abi_decode_address(add(_8, _6))\n                            mstore(memPtr, _9)\n                            let _10 := abi_decode_address(add(_8, 68))\n                            mstore(add(memPtr, _4), _10)\n                            let _11 := abi_decode_address(add(_8, 100))\n                            mstore(add(memPtr, _1), _11)\n                            let _12 := abi_decode_address(add(_8, 132))\n                            mstore(add(memPtr, 96), _12)\n                            let _13 := sub(shl(160, 1), 1)\n                            /// @src 2:3297:3317  \"transferDetail.token\"\n                            fun_transfer(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(_9, _13), and(_10, _13), and(_11, _13), and(_12, _13))\n                        }\n                        return(_3, _3)\n                    }\n                    case 0x137c29fe {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 320) { revert(_3, _3) }\n                        let value0 := abi_decode_struct_PermitTransferFrom(calldatasize())\n                        if slt(add(calldatasize(), not(131)), _1) { revert(_3, _3) }\n                        let value2 := abi_decode_address_13076()\n                        let offset_1 := calldataload(260)\n                        let _14 := 0xffffffffffffffff\n                        if gt(offset_1, _14) { revert(_3, _3) }\n                        let value4, value5 := abi_decode_string_calldata(add(_2, offset_1), calldatasize())\n                        let offset_2 := calldataload(292)\n                        if gt(offset_2, _14) { revert(_3, _3) }\n                        let value6, value7 := abi_decode_string_calldata(add(_2, offset_2), calldatasize())\n                        let memPtr_1 := mload(_1)\n                        finalize_allocation_19045(memPtr_1)\n                        mstore(memPtr_1, 100)\n                        mstore(add(memPtr_1, 32), \"PermitWitnessTransferFrom(TokenP\")\n                        mstore(add(memPtr_1, _1), \"ermissions permitted,address spe\")\n                        mstore(add(memPtr_1, 96), \"nder,uint256 nonce,uint256 deadl\")\n                        mstore(add(memPtr_1, 128), \"ine,\")\n                        /// @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\"\n                        let expr_mpos := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        /// @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\"\n                        let _15 := add(expr_mpos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 32)\n                        /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n                        let _16 := abi_encode_string(/** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ memPtr_1, _15)\n                        /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n                        calldatacopy(_16, value4, value5)\n                        let _17 := add(_16, value5)\n                        mstore(_17, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _3)\n                        /// @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\"\n                        let _18 := sub(_17, expr_mpos)\n                        let _19 := not(31)\n                        mstore(expr_mpos, add(_18, _19))\n                        finalize_allocation(expr_mpos, _18)\n                        /// @src 13:4123:4214  \"keccak256(abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString))\"\n                        let expr := keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _15, mload(/** @src 13:4123:4214  \"keccak256(abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString))\" */ expr_mpos))\n                        /// @src 13:4256:4295  \"_hashTokenPermissions(permit.permitted)\"\n                        let expr_1 := fun_hashTokenPermissions(/** @src 13:4278:4294  \"permit.permitted\" */ mload(value0))\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let _20 := mload(/** @src 13:4377:4389  \"permit.nonce\" */ add(value0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 32))\n                        let _21 := mload(/** @src 13:4391:4406  \"permit.deadline\" */ add(value0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1))\n                        /// @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\"\n                        let expr_mpos_1 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        /// @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\"\n                        let _22 := add(expr_mpos_1, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 32)\n                        /// @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\"\n                        let _23 := sub(abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32(_22, expr, expr_1, /** @src 13:4365:4375  \"msg.sender\" */ caller(), /** @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\" */ _20, _21, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ calldataload(228)), /** @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\" */ expr_mpos_1)\n                        mstore(expr_mpos_1, add(_23, /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ _19))\n                        /// @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\"\n                        finalize_allocation(expr_mpos_1, _23)\n                        /// @src 6:1636:1645  \"signature\"\n                        fun_permitTransferFrom(value0, value2, /** @src 13:4312:4417  \"keccak256(abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness))\" */ keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _22, mload(/** @src 13:4312:4417  \"keccak256(abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness))\" */ expr_mpos_1)), /** @src 6:1636:1645  \"signature\" */ value6, value7)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        return(_3, _3)\n                    }\n                    case 0x2a2d80d1 {\n                        if callvalue() { revert(_3, _3) }\n                        let _24 := 96\n                        let _25 := not(3)\n                        if slt(add(calldatasize(), _25), _24) { revert(_3, _3) }\n                        let value0_1 := abi_decode_address_13079()\n                        let _26 := 36\n                        let offset_3 := calldataload(_26)\n                        let _27 := 0xffffffffffffffff\n                        if gt(offset_3, _27) { revert(_3, _3) }\n                        if slt(add(sub(calldatasize(), offset_3), _25), _24) { revert(_3, _3) }\n                        let memPtr_2 := mload(_1)\n                        let newFreePtr := add(memPtr_2, _24)\n                        if or(gt(newFreePtr, _27), lt(newFreePtr, memPtr_2))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, _26)\n                        }\n                        mstore(_1, newFreePtr)\n                        let offset_4 := calldataload(add(_2, offset_3))\n                        if gt(offset_4, _27) { revert(_3, _3) }\n                        let _28 := add(offset_3, offset_4)\n                        if iszero(slt(add(_28, 35), calldatasize())) { revert(_3, _3) }\n                        let _29 := calldataload(add(_28, _2))\n                        let _30 := array_allocation_size_array_struct_PermitDetails_dyn(_29)\n                        let memPtr_3 := mload(_1)\n                        finalize_allocation(memPtr_3, _30)\n                        let dst := memPtr_3\n                        mstore(memPtr_3, _29)\n                        let _31 := 32\n                        dst := add(memPtr_3, _31)\n                        let srcEnd := add(add(_28, shl(7, _29)), _26)\n                        if gt(srcEnd, calldatasize()) { revert(_3, _3) }\n                        let src := add(_28, _26)\n                        for { } lt(src, srcEnd) { src := add(src, 0x80) }\n                        {\n                            if slt(sub(calldatasize(), src), 0x80) { revert(_3, _3) }\n                            let memPtr_4 := mload(_1)\n                            finalize_allocation_13074(memPtr_4)\n                            mstore(memPtr_4, abi_decode_address(src))\n                            mstore(add(memPtr_4, _31), abi_decode_address(add(src, _31)))\n                            mstore(add(memPtr_4, _1), abi_decode_uint48(add(src, _1)))\n                            mstore(add(memPtr_4, _24), abi_decode_uint48(add(src, _24)))\n                            mstore(dst, memPtr_4)\n                            dst := add(dst, _31)\n                        }\n                        mstore(memPtr_2, memPtr_3)\n                        let _32 := abi_decode_address(add(offset_3, _26))\n                        let _33 := add(memPtr_2, _31)\n                        mstore(_33, _32)\n                        let value := calldataload(add(offset_3, 68))\n                        let _34 := add(memPtr_2, _1)\n                        mstore(_34, value)\n                        let offset_5 := calldataload(68)\n                        if gt(offset_5, _27) { revert(_3, _3) }\n                        let value2_1, value3 := abi_decode_string_calldata(add(_2, offset_5), calldatasize())\n                        /// @src 2:2182:2277  \"if (block.timestamp > permitBatch.sigDeadline) revert SignatureExpired(permitBatch.sigDeadline)\"\n                        if /** @src 2:2186:2227  \"block.timestamp > permitBatch.sigDeadline\" */ gt(/** @src 2:2186:2201  \"block.timestamp\" */ timestamp(), /** @src 2:2186:2227  \"block.timestamp > permitBatch.sigDeadline\" */ value)\n                        /// @src 2:2182:2277  \"if (block.timestamp > permitBatch.sigDeadline) revert SignatureExpired(permitBatch.sigDeadline)\"\n                        {\n                            /// @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\"\n                            let _35 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                            /// @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\"\n                            mstore(_35, shl(224, 0xcd21db4f))\n                            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                            mstore(/** @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\" */ add(_35, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _2), value)\n                            /// @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\"\n                            revert(_35, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _26)\n                        }\n                        let length_1 := mload(/** @src 13:2375:2394  \"permitBatch.details\" */ mload(memPtr_2))\n                        /// @src 13:2443:2468  \"new bytes32[](numPermits)\"\n                        let expr_mpos_2 := allocate_and_zero_memory_array_array_bytes32_dyn(length_1)\n                        /// @src 13:2483:2496  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _3\n                        /// @src 13:2478:2604  \"for (uint256 i = 0; i < numPermits; ++i) {...\"\n                        for { }\n                        /** @src 13:2498:2512  \"i < numPermits\" */ lt(var_i_1, length_1)\n                        /// @src 13:2483:2496  \"uint256 i = 0\"\n                        {\n                            /// @src 13:2514:2517  \"++i\"\n                            var_i_1 := increment_uint256(var_i_1)\n                        }\n                        {\n                            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                            mstore(/** @src 13:2533:2593  \"permitHashes[i] = _hashPermitDetails(permitBatch.details[i])\" */ memory_array_index_access_struct_PermitDetails_dyn(expr_mpos_2, var_i_1), /** @src 13:2551:2593  \"_hashPermitDetails(permitBatch.details[i])\" */ fun_hashPermitDetails(/** @src 13:2570:2592  \"permitBatch.details[i]\" */ mload(memory_array_index_access_struct_PermitDetails_dyn(/** @src 13:2570:2589  \"permitBatch.details\" */ mload(memPtr_2), /** @src 13:2570:2592  \"permitBatch.details[i]\" */ var_i_1))))\n                        }\n                        /// @src 13:2721:2751  \"abi.encodePacked(permitHashes)\"\n                        let expr_mpos_3 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        /// @src 13:2721:2751  \"abi.encodePacked(permitHashes)\"\n                        let _36 := add(expr_mpos_3, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _31)\n                        /// @src 13:2721:2751  \"abi.encodePacked(permitHashes)\"\n                        let _37 := sub(/** @src 13:661:834  \"keccak256(...\" */ abi_encode_array_bytes32_dyn(/** @src 13:2721:2751  \"abi.encodePacked(permitHashes)\" */ expr_mpos_2, _36), expr_mpos_3)\n                        mstore(expr_mpos_3, add(_37, /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ not(31)))\n                        /// @src 13:2721:2751  \"abi.encodePacked(permitHashes)\"\n                        finalize_allocation(expr_mpos_3, _37)\n                        /// @src 13:2711:2752  \"keccak256(abi.encodePacked(permitHashes))\"\n                        let expr_2 := keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _36, mload(/** @src 13:2711:2752  \"keccak256(abi.encodePacked(permitHashes))\" */ expr_mpos_3))\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let _38 := sub(shl(160, 1), 1)\n                        let cleaned := and(mload(/** @src 13:2770:2789  \"permitBatch.spender\" */ _33), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _38)\n                        let _39 := mload(/** @src 13:2807:2830  \"permitBatch.sigDeadline\" */ _34)\n                        /// @src 13:2643:2844  \"abi.encode(...\"\n                        let expr_mpos_4 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        /// @src 13:2643:2844  \"abi.encode(...\"\n                        let _40 := add(expr_mpos_4, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _31)\n                        mstore(_40, /** @src 13:661:834  \"keccak256(...\" */ 0xaf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2643:2844  \"abi.encode(...\" */ expr_mpos_4, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1), expr_2)\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2643:2844  \"abi.encode(...\" */ expr_mpos_4, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _24), cleaned)\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2643:2844  \"abi.encode(...\" */ expr_mpos_4, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x80), _39)\n                        /// @src 13:2643:2844  \"abi.encode(...\"\n                        mstore(expr_mpos_4, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x80)\n                        /// @src 13:2643:2844  \"abi.encode(...\"\n                        finalize_allocation_19045(expr_mpos_4)\n                        /// @src 2:2398:2403  \"owner\"\n                        fun_verify(value2_1, value3, /** @src 2:2362:2396  \"_hashTypedData(permitBatch.hash())\" */ fun_hashTypedData(/** @src 13:2620:2854  \"keccak256(...\" */ keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _40, mload(/** @src 13:2620:2854  \"keccak256(...\" */ expr_mpos_4))), /** @src 2:2398:2403  \"owner\" */ value0_1)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let cleaned_1 := and(mload(/** @src 2:2433:2452  \"permitBatch.spender\" */ _33), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _38)\n                        let length_2 := mload(/** @src 2:2503:2522  \"permitBatch.details\" */ mload(memPtr_2))\n                        /// @src 2:2548:2561  \"uint256 i = 0\"\n                        let var_i_2 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _3\n                        /// @src 2:2543:2668  \"for (uint256 i = 0; i < length; ++i) {...\"\n                        for { }\n                        /** @src 2:2563:2573  \"i < length\" */ lt(var_i_2, length_2)\n                        /// @src 2:2548:2561  \"uint256 i = 0\"\n                        {\n                            /// @src 2:2575:2578  \"++i\"\n                            var_i_2 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ add(/** @src 2:2575:2578  \"++i\" */ var_i_2, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 1)\n                        }\n                        /// @src 2:2575:2578  \"++i\"\n                        {\n                            /// @src 2:2645:2652  \"spender\"\n                            fun_updateApproval(/** @src 2:2614:2636  \"permitBatch.details[i]\" */ mload(memory_array_index_access_struct_PermitDetails_dyn(/** @src 2:2614:2633  \"permitBatch.details\" */ mload(memPtr_2), /** @src 2:2614:2636  \"permitBatch.details[i]\" */ var_i_2)), /** @src 2:2645:2652  \"spender\" */ value0_1, cleaned_1)\n                        }\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        return(_3, _3)\n                    }\n                    case 0x2b67b570 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 256) { revert(_3, _3) }\n                        let value0_2 := abi_decode_address_13079()\n                        let _41 := add(calldatasize(), not(35))\n                        if slt(_41, 0xc0) { revert(_3, _3) }\n                        let memPtr_5 := mload(_1)\n                        finalize_allocation_13082(memPtr_5)\n                        if slt(_41, 0x80) { revert(_3, _3) }\n                        let memPtr_6 := mload(_1)\n                        finalize_allocation_13074(memPtr_6)\n                        let value_1 := calldataload(36)\n                        let _42 := sub(shl(160, 1), 1)\n                        if iszero(eq(value_1, and(value_1, _42))) { revert(_3, _3) }\n                        mstore(memPtr_6, value_1)\n                        let value_2 := calldataload(68)\n                        if iszero(eq(value_2, and(value_2, _42))) { revert(_3, _3) }\n                        mstore(add(memPtr_6, 32), value_2)\n                        let value_3 := calldataload(100)\n                        let _43 := 0xffffffffffff\n                        if iszero(eq(value_3, and(value_3, _43))) { revert(_3, _3) }\n                        mstore(add(memPtr_6, _1), value_3)\n                        let value_4 := calldataload(132)\n                        if iszero(eq(value_4, and(value_4, _43))) { revert(_3, _3) }\n                        mstore(add(memPtr_6, 96), value_4)\n                        mstore(memPtr_5, memPtr_6)\n                        let value_5 := calldataload(164)\n                        if iszero(eq(value_5, and(value_5, _42))) { revert(_3, _3) }\n                        let _44 := add(memPtr_5, 32)\n                        mstore(_44, value_5)\n                        let value_6 := calldataload(196)\n                        let _45 := add(memPtr_5, _1)\n                        mstore(_45, value_6)\n                        let offset_6 := calldataload(228)\n                        if gt(offset_6, 0xffffffffffffffff) { revert(_3, _3) }\n                        let value2_2, value3_1 := abi_decode_string_calldata(add(_2, offset_6), calldatasize())\n                        /// @src 2:1720:1817  \"if (block.timestamp > permitSingle.sigDeadline) revert SignatureExpired(permitSingle.sigDeadline)\"\n                        if /** @src 2:1724:1766  \"block.timestamp > permitSingle.sigDeadline\" */ gt(/** @src 2:1724:1739  \"block.timestamp\" */ timestamp(), /** @src 2:1724:1766  \"block.timestamp > permitSingle.sigDeadline\" */ value_6)\n                        /// @src 2:1720:1817  \"if (block.timestamp > permitSingle.sigDeadline) revert SignatureExpired(permitSingle.sigDeadline)\"\n                        {\n                            /// @src 2:1775:1817  \"SignatureExpired(permitSingle.sigDeadline)\"\n                            let _46 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                            /// @src 2:1775:1817  \"SignatureExpired(permitSingle.sigDeadline)\"\n                            mstore(_46, /** @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\" */ shl(224, 0xcd21db4f))\n                            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                            mstore(/** @src 2:1775:1817  \"SignatureExpired(permitSingle.sigDeadline)\" */ add(_46, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _2), value_6)\n                            /// @src 2:1775:1817  \"SignatureExpired(permitSingle.sigDeadline)\"\n                            revert(_46, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 36)\n                        }\n                        /// @src 13:2059:2099  \"_hashPermitDetails(permitSingle.details)\"\n                        let expr_3 := fun_hashPermitDetails(/** @src 13:2078:2098  \"permitSingle.details\" */ mload(memPtr_5))\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let cleaned_2 := and(mload(/** @src 13:2186:2206  \"permitSingle.spender\" */ _44), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _42)\n                        let _47 := mload(/** @src 13:2208:2232  \"permitSingle.sigDeadline\" */ _45)\n                        /// @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\"\n                        let expr_mpos_5 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        /// @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\"\n                        let _48 := add(expr_mpos_5, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 32)\n                        mstore(_48, /** @src 13:433:605  \"keccak256(...\" */ 0xf3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\" */ expr_mpos_5, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1), expr_3)\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\" */ expr_mpos_5, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 96), cleaned_2)\n                        mstore(/** @src 13:433:605  \"keccak256(...\" */ add(/** @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\" */ expr_mpos_5, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x80), _47)\n                        /// @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\"\n                        mstore(expr_mpos_5, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x80)\n                        /// @src 13:2138:2233  \"abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline)\"\n                        finalize_allocation_19045(expr_mpos_5)\n                        /// @src 2:1939:1944  \"owner\"\n                        fun_verify(value2_2, value3_1, /** @src 2:1902:1937  \"_hashTypedData(permitSingle.hash())\" */ fun_hashTypedData(/** @src 13:2128:2234  \"keccak256(abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline))\" */ keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _48, mload(/** @src 13:2128:2234  \"keccak256(abi.encode(_PERMIT_SINGLE_TYPEHASH, permitHash, permitSingle.spender, permitSingle.sigDeadline))\" */ expr_mpos_5))), /** @src 2:1939:1944  \"owner\" */ value0_2)\n                        /// @src 2:1972:1992  \"permitSingle.details\"\n                        let _mpos := mload(memPtr_5)\n                        /// @src 2:2001:2021  \"permitSingle.spender\"\n                        fun_updateApproval(_mpos, value0_2, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(mload(/** @src 2:2001:2021  \"permitSingle.spender\" */ _44), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _42))\n                        return(_3, _3)\n                    }\n                    case 0x30f28b7a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 256) { revert(_3, _3) }\n                        let value0_3 := abi_decode_struct_PermitTransferFrom(calldatasize())\n                        if slt(add(calldatasize(), not(131)), _1) { revert(_3, _3) }\n                        let value2_3 := abi_decode_address_13076()\n                        let offset_7 := calldataload(228)\n                        if gt(offset_7, 0xffffffffffffffff) { revert(_3, _3) }\n                        let value3_2, value4_1 := abi_decode_string_calldata(add(_2, offset_7), calldatasize())\n                        /// @src 13:3007:3046  \"_hashTokenPermissions(permit.permitted)\"\n                        let expr_4 := fun_hashTokenPermissions(/** @src 13:3029:3045  \"permit.permitted\" */ mload(value0_3))\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let _49 := mload(/** @src 13:3163:3175  \"permit.nonce\" */ add(value0_3, 32))\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let _50 := mload(/** @src 13:3177:3192  \"permit.deadline\" */ add(value0_3, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1))\n                        /// @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\"\n                        let expr_mpos_6 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        /// @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\"\n                        let _51 := add(expr_mpos_6, /** @src 13:3163:3175  \"permit.nonce\" */ 32)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(_51, /** @src 13:1018:1184  \"keccak256(...\" */ 0x939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\" */ expr_mpos_6, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1), expr_4)\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\" */ expr_mpos_6, /** @src 13:1018:1184  \"keccak256(...\" */ 96), /** @src 13:3151:3161  \"msg.sender\" */ caller())\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\" */ expr_mpos_6, /** @src 13:1018:1184  \"keccak256(...\" */ 128), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _49)\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\" */ expr_mpos_6, /** @src 13:1018:1184  \"keccak256(...\" */ 160), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _50)\n                        /// @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\"\n                        mstore(expr_mpos_6, /** @src 13:1018:1184  \"keccak256(...\" */ 160)\n                        /// @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\"\n                        finalize_allocation_21849(expr_mpos_6)\n                        /// @src 6:1171:1180  \"signature\"\n                        fun_permitTransferFrom(value0_3, value2_3, /** @src 13:3063:3203  \"keccak256(...\" */ keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _51, mload(/** @src 13:3063:3203  \"keccak256(...\" */ expr_mpos_6)), /** @src 6:1171:1180  \"signature\" */ value3_2, value4_1)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        return(_3, _3)\n                    }\n                    case 0x3644e515 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let ret := fun_DOMAIN_SEPARATOR()\n                        let memPos := mload(_1)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    case 0x36c78516 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_3, _3) }\n                        let value0_4 := abi_decode_address_13079()\n                        let value1 := abi_decode_address_13090()\n                        let value2_4 := abi_decode_address_13103()\n                        let value_7 := calldataload(100)\n                        if iszero(eq(value_7, and(value_7, sub(shl(160, 1), 1)))) { revert(_3, _3) }\n                        /// @src 2:2855:2860  \"token\"\n                        fun_transfer(value0_4, value1, value2_4, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ value_7)\n                        return(_3, _3)\n                    }\n                    case 0x3ff9dcb1 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value_8 := calldataload(_2)\n                        let value_9 := calldataload(36)\n                        mstore(_3, /** @src 6:5438:5448  \"msg.sender\" */ caller())\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(32, _3)\n                        let dataSlot := keccak256(_3, _1)\n                        mstore(_3, value_8)\n                        mstore(32, dataSlot)\n                        let dataSlot_1 := keccak256(_3, _1)\n                        sstore(dataSlot_1, /** @src 6:5426:5466  \"nonceBitmap[msg.sender][wordPos] |= mask\" */ or(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ sload(/** @src 6:5426:5466  \"nonceBitmap[msg.sender][wordPos] |= mask\" */ dataSlot_1), value_9))\n                        /// @src 6:5482:5535  \"UnorderedNonceInvalidation(msg.sender, wordPos, mask)\"\n                        let _52 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        mstore(_52, value_8)\n                        mstore(add(_52, 32), value_9)\n                        /// @src 6:5482:5535  \"UnorderedNonceInvalidation(msg.sender, wordPos, mask)\"\n                        log2(_52, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1, /** @src 6:5482:5535  \"UnorderedNonceInvalidation(msg.sender, wordPos, mask)\" */ 0x3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d, /** @src 6:5438:5448  \"msg.sender\" */ caller())\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        return(_3, _3)\n                    }\n                    case 0x4fe02b44 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address_13079(), sub(shl(160, 1), 1)))\n                        mstore(32, _3)\n                        let dataSlot_2 := keccak256(_3, _1)\n                        mstore(_3, calldataload(36))\n                        mstore(32, dataSlot_2)\n                        let _53 := sload(keccak256(_3, _1))\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, _53)\n                        return(memPos_1, 32)\n                    }\n                    case 0x65d9723c {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0_5 := abi_decode_address_13079()\n                        let value1_1 := abi_decode_address_13090()\n                        let value_10 := calldataload(68)\n                        let _54 := 0xffffffffffff\n                        let _55 := and(value_10, _54)\n                        if iszero(eq(value_10, _55)) { revert(_3, _3) }\n                        mstore(_3, /** @src 2:4987:4997  \"msg.sender\" */ caller())\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let _56 := 32\n                        mstore(_56, /** @src 2:4977:4986  \"allowance\" */ 0x01)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let _57 := keccak256(_3, _1)\n                        let _58 := sub(shl(160, 1), 1)\n                        let _59 := and(value0_5, _58)\n                        mstore(_3, _59)\n                        mstore(_56, _57)\n                        let dataSlot_3 := keccak256(_3, _1)\n                        let _60 := and(value1_1, _58)\n                        mstore(_3, _60)\n                        mstore(_56, dataSlot_3)\n                        let _61 := shr(208, sload(keccak256(_3, _1)))\n                        /// @src 2:5031:5078  \"if (newNonce <= oldNonce) revert InvalidNonce()\"\n                        if /** @src 2:5035:5055  \"newNonce <= oldNonce\" */ iszero(gt(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _55, _61))\n                        /// @src 2:5031:5078  \"if (newNonce <= oldNonce) revert InvalidNonce()\"\n                        {\n                            /// @src 2:5064:5078  \"InvalidNonce()\"\n                            let _62 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                            /// @src 2:5064:5078  \"InvalidNonce()\"\n                            mstore(_62, shl(225, 0x3ab3447f))\n                            revert(_62, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _2)\n                        }\n                        /// @src 2:5243:5303  \"if (delta > type(uint16).max) revert ExcessiveInvalidation()\"\n                        if /** @src 2:5247:5271  \"delta > type(uint16).max\" */ gt(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(sub(/** @src 2:5210:5229  \"newNonce - oldNonce\" */ value_10, _61), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _54), 0xffff)\n                        /// @src 2:5243:5303  \"if (delta > type(uint16).max) revert ExcessiveInvalidation()\"\n                        {\n                            /// @src 2:5280:5303  \"ExcessiveInvalidation()\"\n                            let _63 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                            /// @src 2:5280:5303  \"ExcessiveInvalidation()\"\n                            mstore(_63, shl(225, 0x1269ad13))\n                            revert(_63, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _2)\n                        }\n                        mstore(_3, /** @src 2:4987:4997  \"msg.sender\" */ caller())\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(_56, /** @src 2:4977:4986  \"allowance\" */ 0x01)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let _64 := keccak256(_3, _1)\n                        mstore(_3, _59)\n                        mstore(_56, _64)\n                        let dataSlot_4 := keccak256(_3, _1)\n                        mstore(_3, _60)\n                        mstore(_56, dataSlot_4)\n                        let dataSlot_5 := keccak256(_3, _1)\n                        let _65 := sload(dataSlot_5)\n                        sstore(dataSlot_5, or(and(_65, sub(shl(208, 1), 1)), and(shl(208, /** @src 2:5035:5055  \"newNonce <= oldNonce\" */ value_10), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shl(208, 0xffffffffffff))))\n                        /// @src 2:5393:5458  \"NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce)\"\n                        let _66 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        mstore(_66, _55)\n                        mstore(add(_66, _56), _61)\n                        /// @src 2:5393:5458  \"NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce)\"\n                        log4(_66, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1, /** @src 2:5393:5458  \"NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce)\" */ 0x55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f3, /** @src 2:4987:4997  \"msg.sender\" */ caller(), /** @src 2:5393:5458  \"NonceInvalidation(msg.sender, token, spender, newNonce, oldNonce)\" */ _59, _60)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        return(_3, _3)\n                    }\n                    case 0x87517c45 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_3, _3) }\n                        let value0_6 := abi_decode_address_13079()\n                        let value1_2 := abi_decode_address_13090()\n                        let value2_5 := abi_decode_address_13103()\n                        let value_11 := calldataload(100)\n                        let _67 := 0xffffffffffff\n                        let _68 := and(value_11, _67)\n                        if iszero(eq(value_11, _68)) { revert(_3, _3) }\n                        mstore(_3, /** @src 2:1397:1407  \"msg.sender\" */ caller())\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(32, /** @src 2:1387:1396  \"allowance\" */ 0x01)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let _69 := keccak256(_3, _1)\n                        let _70 := sub(shl(160, 1), 1)\n                        let _71 := and(value0_6, _70)\n                        mstore(_3, _71)\n                        mstore(32, _69)\n                        let dataSlot_6 := keccak256(_3, _1)\n                        let _72 := and(value1_2, _70)\n                        mstore(_3, _72)\n                        mstore(32, dataSlot_6)\n                        let dataSlot_7 := keccak256(_3, _1)\n                        /// @src 11:1510:1564  \"expiration == 0 ? uint48(block.timestamp) : expiration\"\n                        let expr_5 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _3\n                        /// @src 11:1510:1564  \"expiration == 0 ? uint48(block.timestamp) : expiration\"\n                        switch /** @src 11:1510:1525  \"expiration == 0\" */ iszero(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _68)\n                        case /** @src 11:1510:1564  \"expiration == 0 ? uint48(block.timestamp) : expiration\" */ 0 { expr_5 := value_11 }\n                        default {\n                            expr_5 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(/** @src 11:1535:1550  \"block.timestamp\" */ timestamp(), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _67)\n                        }\n                        let _73 := sload(dataSlot_7)\n                        let _74 := and(value2_5, _70)\n                        sstore(dataSlot_7, or(or(and(_73, shl(208, 0xffffffffffff)), and(shl(160, expr_5), shl(160, 0xffffffffffff))), _74))\n                        /// @src 2:1502:1558  \"Approval(msg.sender, token, spender, amount, expiration)\"\n                        let _75 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        mstore(_75, _74)\n                        mstore(add(_75, 32), _68)\n                        /// @src 2:1502:1558  \"Approval(msg.sender, token, spender, amount, expiration)\"\n                        log4(_75, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1, /** @src 2:1502:1558  \"Approval(msg.sender, token, spender, amount, expiration)\" */ 0xda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b, /** @src 2:1397:1407  \"msg.sender\" */ caller(), /** @src 2:1502:1558  \"Approval(msg.sender, token, spender, amount, expiration)\" */ _71, _72)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        return(_3, _3)\n                    }\n                    case 0x927da105 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0_7 := abi_decode_address_13079()\n                        let value1_3 := abi_decode_address_13090()\n                        let value2_6 := abi_decode_address_13103()\n                        let _76 := sub(shl(160, 1), 1)\n                        mstore(_3, and(value0_7, _76))\n                        mstore(32, /** @src 2:1112:1204  \"mapping(address => mapping(address => mapping(address => PackedAllowance))) public allowance\" */ 1)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let _77 := keccak256(_3, _1)\n                        mstore(_3, and(value1_3, _76))\n                        mstore(32, _77)\n                        let dataSlot_8 := keccak256(_3, _1)\n                        mstore(_3, and(value2_6, _76))\n                        mstore(32, dataSlot_8)\n                        let _78 := sload(keccak256(_3, _1))\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint160_uint48_uint48(memPos_2, and(_78, _76), and(shr(160, _78), 0xffffffffffff), shr(208, _78)), memPos_2))\n                    }\n                    case 0xcc53287f {\n                        if callvalue() { revert(_3, _3) }\n                        let _79 := 32\n                        if slt(add(calldatasize(), not(3)), _79) { revert(_3, _3) }\n                        let offset_8 := calldataload(_2)\n                        if gt(offset_8, 0xffffffffffffffff) { revert(_3, _3) }\n                        let value0_8, value1_4 := abi_decode_array_struct_TokenSpenderPair_calldata_dyn_calldata(add(_2, offset_8), calldatasize())\n                        /// @src 2:4533:4546  \"uint256 i = 0\"\n                        let var_i_3 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _3\n                        /// @src 2:4528:4804  \"for (uint256 i = 0; i < length; ++i) {...\"\n                        for { }\n                        /** @src 2:4548:4558  \"i < length\" */ lt(var_i_3, value1_4)\n                        /// @src 2:4533:4546  \"uint256 i = 0\"\n                        {\n                            /// @src 2:4560:4563  \"++i\"\n                            var_i_3 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ add(/** @src 2:4560:4563  \"++i\" */ var_i_3, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 1)\n                        }\n                        /// @src 2:4560:4563  \"++i\"\n                        {\n                            /// @src 2:4599:4617  \"approvals[i].token\"\n                            let expr_6 := read_from_calldatat_address(/** @src 2:4599:4611  \"approvals[i]\" */ calldata_array_index_access_struct_TokenSpenderPair_calldata_dyn_calldata(value0_8, value1_4, var_i_3))\n                            /// @src 2:4653:4673  \"approvals[i].spender\"\n                            let expr_7 := read_from_calldatat_address(add(/** @src 2:4653:4665  \"approvals[i]\" */ calldata_array_index_access_struct_TokenSpenderPair_calldata_dyn_calldata(value0_8, value1_4, var_i_3), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _79))\n                            mstore(_3, /** @src 2:4370:4380  \"msg.sender\" */ caller())\n                            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                            mstore(_79, 1)\n                            let _80 := keccak256(_3, _1)\n                            let _81 := sub(shl(160, 1), 1)\n                            let _82 := and(expr_6, _81)\n                            mstore(_3, _82)\n                            mstore(_79, _80)\n                            let dataSlot_9 := keccak256(_3, _1)\n                            let _83 := and(expr_7, _81)\n                            mstore(_3, _83)\n                            mstore(_79, dataSlot_9)\n                            let dataSlot_10 := keccak256(_3, _1)\n                            sstore(dataSlot_10, and(sload(dataSlot_10), shl(160, 0xffffffffffffffffffffffff)))\n                            /// @src 2:4758:4789  \"Lockdown(owner, token, spender)\"\n                            let _84 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                            mstore(_84, _82)\n                            mstore(add(_84, _79), _83)\n                            /// @src 2:4758:4789  \"Lockdown(owner, token, spender)\"\n                            log2(_84, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1, /** @src 2:4758:4789  \"Lockdown(owner, token, spender)\" */ 0x89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4, /** @src 2:4370:4380  \"msg.sender\" */ caller())\n                        }\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        return(_3, _3)\n                    }\n                    case 0xedd9444b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_3, _3) }\n                        let offset_9 := calldataload(_2)\n                        let _85 := 0xffffffffffffffff\n                        if gt(offset_9, _85) { revert(_3, _3) }\n                        let value0_9 := abi_decode_struct_PermitBatchTransferFrom(add(_2, offset_9), calldatasize())\n                        let offset_10 := calldataload(36)\n                        if gt(offset_10, _85) { revert(_3, _3) }\n                        let value1_5, value2_7 := abi_decode_array_struct_TokenSpenderPair_calldata_dyn_calldata(add(_2, offset_10), calldatasize())\n                        let value3_3 := abi_decode_address_13103()\n                        let offset_11 := calldataload(100)\n                        if gt(offset_11, _85) { revert(_3, _3) }\n                        let value4_2, value5_1 := abi_decode_string_calldata(add(_2, offset_11), calldatasize())\n                        let length_3 := mload(/** @src 13:3353:3369  \"permit.permitted\" */ mload(value0_9))\n                        /// @src 13:3427:3454  \"new bytes32[](numPermitted)\"\n                        let expr_mpos_7 := allocate_and_zero_memory_array_array_bytes32_dyn(length_3)\n                        /// @src 13:3470:3483  \"uint256 i = 0\"\n                        let var_i_4 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _3\n                        /// @src 13:3465:3602  \"for (uint256 i = 0; i < numPermitted; ++i) {...\"\n                        for { }\n                        /** @src 13:3485:3501  \"i < numPermitted\" */ lt(var_i_4, length_3)\n                        /// @src 13:3470:3483  \"uint256 i = 0\"\n                        {\n                            /// @src 13:3503:3506  \"++i\"\n                            var_i_4 := increment_uint256(var_i_4)\n                        }\n                        {\n                            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                            mstore(/** @src 13:3522:3591  \"tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i])\" */ memory_array_index_access_struct_PermitDetails_dyn(expr_mpos_7, var_i_4), /** @src 13:3549:3591  \"_hashTokenPermissions(permit.permitted[i])\" */ fun_hashTokenPermissions(/** @src 13:3571:3590  \"permit.permitted[i]\" */ mload(memory_array_index_access_struct_PermitDetails_dyn(/** @src 13:3571:3587  \"permit.permitted\" */ mload(value0_9), /** @src 13:3571:3590  \"permit.permitted[i]\" */ var_i_4))))\n                        }\n                        /// @src 13:3734:3773  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let expr_mpos_8 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        /// @src 13:3734:3773  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let _86 := add(expr_mpos_8, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 32)\n                        /// @src 13:3734:3773  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let _87 := sub(/** @src 13:661:834  \"keccak256(...\" */ abi_encode_array_bytes32_dyn(/** @src 13:3734:3773  \"abi.encodePacked(tokenPermissionHashes)\" */ expr_mpos_7, _86), expr_mpos_8)\n                        mstore(expr_mpos_8, add(_87, /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ not(31)))\n                        /// @src 13:3734:3773  \"abi.encodePacked(tokenPermissionHashes)\"\n                        finalize_allocation(expr_mpos_8, _87)\n                        /// @src 13:3724:3774  \"keccak256(abi.encodePacked(tokenPermissionHashes))\"\n                        let expr_8 := keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _86, mload(/** @src 13:3724:3774  \"keccak256(abi.encodePacked(tokenPermissionHashes))\" */ expr_mpos_8))\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let _88 := mload(/** @src 13:3820:3832  \"permit.nonce\" */ add(value0_9, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 32))\n                        let _89 := mload(/** @src 13:3850:3865  \"permit.deadline\" */ add(value0_9, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1))\n                        /// @src 13:3642:3879  \"abi.encode(...\"\n                        let expr_mpos_9 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        /// @src 13:3642:3879  \"abi.encode(...\"\n                        let _90 := add(expr_mpos_9, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 32)\n                        mstore(_90, /** @src 13:1254:1427  \"keccak256(...\" */ 0xfcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3642:3879  \"abi.encode(...\" */ expr_mpos_9, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1), expr_8)\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3642:3879  \"abi.encode(...\" */ expr_mpos_9, /** @src 13:1018:1184  \"keccak256(...\" */ 96), /** @src 13:3792:3802  \"msg.sender\" */ caller())\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3642:3879  \"abi.encode(...\" */ expr_mpos_9, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 128), _88)\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3642:3879  \"abi.encode(...\" */ expr_mpos_9, /** @src 13:1018:1184  \"keccak256(...\" */ 160), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _89)\n                        /// @src 13:3642:3879  \"abi.encode(...\"\n                        mstore(expr_mpos_9, /** @src 13:1018:1184  \"keccak256(...\" */ 160)\n                        /// @src 13:3642:3879  \"abi.encode(...\"\n                        finalize_allocation_21849(expr_mpos_9)\n                        /// @src 6:3199:3208  \"signature\"\n                        fun__permitTransferFrom(value0_9, value1_5, value2_7, value3_3, /** @src 13:3619:3889  \"keccak256(...\" */ keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _90, mload(/** @src 13:3619:3889  \"keccak256(...\" */ expr_mpos_9)), /** @src 6:3199:3208  \"signature\" */ value4_2, value5_1)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        return(_3, _3)\n                    }\n                    case 0xfe8ec1a7 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 192) { revert(_3, _3) }\n                        let offset_12 := calldataload(_2)\n                        let _91 := 0xffffffffffffffff\n                        if gt(offset_12, _91) { revert(_3, _3) }\n                        let value0_10 := abi_decode_struct_PermitBatchTransferFrom(add(_2, offset_12), calldatasize())\n                        let offset_13 := calldataload(36)\n                        if gt(offset_13, _91) { revert(_3, _3) }\n                        let value1_6, value2_8 := abi_decode_array_struct_TokenSpenderPair_calldata_dyn_calldata(add(_2, offset_13), calldatasize())\n                        let value3_4 := abi_decode_address_13103()\n                        let offset_14 := calldataload(132)\n                        if gt(offset_14, _91) { revert(_3, _3) }\n                        let value5_2, value6_1 := abi_decode_string_calldata(add(_2, offset_14), calldatasize())\n                        let offset_15 := calldataload(164)\n                        if gt(offset_15, _91) { revert(_3, _3) }\n                        let value7_1, value8 := abi_decode_string_calldata(add(_2, offset_15), calldatasize())\n                        let memPtr_7 := mload(_1)\n                        finalize_allocation_19045(memPtr_7)\n                        mstore(memPtr_7, 107)\n                        mstore(add(memPtr_7, 32), \"PermitBatchWitnessTransferFrom(T\")\n                        mstore(add(memPtr_7, _1), \"okenPermissions[] permitted,addr\")\n                        mstore(add(memPtr_7, 96), \"ess spender,uint256 nonce,uint25\")\n                        mstore(add(memPtr_7, 128), \"6 deadline,\")\n                        /// @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\"\n                        let expr_mpos_10 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        /// @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\"\n                        let _92 := add(expr_mpos_10, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 32)\n                        /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n                        let _93 := abi_encode_string(/** @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\" */ memPtr_7, _92)\n                        /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n                        calldatacopy(_93, value5_2, value6_1)\n                        let _94 := add(_93, value6_1)\n                        mstore(_94, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _3)\n                        /// @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\"\n                        let _95 := sub(_94, expr_mpos_10)\n                        let _96 := /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ not(31)\n                        /// @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\"\n                        mstore(expr_mpos_10, add(_95, _96))\n                        finalize_allocation(expr_mpos_10, _95)\n                        /// @src 13:4668:4765  \"keccak256(abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString))\"\n                        let expr_9 := keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _92, mload(/** @src 13:4668:4765  \"keccak256(abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString))\" */ expr_mpos_10))\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let length_4 := mload(/** @src 13:4799:4815  \"permit.permitted\" */ mload(value0_10))\n                        /// @src 13:4873:4900  \"new bytes32[](numPermitted)\"\n                        let expr_mpos_11 := allocate_and_zero_memory_array_array_bytes32_dyn(length_4)\n                        /// @src 13:4916:4929  \"uint256 i = 0\"\n                        let var_i_5 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _3\n                        /// @src 13:4911:5048  \"for (uint256 i = 0; i < numPermitted; ++i) {...\"\n                        for { }\n                        /** @src 13:4931:4947  \"i < numPermitted\" */ lt(var_i_5, length_4)\n                        /// @src 13:4916:4929  \"uint256 i = 0\"\n                        {\n                            /// @src 13:4949:4952  \"++i\"\n                            var_i_5 := increment_uint256(var_i_5)\n                        }\n                        {\n                            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                            mstore(/** @src 13:4968:5037  \"tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i])\" */ memory_array_index_access_struct_PermitDetails_dyn(expr_mpos_11, var_i_5), /** @src 13:4995:5037  \"_hashTokenPermissions(permit.permitted[i])\" */ fun_hashTokenPermissions(/** @src 13:5017:5036  \"permit.permitted[i]\" */ mload(memory_array_index_access_struct_PermitDetails_dyn(/** @src 13:5017:5033  \"permit.permitted\" */ mload(value0_10), /** @src 13:5017:5036  \"permit.permitted[i]\" */ var_i_5))))\n                        }\n                        /// @src 13:5152:5191  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let expr_mpos_12 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        /// @src 13:5152:5191  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let _97 := add(expr_mpos_12, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 32)\n                        /// @src 13:5152:5191  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let _98 := sub(/** @src 13:661:834  \"keccak256(...\" */ abi_encode_array_bytes32_dyn(/** @src 13:5152:5191  \"abi.encodePacked(tokenPermissionHashes)\" */ expr_mpos_11, _97), expr_mpos_12)\n                        mstore(expr_mpos_12, add(_98, /** @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\" */ _96))\n                        /// @src 13:5152:5191  \"abi.encodePacked(tokenPermissionHashes)\"\n                        finalize_allocation(expr_mpos_12, _98)\n                        /// @src 13:5142:5192  \"keccak256(abi.encodePacked(tokenPermissionHashes))\"\n                        let expr_10 := keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _97, mload(/** @src 13:5142:5192  \"keccak256(abi.encodePacked(tokenPermissionHashes))\" */ expr_mpos_12))\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let _99 := mload(/** @src 13:5238:5250  \"permit.nonce\" */ add(value0_10, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 32))\n                        let _100 := mload(/** @src 13:5268:5283  \"permit.deadline\" */ add(value0_10, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1))\n                        /// @src 13:5088:5322  \"abi.encode(...\"\n                        let expr_mpos_13 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(_1)\n                        /// @src 13:5088:5322  \"abi.encode(...\"\n                        let _101 := add(expr_mpos_13, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 32)\n                        /// @src 13:5088:5322  \"abi.encode(...\"\n                        let _102 := sub(abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32(_101, expr_9, expr_10, /** @src 13:5210:5220  \"msg.sender\" */ caller(), /** @src 13:5088:5322  \"abi.encode(...\" */ _99, _100, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ calldataload(100)), /** @src 13:5088:5322  \"abi.encode(...\" */ expr_mpos_13)\n                        mstore(expr_mpos_13, add(_102, /** @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\" */ _96))\n                        /// @src 13:5088:5322  \"abi.encode(...\"\n                        finalize_allocation(expr_mpos_13, _102)\n                        /// @src 6:3671:3680  \"signature\"\n                        fun__permitTransferFrom(value0_10, value1_6, value2_8, value3_4, /** @src 13:5065:5332  \"keccak256(...\" */ keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _101, mload(/** @src 13:5065:5332  \"keccak256(...\" */ expr_mpos_13)), /** @src 6:3671:3680  \"signature\" */ value7_1, value8)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        return(_3, _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation_13074(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x80)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_13082(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x60)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_19045(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_19052(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_21849(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 13:1018:1184  \"keccak256(...\" */ 192)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ not(31)))\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_address_13076() -> value\n            {\n                value := calldataload(196)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_13079() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_13090() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_13103() -> value\n            {\n                value := calldataload(68)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_struct_PermitTransferFrom(end) -> value\n            {\n                let _1 := add(end, not(3))\n                if slt(_1, 0x80) { revert(0, 0) }\n                let _2 := 64\n                let memPtr := mload(_2)\n                finalize_allocation_13082(memPtr)\n                value := memPtr\n                if slt(_1, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let memPtr_1 := mload(_2)\n                let newFreePtr := add(memPtr_1, _2)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x24)\n                }\n                mstore(_2, newFreePtr)\n                let value_1 := calldataload(4)\n                if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                mstore(memPtr_1, value_1)\n                mstore(add(memPtr_1, 32), calldataload(36))\n                mstore(memPtr, memPtr_1)\n                mstore(add(memPtr, 32), calldataload(68))\n                mstore(add(memPtr, _2), calldataload(100))\n            }\n            function abi_decode_string_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function array_allocation_size_array_struct_PermitDetails_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_uint48(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, and(value, 0xffffffffffff))) { revert(0, 0) }\n            }\n            function abi_encode_uint160_uint48_uint48(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                let _1 := 0xffffffffffff\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), and(value2, _1))\n            }\n            function abi_decode_array_struct_TokenSpenderPair_calldata_dyn_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, shl(6, length)), 0x20), end) { revert(0, 0) }\n            }\n            function abi_decode_struct_PermitBatchTransferFrom(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0x60) { revert(0, 0) }\n                let _1 := 64\n                let memPtr := mload(_1)\n                finalize_allocation_13082(memPtr)\n                value := memPtr\n                let offset := calldataload(headStart)\n                let _2 := 0xffffffffffffffff\n                if gt(offset, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _3 := add(headStart, offset)\n                if iszero(slt(add(_3, 0x1f), end))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _4 := calldataload(_3)\n                let _5 := 0x20\n                let _6 := array_allocation_size_array_struct_PermitDetails_dyn(_4)\n                let memPtr_1 := mload(_1)\n                finalize_allocation(memPtr_1, _6)\n                let dst := memPtr_1\n                mstore(memPtr_1, _4)\n                dst := add(memPtr_1, _5)\n                let srcEnd := add(add(_3, shl(6, _4)), _5)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let src := add(_3, _5)\n                for { } lt(src, srcEnd) { src := add(src, _1) }\n                {\n                    if slt(sub(end, src), _1)\n                    {\n                        /// @src -1:-1:-1\n                        let _7 := 0\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        revert(/** @src -1:-1:-1 */ _7, _7)\n                    }\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    let memPtr_2 := mload(_1)\n                    let newFreePtr := add(memPtr_2, _1)\n                    if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr_2))\n                    {\n                        /// @src -1:-1:-1\n                        let _8 := 0\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(/** @src -1:-1:-1 */ _8, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ _8, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x24)\n                    }\n                    mstore(_1, newFreePtr)\n                    mstore(memPtr_2, abi_decode_address(src))\n                    mstore(add(memPtr_2, _5), calldataload(add(src, _5)))\n                    mstore(dst, memPtr_2)\n                    dst := add(dst, _5)\n                }\n                mstore(memPtr, memPtr_1)\n                mstore(add(memPtr, _5), calldataload(add(headStart, _5)))\n                mstore(add(memPtr, _1), calldataload(add(headStart, _1)))\n            }\n            function memory_array_index_access_struct_PermitDetails_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @ast-id 820 @src 2:3496:4233  \"function _transfer(address from, address to, uint160 amount, address token) private {...\"\n            function fun_transfer(var_from, var_to, var_amount, var_token)\n            {\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(var_from, _1))\n                mstore(0x20, /** @src 2:3624:3633  \"allowance\" */ 0x01)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _3 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x40)\n                let _4 := and(var_token, _1)\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _4)\n                mstore(0x20, _3)\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _2, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 2:3647:3657  \"msg.sender\" */ caller())\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                mstore(0x20, dataSlot)\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ _2, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x40)\n                let _5 := sload(/** @src 2:3691:3709  \"allowed.expiration\" */ dataSlot_1)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let value := and(shr(160, _5), 0xffffffffffff)\n                /// @src 2:3669:3754  \"if (block.timestamp > allowed.expiration) revert AllowanceExpired(allowed.expiration)\"\n                if /** @src 2:3673:3709  \"block.timestamp > allowed.expiration\" */ gt(/** @src 2:3673:3688  \"block.timestamp\" */ timestamp(), /** @src 2:3673:3709  \"block.timestamp > allowed.expiration\" */ value)\n                /// @src 2:3669:3754  \"if (block.timestamp > allowed.expiration) revert AllowanceExpired(allowed.expiration)\"\n                {\n                    /// @src 2:3718:3754  \"AllowanceExpired(allowed.expiration)\"\n                    let _6 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(0x40)\n                    /// @src 2:3718:3754  \"AllowanceExpired(allowed.expiration)\"\n                    mstore(_6, shl(225, 0x6c0d9797))\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    mstore(/** @src 2:3718:3754  \"AllowanceExpired(allowed.expiration)\" */ add(_6, 4), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ value)\n                    /// @src 2:3718:3754  \"AllowanceExpired(allowed.expiration)\"\n                    revert(_6, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 36)\n                }\n                let cleaned := and(_5, _1)\n                /// @src 2:3809:4098  \"if (maxAmount != type(uint160).max) {...\"\n                if /** @src 2:3813:3843  \"maxAmount != type(uint160).max\" */ iszero(eq(cleaned, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1))\n                /// @src 2:3809:4098  \"if (maxAmount != type(uint160).max) {...\"\n                {\n                    /// @src 2:3859:4088  \"if (amount > maxAmount) {...\"\n                    switch /** @src 2:3863:3881  \"amount > maxAmount\" */ gt(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(/** @src 2:3863:3881  \"amount > maxAmount\" */ var_amount, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1), /** @src 2:3863:3881  \"amount > maxAmount\" */ cleaned)\n                    case /** @src 2:3859:4088  \"if (amount > maxAmount) {...\" */ 0 {\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        sstore(dataSlot_1, or(and(_5, shl(160, 0xffffffffffffffffffffffff)), and(sub(cleaned, /** @src 2:4028:4055  \"uint160(maxAmount) - amount\" */ var_amount), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1)))\n                    }\n                    default /// @src 2:3859:4088  \"if (amount > maxAmount) {...\"\n                    {\n                        /// @src 2:3908:3940  \"InsufficientAllowance(maxAmount)\"\n                        let _7 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(0x40)\n                        /// @src 2:3908:3940  \"InsufficientAllowance(maxAmount)\"\n                        mstore(_7, shl(224, 0xf96fb071))\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(/** @src 2:3908:3940  \"InsufficientAllowance(maxAmount)\" */ add(_7, 4), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ cleaned)\n                        /// @src 2:3908:3940  \"InsufficientAllowance(maxAmount)\"\n                        revert(_7, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 36)\n                    }\n                }\n                /// @src 2:4179:4226  \"ERC20(token).safeTransferFrom(from, to, amount)\"\n                fun_safeTransferFrom(_4, var_from, var_to, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(/** @src 2:4179:4226  \"ERC20(token).safeTransferFrom(from, to, amount)\" */ var_amount, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1))\n            }\n            /// @ast-id 431 @src 1:1328:2944  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_token_address, var_from, var_to, var_amount)\n            {\n                /// @src 1:1532:2887  \"assembly {...\"\n                let usr$freeMemoryPointer := mload(0x40)\n                mstore(usr$freeMemoryPointer, shl(224, 0x23b872dd))\n                mstore(add(usr$freeMemoryPointer, 4), var_from)\n                mstore(add(usr$freeMemoryPointer, 36), var_to)\n                mstore(add(usr$freeMemoryPointer, 68), var_amount)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                if iszero(/** @src 1:1532:2887  \"assembly {...\" */ and(or(and(eq(mload(/** @src -1:-1:-1 */ 0), /** @src 1:1532:2887  \"assembly {...\" */ 1), gt(returndatasize(), 31)), iszero(returndatasize())), call(gas(), var_token_address, /** @src -1:-1:-1 */ 0, /** @src 1:1532:2887  \"assembly {...\" */ usr$freeMemoryPointer, 100, /** @src -1:-1:-1 */ 0, /** @src 1:1532:2887  \"assembly {...\" */ 32)))\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                {\n                    let memPtr := mload(/** @src 1:1532:2887  \"assembly {...\" */ 0x40)\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 4), 32)\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    mstore(add(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 36), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 20)\n                    mstore(add(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 68), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ \"TRANSFER_FROM_FAILED\")\n                    revert(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 100)\n                }\n            }\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            function calldata_array_index_access_struct_TokenSpenderPair_calldata_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(base_ref, shl(6, index))\n            }\n            function read_from_calldatat_address(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                returnValue := value\n            }\n            /// @ast-id 1020 @src 2:5695:6225  \"function _updateApproval(PermitDetails memory details, address owner, address spender) private {...\"\n            function fun_updateApproval(var_details_mpos, var_owner, var_spender)\n            {\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _1 := 0xffffffffffff\n                let cleaned := and(mload(/** @src 2:5815:5828  \"details.nonce\" */ add(var_details_mpos, 96)), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1)\n                let _2 := sub(shl(160, 1), 1)\n                let cleaned_1 := and(mload(/** @src 2:5854:5867  \"details.token\" */ var_details_mpos), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _2)\n                let cleaned_2 := and(mload(/** @src 2:5894:5908  \"details.amount\" */ add(var_details_mpos, 32)), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _2)\n                /// @src 2:5938:5956  \"details.expiration\"\n                let _3 := 64\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let cleaned_3 := and(mload(/** @src 2:5938:5956  \"details.expiration\" */ add(var_details_mpos, _3)), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1)\n                let _4 := and(var_owner, _2)\n                /// @src -1:-1:-1\n                let _5 := 0\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _4)\n                mstore(/** @src 2:5894:5908  \"details.amount\" */ 32, /** @src 2:6000:6009  \"allowance\" */ 0x01)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _6 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 2:5938:5956  \"details.expiration\" */ _3)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ cleaned_1)\n                mstore(/** @src 2:5894:5908  \"details.amount\" */ 32, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _6)\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _5, /** @src 2:5938:5956  \"details.expiration\" */ _3)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _7 := and(var_spender, _2)\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _7)\n                mstore(/** @src 2:5894:5908  \"details.amount\" */ 32, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ dataSlot)\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 2:5938:5956  \"details.expiration\" */ _3)\n                /// @src 2:6043:6092  \"if (allowed.nonce != nonce) revert InvalidNonce()\"\n                if /** @src 2:6047:6069  \"allowed.nonce != nonce\" */ iszero(eq(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shr(208, sload(/** @src 2:6047:6060  \"allowed.nonce\" */ dataSlot_1)), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ cleaned))\n                /// @src 2:6043:6092  \"if (allowed.nonce != nonce) revert InvalidNonce()\"\n                {\n                    /// @src 2:6078:6092  \"InvalidNonce()\"\n                    let _8 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 2:5938:5956  \"details.expiration\" */ _3)\n                    /// @src 2:6078:6092  \"InvalidNonce()\"\n                    mstore(_8, /** @src 2:5064:5078  \"InvalidNonce()\" */ shl(225, 0x3ab3447f))\n                    /// @src 2:6078:6092  \"InvalidNonce()\"\n                    revert(_8, 4)\n                }\n                /// @src 11:843:922  \"expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration\"\n                let expr := /** @src -1:-1:-1 */ _5\n                /// @src 11:843:922  \"expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration\"\n                switch /** @src 11:843:883  \"expiration == BLOCK_TIMESTAMP_EXPIRATION\" */ iszero(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ cleaned_3)\n                case /** @src 11:843:922  \"expiration == BLOCK_TIMESTAMP_EXPIRATION ? uint48(block.timestamp) : expiration\" */ 0 { expr := cleaned_3 }\n                default {\n                    expr := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(/** @src 11:893:908  \"block.timestamp\" */ timestamp(), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1)\n                }\n                /// @src 11:1001:1060  \"assembly {...\"\n                sstore(dataSlot_1, /** @src 11:1834:1895  \"(uint256(nonce) << 208) | uint256(expiration) << 160 | amount\" */ or(/** @src 11:1834:1886  \"(uint256(nonce) << 208) | uint256(expiration) << 160\" */ or(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(shl(208, add(/** @src 11:787:796  \"nonce + 1\" */ cleaned, /** @src 2:6000:6009  \"allowance\" */ 0x01)), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shl(208, 0xffffffffffff)), and(shl(/** @src 11:1883:1886  \"160\" */ 0xa0, /** @src 11:1860:1879  \"uint256(expiration)\" */ expr), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shl(160, 0xffffffffffff))), cleaned_2))\n                /// @src 2:6162:6218  \"Permit(owner, token, spender, amount, expiration, nonce)\"\n                let _9 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 2:5938:5956  \"details.expiration\" */ _3)\n                /// @src 2:6162:6218  \"Permit(owner, token, spender, amount, expiration, nonce)\"\n                log4(_9, sub(abi_encode_uint160_uint48_uint48(_9, cleaned_2, cleaned_3, cleaned), _9), 0xc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec, _4, cleaned_1, _7)\n            }\n            /// @ast-id 1072 @src 3:1123:1339  \"function DOMAIN_SEPARATOR() public view returns (bytes32) {...\"\n            function fun_DOMAIN_SEPARATOR() -> var\n            {\n                /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                switch /** @src 3:1198:1231  \"block.chainid == _CACHED_CHAIN_ID\" */ eq(/** @src 3:1198:1211  \"block.chainid\" */ chainid(), /** @src 3:1215:1231  \"_CACHED_CHAIN_ID\" */ loadimmutable(\"1028\"))\n                case /** @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\" */ 0 {\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(64)\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    let _1 := add(expr_mpos, 0x20)\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    mstore(_1, /** @src 3:726:806  \"keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\")\" */ 0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866)\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ expr_mpos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 64), /** @src 3:654:674  \"keccak256(\\\"Permit2\\\")\" */ 0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a)\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ expr_mpos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 96), /** @src 3:1198:1211  \"block.chainid\" */ chainid())\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ expr_mpos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 128), /** @src 3:1614:1618  \"this\" */ address())\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 128)\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    finalize_allocation_19045(expr_mpos)\n                    /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                    expr := /** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1, mload(/** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ expr_mpos))\n                }\n                default /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                {\n                    expr := /** @src 3:1246:1270  \"_CACHED_DOMAIN_SEPARATOR\" */ loadimmutable(\"1026\")\n                }\n                /// @src 3:1191:1332  \"return block.chainid == _CACHED_CHAIN_ID...\"\n                var := expr\n            }\n            /// @ast-id 1116 @src 3:1685:1852  \"function _hashTypedData(bytes32 dataHash) internal view returns (bytes32) {...\"\n            function fun_hashTypedData(var_dataHash) -> var\n            {\n                /// @src 3:1815:1833  \"DOMAIN_SEPARATOR()\"\n                let expr := fun_DOMAIN_SEPARATOR()\n                /// @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\"\n                let expr_mpos := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(64)\n                /// @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\"\n                let _1 := add(expr_mpos, 0x20)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                mstore(_1, shl(240, 6401))\n                mstore(add(/** @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\" */ expr_mpos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 34), expr)\n                mstore(add(/** @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\" */ expr_mpos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 66), var_dataHash)\n                /// @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\"\n                mstore(expr_mpos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 66)\n                /// @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\"\n                finalize_allocation_19052(expr_mpos)\n                /// @src 3:1769:1845  \"return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash))\"\n                var := /** @src 3:1776:1845  \"keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash))\" */ keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1, mload(/** @src 3:1776:1845  \"keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash))\" */ expr_mpos))\n            }\n            /// @ast-id 1310 @src 6:2165:2869  \"function _permitTransferFrom(...\"\n            function fun_permitTransferFrom(var_permit_mpos, var_owner, var_dataHash, var_signature_offset, var_signature_length)\n            {\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let value := calldataload(/** @src 6:2428:2459  \"transferDetails.requestedAmount\" */ 164)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _1 := mload(/** @src 6:2492:2507  \"permit.deadline\" */ add(var_permit_mpos, 64))\n                /// @src 6:2470:2549  \"if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline)\"\n                if /** @src 6:2474:2507  \"block.timestamp > permit.deadline\" */ gt(/** @src 6:2474:2489  \"block.timestamp\" */ timestamp(), /** @src 6:2474:2507  \"block.timestamp > permit.deadline\" */ _1)\n                /// @src 6:2470:2549  \"if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline)\"\n                {\n                    /// @src 6:2516:2549  \"SignatureExpired(permit.deadline)\"\n                    let _2 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 6:2492:2507  \"permit.deadline\" */ 64)\n                    /// @src 6:2516:2549  \"SignatureExpired(permit.deadline)\"\n                    mstore(_2, /** @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\" */ shl(224, 0xcd21db4f))\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    mstore(/** @src 6:2516:2549  \"SignatureExpired(permit.deadline)\" */ add(_2, 4), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1)\n                    /// @src 6:2516:2549  \"SignatureExpired(permit.deadline)\"\n                    revert(_2, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 36)\n                }\n                let _3 := mload(/** @src 6:2581:2604  \"permit.permitted.amount\" */ add(/** @src 6:2581:2597  \"permit.permitted\" */ mload(var_permit_mpos), /** @src 6:2428:2459  \"transferDetails.requestedAmount\" */ 32))\n                /// @src 6:2559:2651  \"if (requestedAmount > permit.permitted.amount) revert InvalidAmount(permit.permitted.amount)\"\n                if /** @src 6:2563:2604  \"requestedAmount > permit.permitted.amount\" */ gt(value, _3)\n                /// @src 6:2559:2651  \"if (requestedAmount > permit.permitted.amount) revert InvalidAmount(permit.permitted.amount)\"\n                {\n                    /// @src 6:2613:2651  \"InvalidAmount(permit.permitted.amount)\"\n                    let _4 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 6:2492:2507  \"permit.deadline\" */ 64)\n                    /// @src 6:2613:2651  \"InvalidAmount(permit.permitted.amount)\"\n                    mstore(_4, shl(224, 0x3728b83d))\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    mstore(/** @src 6:2613:2651  \"InvalidAmount(permit.permitted.amount)\" */ add(_4, 4), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _3)\n                    /// @src 6:2613:2651  \"InvalidAmount(permit.permitted.amount)\"\n                    revert(_4, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 36)\n                }\n                /// @src 6:2688:2700  \"permit.nonce\"\n                fun_useUnorderedNonce(var_owner, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 6:2688:2700  \"permit.nonce\" */ add(var_permit_mpos, /** @src 6:2428:2459  \"transferDetails.requestedAmount\" */ 32)))\n                /// @src 6:2755:2760  \"owner\"\n                fun_verify(var_signature_offset, var_signature_length, /** @src 6:2729:2753  \"_hashTypedData(dataHash)\" */ fun_hashTypedData(var_dataHash), /** @src 6:2755:2760  \"owner\" */ var_owner)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _5 := sub(shl(160, 1), 1)\n                let cleaned := and(mload(/** @src 6:2778:2794  \"permit.permitted\" */ mload(var_permit_mpos)), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _5)\n                let value_1 := calldataload(132)\n                if iszero(eq(value_1, and(value_1, _5)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:2846:2861  \"requestedAmount\"\n                fun_safeTransferFrom(cleaned, var_owner, /** @src 6:2826:2844  \"transferDetails.to\" */ value_1, /** @src 6:2846:2861  \"requestedAmount\" */ value)\n            }\n            /// @ast-id 1482 @src 6:4102:5296  \"function _permitTransferFrom(...\"\n            function fun__permitTransferFrom(var_permit_mpos, var_transferDetails_offset, var_transferDetails_length, var_owner, var_dataHash, var_signature_1382_offset, var_signature_1382_length)\n            {\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let length := mload(/** @src 6:4369:4385  \"permit.permitted\" */ mload(var_permit_mpos))\n                /// @src 6:4425:4440  \"permit.deadline\"\n                let _1 := 64\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _2 := mload(/** @src 6:4425:4440  \"permit.deadline\" */ add(var_permit_mpos, _1))\n                /// @src 6:4403:4482  \"if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline)\"\n                if /** @src 6:4407:4440  \"block.timestamp > permit.deadline\" */ gt(/** @src 6:4407:4422  \"block.timestamp\" */ timestamp(), /** @src 6:4407:4440  \"block.timestamp > permit.deadline\" */ _2)\n                /// @src 6:4403:4482  \"if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline)\"\n                {\n                    /// @src 6:4449:4482  \"SignatureExpired(permit.deadline)\"\n                    let _3 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 6:4425:4440  \"permit.deadline\" */ _1)\n                    /// @src 6:4449:4482  \"SignatureExpired(permit.deadline)\"\n                    mstore(_3, /** @src 2:2236:2277  \"SignatureExpired(permitBatch.sigDeadline)\" */ shl(224, 0xcd21db4f))\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    mstore(/** @src 6:4449:4482  \"SignatureExpired(permit.deadline)\" */ add(_3, 4), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _2)\n                    /// @src 6:4449:4482  \"SignatureExpired(permit.deadline)\"\n                    revert(_3, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 36)\n                }\n                /// @src 6:4492:4559  \"if (numPermitted != transferDetails.length) revert LengthMismatch()\"\n                if /** @src 6:4496:4534  \"numPermitted != transferDetails.length\" */ iszero(eq(length, var_transferDetails_length))\n                /// @src 6:4492:4559  \"if (numPermitted != transferDetails.length) revert LengthMismatch()\"\n                {\n                    /// @src 6:4543:4559  \"LengthMismatch()\"\n                    let _4 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 6:4425:4440  \"permit.deadline\" */ _1)\n                    /// @src 6:4543:4559  \"LengthMismatch()\"\n                    mstore(_4, shl(227, 0x1fec6747))\n                    revert(_4, 4)\n                }\n                /// @src 6:4596:4608  \"permit.nonce\"\n                let _5 := 32\n                fun_useUnorderedNonce(var_owner, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 6:4596:4608  \"permit.nonce\" */ add(var_permit_mpos, _5)))\n                /// @src 6:4662:4667  \"owner\"\n                fun_verify(var_signature_1382_offset, var_signature_1382_length, /** @src 6:4636:4660  \"_hashTypedData(dataHash)\" */ fun_hashTypedData(var_dataHash), /** @src 6:4662:4667  \"owner\" */ var_owner)\n                /// @src 6:4708:4721  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 6:4703:5280  \"for (uint256 i = 0; i < numPermitted; ++i) {...\"\n                for { }\n                /** @src 6:4723:4739  \"i < numPermitted\" */ lt(var_i, length)\n                /// @src 6:4708:4721  \"uint256 i = 0\"\n                {\n                    /// @src 6:4741:4744  \"++i\"\n                    var_i := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ add(/** @src 6:4741:4744  \"++i\" */ var_i, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 1)\n                }\n                /// @src 6:4741:4744  \"++i\"\n                {\n                    /// @src 6:4800:4819  \"permit.permitted[i]\"\n                    let _mpos := mload(memory_array_index_access_struct_PermitDetails_dyn(/** @src 6:4800:4816  \"permit.permitted\" */ mload(var_permit_mpos), /** @src 6:4800:4819  \"permit.permitted[i]\" */ var_i))\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    let value := calldataload(/** @src 6:4863:4897  \"transferDetails[i].requestedAmount\" */ add(/** @src 6:4863:4881  \"transferDetails[i]\" */ calldata_array_index_access_struct_TokenSpenderPair_calldata_dyn_calldata(var_transferDetails_offset, var_transferDetails_length, var_i), /** @src 6:4596:4608  \"permit.nonce\" */ _5))\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    let _6 := mload(/** @src 6:4938:4954  \"permitted.amount\" */ add(_mpos, /** @src 6:4596:4608  \"permit.nonce\" */ _5))\n                    /// @src 6:4916:4994  \"if (requestedAmount > permitted.amount) revert InvalidAmount(permitted.amount)\"\n                    if /** @src 6:4920:4954  \"requestedAmount > permitted.amount\" */ gt(value, _6)\n                    /// @src 6:4916:4994  \"if (requestedAmount > permitted.amount) revert InvalidAmount(permitted.amount)\"\n                    {\n                        /// @src 6:4963:4994  \"InvalidAmount(permitted.amount)\"\n                        let _7 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 6:4425:4440  \"permit.deadline\" */ _1)\n                        /// @src 6:4963:4994  \"InvalidAmount(permitted.amount)\"\n                        mstore(_7, /** @src 6:2613:2651  \"InvalidAmount(permit.permitted.amount)\" */ shl(224, 0x3728b83d))\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        mstore(/** @src 6:4963:4994  \"InvalidAmount(permitted.amount)\" */ add(_7, 4), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _6)\n                        /// @src 6:4963:4994  \"InvalidAmount(permitted.amount)\"\n                        revert(_7, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 36)\n                    }\n                    /// @src 6:5013:5266  \"if (requestedAmount != 0) {...\"\n                    if /** @src 6:5017:5037  \"requestedAmount != 0\" */ iszero(iszero(value))\n                    /// @src 6:5013:5266  \"if (requestedAmount != 0) {...\"\n                    {\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let cleaned := and(mload(/** @src 6:5167:5182  \"permitted.token\" */ _mpos), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ sub(shl(160, 1), 1))\n                        /// @src 6:5231:5246  \"requestedAmount\"\n                        fun_safeTransferFrom(cleaned, var_owner, /** @src 6:5208:5229  \"transferDetails[i].to\" */ read_from_calldatat_address(/** @src 6:5208:5226  \"transferDetails[i]\" */ calldata_array_index_access_struct_TokenSpenderPair_calldata_dyn_calldata(var_transferDetails_offset, var_transferDetails_length, var_i)), /** @src 6:5231:5246  \"requestedAmount\" */ value)\n                    }\n                }\n            }\n            /// @ast-id 1576 @src 6:6415:6708  \"function _useUnorderedNonce(address from, uint256 nonce) internal {...\"\n            function fun_useUnorderedNonce(var_from, var_nonce)\n            {\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let result := shl(and(/** @src 6:6178:6190  \"uint8(nonce)\" */ var_nonce, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0xff), /** @src 6:6573:6574  \"1\" */ 0x01)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src -1:-1:-1 */ 0)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shr(/** @src 6:6157:6158  \"8\" */ 0x08, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ var_nonce))\n                mstore(0x20, dataSlot)\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x40)\n                /// @src 6:6612:6645  \"nonceBitmap[from][wordPos] ^= bit\"\n                let expr := xor(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ sload(/** @src 6:6612:6645  \"nonceBitmap[from][wordPos] ^= bit\" */ dataSlot_1), result)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                sstore(dataSlot_1, expr)\n                /// @src 6:6656:6701  \"if (flipped & bit == 0) revert InvalidNonce()\"\n                if /** @src 6:6660:6678  \"flipped & bit == 0\" */ iszero(/** @src 6:6660:6673  \"flipped & bit\" */ and(expr, result))\n                /// @src 6:6656:6701  \"if (flipped & bit == 0) revert InvalidNonce()\"\n                {\n                    /// @src 6:6687:6701  \"InvalidNonce()\"\n                    let _1 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(0x40)\n                    /// @src 6:6687:6701  \"InvalidNonce()\"\n                    mstore(_1, /** @src 2:5064:5078  \"InvalidNonce()\" */ shl(225, 0x3ab3447f))\n                    /// @src 6:6687:6701  \"InvalidNonce()\"\n                    revert(_1, 4)\n                }\n            }\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            function allocate_and_zero_memory_array_array_bytes32_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_struct_PermitDetails_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_struct_PermitDetails_dyn(length), /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ not(31)))\n            }\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            /// @src 13:661:834  \"keccak256(...\"\n            function abi_encode_array_bytes32_dyn(value, pos) -> end\n            {\n                let length := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 13:661:834  \"keccak256(...\" */ value)\n                pos := pos\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _1 := 0x20\n                /// @src 13:661:834  \"keccak256(...\"\n                let srcPtr := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ add(/** @src 13:661:834  \"keccak256(...\" */ value, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1)\n                /// @src 13:661:834  \"keccak256(...\"\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                    mstore(pos, /** @src 13:661:834  \"keccak256(...\" */ mload(srcPtr))\n                    pos := add(pos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1)\n                    /// @src 13:661:834  \"keccak256(...\"\n                    srcPtr := add(srcPtr, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1)\n                }\n                /// @src 13:661:834  \"keccak256(...\"\n                end := pos\n            }\n            /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ value)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n                }\n                let _1 := add(pos, length)\n                mstore(_1, 0)\n                end := _1\n            }\n            function abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32(headStart, value0, value1, value2, value3, value4, value5) -> tail\n            {\n                tail := add(headStart, 192)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                mstore(headStart, value0)\n                mstore(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ add(headStart, 32), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ value1)\n                mstore(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ add(headStart, 64), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(value2, sub(shl(160, 1), 1)))\n                mstore(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ add(headStart, 96), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ value3)\n                mstore(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ add(headStart, 128), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ value4)\n                mstore(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ add(headStart, 160), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ value5)\n            }\n            /// @ast-id 2658 @src 13:5345:5533  \"function _hashPermitDetails(IAllowanceTransfer.PermitDetails memory details) private pure returns (bytes32) {...\"\n            function fun_hashPermitDetails(var_details_2644_mpos) -> var\n            {\n                /// @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\"\n                let expr_2654_mpos := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(64)\n                /// @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\"\n                let _1 := add(expr_2654_mpos, 0x20)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                mstore(_1, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 0x65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let _2 := sub(shl(160, 1), 1)\n                mstore(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ add(/** @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\" */ expr_2654_mpos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 64), and(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ mload(var_details_2644_mpos), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _2))\n                mstore(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ add(/** @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\" */ expr_2654_mpos, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 96), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ mload(add(var_details_2644_mpos, /** @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\" */ 0x20)), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _2))\n                /// @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\"\n                let memberValue0 := mload(add(var_details_2644_mpos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 64))\n                let _3 := 0xffffffffffff\n                mstore(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ add(/** @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\" */ expr_2654_mpos, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 128), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(memberValue0, _3))\n                mstore(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ add(/** @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\" */ expr_2654_mpos, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 160), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(/** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ mload(add(var_details_2644_mpos, 96)), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _3))\n                /// @src 13:5480:5525  \"abi.encode(_PERMIT_DETAILS_TYPEHASH, details)\"\n                mstore(expr_2654_mpos, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 160)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                let newFreePtr := add(expr_2654_mpos, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 192)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_2654_mpos))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n                /// @src 13:5463:5526  \"return keccak256(abi.encode(_PERMIT_DETAILS_TYPEHASH, details))\"\n                var := /** @src 13:5470:5526  \"keccak256(abi.encode(_PERMIT_DETAILS_TYPEHASH, details))\" */ keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1, mload(/** @src 13:5470:5526  \"keccak256(abi.encode(_PERMIT_DETAILS_TYPEHASH, details))\" */ expr_2654_mpos))\n            }\n            /// @ast-id 2675 @src 13:5539:5768  \"function _hashTokenPermissions(ISignatureTransfer.TokenPermissions memory permitted)...\"\n            function fun_hashTokenPermissions(var_permitted_mpos) -> var\n            {\n                /// @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\"\n                let expr_2671_mpos := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(64)\n                /// @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\"\n                let _1 := add(expr_2671_mpos, 0x20)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                mstore(_1, /** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ 0x618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1)\n                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                mstore(/** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ add(/** @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\" */ expr_2671_mpos, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 64), and(/** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ mload(var_permitted_mpos), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ sub(shl(160, 1), 1)))\n                mstore(/** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ add(/** @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\" */ expr_2671_mpos, /** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ 96), mload(add(var_permitted_mpos, /** @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\" */ 0x20)))\n                mstore(expr_2671_mpos, /** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ 96)\n                /// @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\"\n                finalize_allocation_19052(expr_2671_mpos)\n                /// @src 13:5693:5761  \"return keccak256(abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted))\"\n                var := /** @src 13:5700:5761  \"keccak256(abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted))\" */ keccak256(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1, mload(/** @src 13:5700:5761  \"keccak256(abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted))\" */ expr_2671_mpos))\n            }\n            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n            function abi_decode_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                value0 := calldataload(headStart)\n                value1 := calldataload(add(headStart, 32))\n            }\n            /// @ast-id 2875 @src 15:700:1809  \"function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {...\"\n            function fun_verify(var_signature_offset, var_signature_length, var_hash, var_claimedSigner)\n            {\n                /// @src 15:803:812  \"bytes32 r\"\n                let var_r := /** @src -1:-1:-1 */ 0\n                /// @src 15:822:831  \"bytes32 s\"\n                let var_s := /** @src -1:-1:-1 */ var_r\n                /// @src 15:841:848  \"uint8 v\"\n                let var_v := /** @src -1:-1:-1 */ var_r\n                /// @src 15:859:1803  \"if (claimedSigner.code.length == 0) {...\"\n                switch /** @src 15:863:893  \"claimedSigner.code.length == 0\" */ iszero(/** @src 15:863:888  \"claimedSigner.code.length\" */ extcodesize(var_claimedSigner))\n                case /** @src 15:859:1803  \"if (claimedSigner.code.length == 0) {...\" */ 0 {\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    let _1 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(64)\n                    let _2 := shl(225, 0x0b135d3f)\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    mstore(_1, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _2)\n                    mstore(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ add(_1, 4), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ var_hash)\n                    mstore(add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 36), 64)\n                    mstore(add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 68), var_signature_length)\n                    /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n                    calldatacopy(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 100), /** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ var_signature_offset, var_signature_length)\n                    mstore(add(add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ var_signature_length), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 100), /** @src -1:-1:-1 */ var_r)\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    let _3 := staticcall(gas(), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(/** @src 15:1634:1657  \"IERC1271(claimedSigner)\" */ var_claimedSigner, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ sub(shl(160, 1), 1)), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, add(sub(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(add(var_signature_length, 31), /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ not(31))), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 100), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, 32)\n                    if iszero(_3)\n                    {\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let pos := mload(64)\n                        returndatacopy(pos, /** @src -1:-1:-1 */ var_r, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    let expr := /** @src -1:-1:-1 */ var_r\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    if _3\n                    {\n                        let _4 := 32\n                        if gt(_4, returndatasize()) { _4 := returndatasize() }\n                        finalize_allocation(_1, _4)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        if slt(sub(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ add(_1, _4), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _1), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ 32)\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        {\n                            revert(/** @src -1:-1:-1 */ var_r, var_r)\n                        }\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let value := mload(_1)\n                        if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                        {\n                            revert(/** @src -1:-1:-1 */ var_r, var_r)\n                        }\n                        /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                        expr := value\n                    }\n                    /// @src 15:1705:1792  \"if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature()\"\n                    if /** @src 15:1709:1757  \"magicValue != IERC1271.isValidSignature.selector\" */ iszero(eq(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(/** @src 15:1709:1757  \"magicValue != IERC1271.isValidSignature.selector\" */ expr, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shl(224, 0xffffffff)), _2))\n                    /// @src 15:1705:1792  \"if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature()\"\n                    {\n                        /// @src 15:1766:1792  \"InvalidContractSignature()\"\n                        let _5 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(64)\n                        /// @src 15:1766:1792  \"InvalidContractSignature()\"\n                        mstore(_5, shl(226, 0x2c19a72f))\n                        revert(_5, /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ 4)\n                    }\n                }\n                default /// @src 15:859:1803  \"if (claimedSigner.code.length == 0) {...\"\n                {\n                    /// @src 15:909:1399  \"if (signature.length == 65) {...\"\n                    switch /** @src 15:913:935  \"signature.length == 65\" */ eq(var_signature_length, /** @src 15:933:935  \"65\" */ 0x41)\n                    case /** @src 15:909:1399  \"if (signature.length == 65) {...\" */ 0 {\n                        /// @src 15:1068:1399  \"if (signature.length == 64) {...\"\n                        switch /** @src 15:1072:1094  \"signature.length == 64\" */ eq(var_signature_length, /** @src 15:1092:1094  \"64\" */ 0x40)\n                        case /** @src 15:1068:1399  \"if (signature.length == 64) {...\" */ 0 {\n                            /// @src 15:1360:1384  \"InvalidSignatureLength()\"\n                            let _6 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(/** @src 15:1092:1094  \"64\" */ 0x40)\n                            /// @src 15:1360:1384  \"InvalidSignatureLength()\"\n                            mstore(_6, shl(224, 0x4be6321b))\n                            revert(_6, 4)\n                        }\n                        default /// @src 15:1068:1399  \"if (signature.length == 64) {...\"\n                        {\n                            /// @src 15:1180:1221  \"abi.decode(signature, (bytes32, bytes32))\"\n                            let expr_component, expr_2796_component := abi_decode_bytes32t_bytes32(var_signature_offset, add(var_signature_offset, var_signature_length))\n                            /// @src 15:1170:1221  \"(r, vs) = abi.decode(signature, (bytes32, bytes32))\"\n                            var_r := expr_component\n                            /// @src 15:1239:1262  \"s = vs & UPPER_BIT_MASK\"\n                            var_s := /** @src 15:1243:1262  \"vs & UPPER_BIT_MASK\" */ and(expr_2796_component, /** @src 15:626:692  \"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\" */ sub(shl(255, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 1), 1))\n                            /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                            let sum := add(/** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shr(0xff, expr_2796_component), /** @src 15:1312:1314  \"27\" */ 0x1b)\n                            /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                            if gt(sum, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0xff)\n                            /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                            {\n                                /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x24)\n                            }\n                            /// @src 15:1280:1314  \"v = uint8(uint256(vs >> 255)) + 27\"\n                            var_v := sum\n                        }\n                    }\n                    default /// @src 15:909:1399  \"if (signature.length == 65) {...\"\n                    {\n                        /// @src 15:964:1005  \"abi.decode(signature, (bytes32, bytes32))\"\n                        let expr_component_1, expr_component_2 := abi_decode_bytes32t_bytes32(var_signature_offset, add(var_signature_offset, var_signature_length))\n                        /// @src 15:955:1005  \"(r, s) = abi.decode(signature, (bytes32, bytes32))\"\n                        var_s := expr_component_2\n                        var_r := expr_component_1\n                        /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                        if iszero(lt(/** @src 15:1043:1045  \"64\" */ 0x40, /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ var_signature_length))\n                        {\n                            /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0x24)\n                        }\n                        /// @src 15:1023:1047  \"v = uint8(signature[64])\"\n                        var_v := /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ shr(248, /** @src 15:1033:1046  \"signature[64]\" */ calldataload(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ add(var_signature_offset, /** @src 15:1043:1045  \"64\" */ 0x40)))\n                    }\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    let _7 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(64)\n                    mstore(_7, var_hash)\n                    /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                    mstore(add(_7, 32), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ var_v, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 0xff))\n                    mstore(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ add(_7, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ 64), var_r)\n                    mstore(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ add(_7, 96), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ var_s)\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    mstore(/** @src -1:-1:-1 */ 0, 0)\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    if iszero(staticcall(gas(), 1, _7, /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ 128, /** @src -1:-1:-1 */ 0, /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ 32))\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    {\n                        /// @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\"\n                        let pos_1 := mload(64)\n                        returndatacopy(pos_1, /** @src -1:-1:-1 */ 0, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ returndatasize())\n                        revert(pos_1, returndatasize())\n                    }\n                    let _8 := sub(shl(160, 1), 1)\n                    /// @src 15:1471:1491  \"signer == address(0)\"\n                    let _9 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(/** @src 15:1429:1453  \"ecrecover(hash, v, r, s)\" */ mload(/** @src -1:-1:-1 */ 0), /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _8)\n                    /// @src 15:1467:1518  \"if (signer == address(0)) revert InvalidSignature()\"\n                    if /** @src 15:1471:1491  \"signer == address(0)\" */ iszero(_9)\n                    /// @src 15:1467:1518  \"if (signer == address(0)) revert InvalidSignature()\"\n                    {\n                        /// @src 15:1500:1518  \"InvalidSignature()\"\n                        let _10 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(64)\n                        /// @src 15:1500:1518  \"InvalidSignature()\"\n                        mstore(_10, shl(224, 0x8baa579f))\n                        revert(_10, 4)\n                    }\n                    /// @src 15:1532:1583  \"if (signer != claimedSigner) revert InvalidSigner()\"\n                    if /** @src 15:1536:1559  \"signer != claimedSigner\" */ iszero(eq(_9, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ and(/** @src 15:1536:1559  \"signer != claimedSigner\" */ var_claimedSigner, /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ _8)))\n                    /// @src 15:1532:1583  \"if (signer != claimedSigner) revert InvalidSigner()\"\n                    {\n                        /// @src 15:1568:1583  \"InvalidSigner()\"\n                        let _11 := /** @src 4:385:537  \"contract Permit2 is SignatureTransfer, AllowanceTransfer {...\" */ mload(64)\n                        /// @src 15:1568:1583  \"InvalidSigner()\"\n                        mstore(_11, shl(226, 0x20578759))\n                        revert(_11, 4)\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000811000a\"\n    }\n}\n","hash":"010006335cbc564823dfa14b9c2cbee1eae8eb29f1c5a0d6592dc73dd9eb6952","factoryDependencies":{}}},"src/SignatureTransfer.sol":{"SignatureTransfer":{"abi":[{"inputs":[{"internalType":"uint256","name":"maxAmount","type":"uint256"}],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidContractSignature","type":"error"},{"inputs":[],"name":"InvalidNonce","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"InvalidSignatureLength","type":"error"},{"inputs":[],"name":"InvalidSigner","type":"error"},{"inputs":[],"name":"LengthMismatch","type":"error"},{"inputs":[{"internalType":"uint256","name":"signatureDeadline","type":"uint256"}],"name":"SignatureExpired","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"word","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"mask","type":"uint256"}],"name":"UnorderedNonceInvalidation","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"wordPos","type":"uint256"},{"internalType":"uint256","name":"mask","type":"uint256"}],"name":"invalidateUnorderedNonces","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"nonceBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions","name":"permitted","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails","name":"transferDetails","type":"tuple"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions[]","name":"permitted","type":"tuple[]"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","name":"transferDetails","type":"tuple[]"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions","name":"permitted","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails","name":"transferDetails","type":"tuple"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"witness","type":"bytes32"},{"internalType":"string","name":"witnessTypeString","type":"string"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitWitnessTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions[]","name":"permitted","type":"tuple[]"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","name":"transferDetails","type":"tuple[]"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"witness","type":"bytes32"},{"internalType":"string","name":"witnessTypeString","type":"string"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitWitnessTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"signatureDeadline\",\"type\":\"uint256\"}],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"word\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"UnorderedNonceInvalidation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wordPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"invalidateUnorderedNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonceBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidAmount(uint256)\":[{\"params\":{\"maxAmount\":\"The maximum amount a spender can request to transfer\"}}],\"LengthMismatch()\":[{\"details\":\"If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\"}],\"SignatureExpired(uint256)\":[{\"params\":{\"signatureDeadline\":\"The timestamp at which a signature is no longer valid\"}}]},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Uses cached version if chainid and address are unchanged from construction.\"},\"invalidateUnorderedNonces(uint256,uint256)\":{\"details\":\"The wordPos is maxed at type(uint248).max\",\"params\":{\"mask\":\"A bitmap masked against msg.sender's current bitmap at the word position\",\"wordPos\":\"A number to index the nonceBitmap at\"}},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"details\":\"Reverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\"}},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\"}},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}}},\"stateVariables\":{\"nonceBitmap\":{\"details\":\"Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAmount(uint256)\":[{\"notice\":\"Thrown when the requested amount for a transfer is larger than the permissioned amount\"}],\"InvalidContractSignature()\":[{\"notice\":\"Thrown when the recovered contract signature is incorrect\"}],\"InvalidNonce()\":[{\"notice\":\"Thrown when validating that the inputted nonce has not been used\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when the recovered signer is equal to the zero address\"}],\"InvalidSignatureLength()\":[{\"notice\":\"Thrown when the passed in signature is not a valid length\"}],\"InvalidSigner()\":[{\"notice\":\"Thrown when the recovered signer does not equal the claimedSigner\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\"}],\"SignatureExpired(uint256)\":[{\"notice\":\"Thrown when validating an inputted signature that is stale\"}]},\"events\":{\"UnorderedNonceInvalidation(address,uint256,uint256)\":{\"notice\":\"Emits an event when the owner successfully invalidates an unordered nonce.\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator for the current chain.\"},\"invalidateUnorderedNonces(uint256,uint256)\":{\"notice\":\"Invalidates the bits specified in mask for the bitmap at the word position\"},\"nonceBitmap(address,uint256)\":{\"notice\":\"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"notice\":\"Transfers a token using a signed permit message\"},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit message\"},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"notice\":\"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SignatureTransfer.sol\":\"SignatureTransfer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"src/EIP712.sol\":{\"keccak256\":\"0x973d4358c262467a4c2a0c2867c676a8a138102968d8b89355c42f655d1a7a68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7219a31ace8c0a959392cc2ee06817c7c98dfc491e96d27f71a09fb23860b62c\",\"dweb:/ipfs/QmUGRLgddHZ3GoouEBoMYbRS4wVGapJrsD2nBxVwxLBibb\"]},\"src/PermitErrors.sol\":{\"keccak256\":\"0x9fd1192bbc3ffa9354f2bfc534d7a1cdf2be2c940c96ed4ac7bc37991e1e5dfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77f8b2e2c040c33e2c78f05e7e768a17f433c07adb699235c35c4dac92115070\",\"dweb:/ipfs/QmYX2VTyTm6QLtgp54kCrkAGY8uPxkx28urwLNEJsxTHJs\"]},\"src/SignatureTransfer.sol\":{\"keccak256\":\"0xd826676d51208b14d32ef4c49ac3ba86da1a5a56f482e3cdd44760e82fe903c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc8b1dd1ed29102ede192f50fcf990df33e8408ca6eca0299c855733382d2c55\",\"dweb:/ipfs/QmYYAx5wd19HKJcak5dDbiWLZV3gs5wapr4ezgWP9CyH9v\"]},\"src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]},\"src/interfaces/IERC1271.sol\":{\"keccak256\":\"0x96f516510d08da5b1d05d81b0bd88af6f9928bb757ba55c27e203654dfcd4fa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0942604688c369aed50905d7cef2ece68e1ff457c95a14c9f913babac29a09a\",\"dweb:/ipfs/Qmf4ZBYCKqQHfnACciz8GEMhwxPw7mhQ6fjGXwpgr8CQF8\"]},\"src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xbab1c35f0a63761be6b50a9a2ce2459b63f09587dd9c6ac46955252a1a04f43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225dca1a3d91c0737fe75c72bfecae391fc2e7b2eb2ebe1a154bfb16a7527972\",\"dweb:/ipfs/QmdGQdUCANKZ6S23TyHDtBnGvr6CtyyqNNcziVTjEHJ5rk\"]},\"src/libraries/PermitHash.sol\":{\"keccak256\":\"0x54af80d9c3193934c6947c31f59b8f3d7918f83676fe92ed6136593ad591d478\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5264001770be2cdeb7651e4d22af7edbc4e16da6d38747efeb4f54b5472ca5c5\",\"dweb:/ipfs/QmPvwau7DXw6stGQ14hpyTeLdYDYrrrdMnUfkQTPpMXQxz\"]},\"src/libraries/SignatureVerification.sol\":{\"keccak256\":\"0x99f437ffe99aa1ff7885aec8b971f48efac00c6ebc59c02eec78c9ca850a5e30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9365414bdb67813d4ef6c89fa152dff05fc2a64992a1a4f212fa414dbdee3eab\",\"dweb:/ipfs/QmfJxSszF1rjmMoNXW5oQMo9gARMHAXYTu68fkZvdEu58i\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignatureTransfer.sol:SignatureTransfer\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[16]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.le\t@.BB0_6\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_12\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_44\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r0, r1\n\tadd\tr1, r0, stack-[16]\n\tst.2\t0, r1\n\tadd\t32779, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t4, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t160, r1\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\t224, r1\n\tadd\t@CPI0_3[0], r0, r1\n\tst.1\t256, r1\n\tadd\tstack-[16], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t288, r1\n\tcontext.this\tr1\n\tst.1\t320, r1\n\tadd\t128, r0, r1\n\tst.1\t192, r1\n\tadd\t352, r0, r1\n\tst.1\t64, r1\n\tld.1\t192, r2\n\tadd\t224, r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tld.1\t160, r2\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tst.2\t256, r1\n\tadd\t2, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_6:\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.eq\t@.BB0_14\n\tsub.s!\t@CPI0_12[0], r1, r2\n\tjump.eq\t@.BB0_32\n\tsub.s!\t@CPI0_13[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_DOMAIN_SEPARATOR, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.eq\t@.BB0_54\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\t4, r1, r2\n\tadd\t@CPI0_14[0], r0, r3\n\tsub.s!\t192, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_14[0], r2, r2\n\tsub.s!\t0, r2, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub.s!\t0, r2, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r2, r4\n\tsub\tr1, r4, r3\n\tadd\t@CPI0_14[0], r0, r5\n\tsub.s!\t96, r3, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI0_14[0], r3, r3\n\tsub.s!\t0, r3, r7\n\tadd.le\t0, r0, r5\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr5, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r11\n\tsub.s!\t@CPI0_16[0], r11, r3\n\tjump.gt\t@.BB0_17\n\tadd\t96, r11, r3\n\tst.1\t64, r3\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add\tr5, r4, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_15[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tadd\tr6, r4, r4\n\tadd\t31, r4, r6\n\tadd\t@CPI0_14[0], r0, r7\n\tsub!\tr6, r1, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_14[0], r6, r6\n\tand\t@CPI0_14[0], r1, r9\n\tsub!\tr6, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr6, r9, r6\n\tsub.s!\t@CPI0_14[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB0_2\n\tptr.add\tr5, r4, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI0_15[0], r6, r5\n\tjump.gt\t@.BB0_17\n\tshl.s\t5, r6, r5\n\tadd\t63, r5, r5\n\tsub.s\t32, r0, r12\n\tand\tr5, r12, r5\n\tadd\tr5, r3, r5\n\tsub.s!\t@CPI0_15[0], r5, r7\n\tjump.gt\t@.BB0_17\n\tst.1\t64, r5\n\tst.1\tr3, r6\n\tadd\t32, r4, r4\n\tshl.s\t6, r6, r5\n\tadd\tr5, r4, r5\n\tsub!\tr5, r1, r7\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB0_106\n.BB0_111:\n\tst.1.inc\tr11, r3, r3\n\tadd\t36, r2, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr3, r0, stack-[8]\n\tst.1\tr3, r1\n\tadd\t68, r2, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\t64, r11, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t36, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r1, r4\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI0_14[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_14[0], r4, r4\n\tand\t@CPI0_14[0], r3, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_14[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r1, r4\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[6]\n\tsub.s!\t@CPI0_15[0], r4, r4\n\tjump.gt\t@.BB0_2\n\tadd\t36, r1, r4\n\tadd\tstack-[6], r0, r1\n\tshl.s\t6, r1, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr1, r4, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r2, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t132, r2, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI0_15[0], r4, r1\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r1\n\tadd\t@CPI0_14[0], r0, r5\n\tsub!\tr1, r3, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_14[0], r3, r7\n\tand\t@CPI0_14[0], r1, r1\n\tsub!\tr1, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr1, r7, r1\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr6, r0, r1\n\tadd.eq\tr5, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r4, r1\n\tptr.add\tr2, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_15[0], r1, r5\n\tjump.gt\t@.BB0_2\n\tadd\t36, r4, r4\n\tadd\tr1, r4, r5\n\tsub!\tr5, r3, r5\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t164, r2, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_15[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r6\n\tadd\t@CPI0_14[0], r0, r7\n\tsub!\tr6, r3, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_14[0], r3, r9\n\tand\t@CPI0_14[0], r6, r6\n\tsub!\tr6, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr6, r9, r6\n\tsub.s!\t@CPI0_14[0], r6, r6\n\tadd\tr8, r0, r6\n\tadd.eq\tr7, r0, r6\n\tsub.s!\t0, r6, r6\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r6\n\tptr.add\tr2, r6, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\t36, r5, r5\n\tadd\tstack-[3], r0, r2\n\tadd\tr5, r0, stack-[2]\n\tadd\tr2, r5, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_19[0], r5, r2\n\tjump.gt\t@.BB0_17\n\tadd\tr12, r0, stack-[16]\n\tadd\tr11, r0, stack-[14]\n\tadd\t160, r5, r2\n\tst.1\t64, r2\n\tadd\t128, r5, r2\n\tadd\t@CPI0_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r5, r2\n\tadd\t@CPI0_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r5, r2\n\tadd\t@CPI0_22[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r5, r2\n\tadd\t@CPI0_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd!\t107, r0, r6\n\tst.1\tr5, r6\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tjump.eq\t@.BB0_128\n\tadd\tr0, r0, r7\n.BB0_127:\n\tadd\tr7, r3, r8\n\tadd\t32, r7, r7\n\tadd\tr7, r5, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_127\n.BB0_128:\n\tadd\tr6, r3, r5\n\tand\t31, r1, r6\n\tst.1\tr5, r0\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tshr.s!\t5, r1, r7\n\tjump.eq\t@.BB0_153\n\tadd\tr0, r0, r8\n.BB0_130:\n\tshl.s\t5, r8, r9\n\tadd\tr5, r9, r10\n\tptr.add\tr4, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_130\n.BB0_153:\n\tsub.s!\t0, r6, r8\n\tjump.eq\t@.BB0_132\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tadd\tr5, r7, r7\n\tshl.s\t3, r6, r6\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB0_132:\n\tadd\tr5, r1, r1\n\tst.1\tr1, r0\n\tsub\tr1, r2, r1\n\tsub.s\t32, r1, r4\n\tst.1\tr2, r4\n\tadd\t31, r1, r1\n\tadd\tstack-[16], r0, r4\n\tand\tr1, r4, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_15[0], r1, r5\n\tjump.gt\t@.BB0_17\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_17\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r4\n\tadd\tstack-[14], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tld.1\tr3, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tjump.gt\t@.BB0_17\n\tadd\tstack-[13], r0, r1\n\tshl.s\t5, r1, r3\n\tadd\t63, r3, r1\n\tand\tr1, r4, r1\n\tld.1\t64, r2\n\tadd\tr2, r1, r1\n\tadd\tr2, r0, stack-[12]\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r4\n\tjump.gt\t@.BB0_17\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_17\n\tst.1\t64, r1\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[12], r0, r2\n\tst.1.inc\tr2, r1, r7\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_152\n\tadd\tr0, r0, r4\n.BB0_140:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_140\n.BB0_152:\n\tadd\tr7, r0, stack-[11]\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB0_142\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tstack-[11], r0, r4\n\tadd\tr4, r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB0_142:\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_143\n.BB0_149:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t32, r1, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tstack-[12], r0, r1\n\tnear_call\tr0, @abi_encode_array_bytes32_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r5\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r6\n\tadd\t100, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r7\n\tadd\tr1, r0, r3\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tcontext.caller\tr4\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r5\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[4], r0, r4\n\tadd\tstack-[2], r0, r6\n\tadd\tstack-[3], r0, r7\n\tnear_call\tr0, @fun__permitTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t320, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r9\n\tsub.s!\t@CPI0_34[0], r9, r1\n\tjump.ge\t@.BB0_17\n\tadd\t96, r9, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_19[0], r9, r2\n\tjump.gt\t@.BB0_17\n\tadd\t160, r9, r2\n\tst.1\t64, r2\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\tr1, r2\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t128, r9, r3\n\tst.1\tr3, r2\n\tst.1.inc\tr9, r1, r11\n\tadd\t68, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\tr11, r1\n\tadd\t64, r9, r12\n\tadd\t100, r0, r13\n\tptr.add\tstack[@ptr_calldata], r13, r1\n\tld\tr1, r1\n\tst.1\tr12, r1\n\tadd\t@CPI0_14[0], r0, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t132, r2, r3\n\tsub.s!\t64, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr1, r0, r4\n\tand\t@CPI0_14[0], r3, r3\n\tsub.s!\t0, r3, r5\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tadd.ne\tr4, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t196, r1, r3\n\tld\tr3, r10\n\tsub.s!\t@CPI0_18[0], r10, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t260, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_15[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r4\n\tadd\t@CPI0_14[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\t0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_14[0], r2, r7\n\tand\t@CPI0_14[0], r4, r4\n\tsub!\tr4, r7, r8\n\tadd.ge\t0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_14[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r3, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_15[0], r5, r4\n\tjump.gt\t@.BB0_2\n\tadd\t36, r3, r3\n\tadd\tr3, r0, stack-[16]\n\tadd\tr5, r3, r3\n\tsub!\tr3, r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t292, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\tr12, r0, stack-[11]\n\tadd\tr11, r0, stack-[12]\n\tadd\tr10, r0, stack-[13]\n\tadd\tr9, r0, stack-[15]\n\tadd\t4, r1, r1\n\tadd\tr5, r0, stack-[7]\n\tadd\tr13, r0, stack-[14]\n\tnear_call\tr0, @abi_decode_string_calldata, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[10]\n\tadd\tr2, r0, stack-[9]\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tnear_call\tr0, @finalize_allocation_10221, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tadd\t128, r3, r1\n\tadd\t@CPI0_35[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t96, r3, r1\n\tadd\t@CPI0_36[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t@CPI0_37[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t@CPI0_38[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[14]\n\tadd\t32, r2, r2\n\tadd\tr2, r0, stack-[8]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tand\t31, r4, r2\n\tadd\tstack-[16], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr4, r0, r8\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_150\n\tadd\tr0, r0, r5\n.BB0_29:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_29\n.BB0_150:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB0_31\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_31:\n\tadd\tr1, r8, r2\n\tst.1\tr2, r0\n\tadd\tstack-[14], r0, r1\n\tsub\tr2, r1, r2\n\tsub.s\t32, r2, r3\n\tst.1\tr1, r3\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tnear_call\tr0, @fun_hashTokenPermissions, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r5\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r6\n\tadd\t228, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r7\n\tadd\tr1, r0, r3\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tcontext.caller\tr4\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[13], r0, r2\n\tadd\tstack-[10], r0, r4\n\tadd\tstack-[9], r0, r5\n\tnear_call\tr0, @fun_permitTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_44:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t64, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[14], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_32[0], r0, r4\n\tadd\tstack-[15], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_54:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t4, r2, r1\n\tadd\t@CPI0_14[0], r0, r3\n\tsub.s!\t128, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r5\n\tadd.le\t0, r0, r3\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr4, r0, r1\n\tadd.eq\tr3, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_15[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t4, r3, r1\n\tsub\tr2, r1, r4\n\tadd\t@CPI0_14[0], r0, r5\n\tsub.s!\t96, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI0_14[0], r4, r4\n\tsub.s!\t0, r4, r7\n\tadd.le\t0, r0, r5\n\tsub.s!\t@CPI0_14[0], r4, r4\n\tadd\tr6, r0, r4\n\tadd.eq\tr5, r0, r4\n\tsub.s!\t0, r4, r4\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r12\n\tsub.s!\t@CPI0_16[0], r12, r4\n\tjump.gt\t@.BB0_17\n\tadd\t96, r12, r4\n\tst.1\t64, r4\n\tptr.add\tstack[@ptr_calldata], r0, r6\n\tptr.add\tr6, r1, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_15[0], r5, r7\n\tjump.gt\t@.BB0_2\n\tadd\tr5, r1, r5\n\tadd\t31, r5, r1\n\tadd\t@CPI0_14[0], r0, r7\n\tsub!\tr1, r2, r8\n\tadd\t0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_14[0], r1, r1\n\tand\t@CPI0_14[0], r2, r9\n\tsub!\tr1, r9, r10\n\tadd.ge\t0, r0, r7\n\txor\tr1, r9, r1\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr8, r0, r1\n\tadd.eq\tr7, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tr6, r5, r1\n\tld\tr1, r7\n\tsub.s!\t@CPI0_15[0], r7, r1\n\tjump.gt\t@.BB0_17\n\tshl.s\t5, r7, r1\n\tadd\t63, r1, r6\n\tsub.s\t32, r0, r1\n\tand\tr6, r1, r6\n\tadd\tr6, r4, r6\n\tsub.s!\t@CPI0_15[0], r6, r8\n\tjump.gt\t@.BB0_17\n\tst.1\t64, r6\n\tst.1\tr4, r7\n\tadd\t32, r5, r5\n\tshl.s\t6, r7, r6\n\tadd\tr6, r5, r6\n\tsub!\tr6, r2, r8\n\tjump.gt\t@.BB0_2\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB0_65\n.BB0_70:\n\tst.1.inc\tr12, r4, r4\n\tadd\t36, r3, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr4, r0, stack-[8]\n\tst.1\tr4, r2\n\tadd\t68, r3, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t64, r12, r3\n\tadd\tr3, r0, stack-[7]\n\tst.1\tr3, r2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_15[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r5\n\tadd\tstack[@calldatasize], r0, r3\n\tadd\t@CPI0_14[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_14[0], r5, r5\n\tand\t@CPI0_14[0], r3, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_14[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[6]\n\tsub.s!\t@CPI0_15[0], r5, r5\n\tjump.gt\t@.BB0_2\n\tadd\t36, r4, r5\n\tadd\tstack-[6], r0, r4\n\tshl.s\t6, r4, r4\n\tadd\tr5, r0, stack-[5]\n\tadd\tr4, r5, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r2, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[4]\n\tsub.s!\t@CPI0_18[0], r4, r4\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r2, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_15[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r5\n\tadd\t@CPI0_14[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\t0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_14[0], r3, r8\n\tand\t@CPI0_14[0], r5, r5\n\tsub!\tr5, r8, r9\n\tadd.ge\t0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_14[0], r5, r5\n\tadd\tr7, r0, r5\n\tadd.eq\tr6, r0, r5\n\tsub.s!\t0, r5, r5\n\tjump.ne\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr2, r5, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\t36, r4, r4\n\tadd\tstack-[3], r0, r2\n\tadd\tr4, r0, stack-[2]\n\tadd\tr2, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_2\n\tld.1\tr12, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.gt\t@.BB0_17\n\tadd\tstack-[14], r0, r2\n\tshl.s\t5, r2, r3\n\tadd\t63, r3, r2\n\tand\tr2, r1, r1\n\tld.1\t64, r2\n\tadd\tr2, r1, r1\n\tadd\tr2, r0, stack-[13]\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_15[0], r1, r4\n\tjump.gt\t@.BB0_17\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_17\n\tadd\tr12, r0, stack-[12]\n\tst.1\t64, r1\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[13], r0, r2\n\tst.1.inc\tr2, r1, r7\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_151\n\tadd\tr0, r0, r4\n.BB0_84:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_84\n.BB0_151:\n\tadd\tr7, r0, stack-[11]\n\tsub.s!\t0, r1, r4\n\tjump.eq\t@.BB0_86\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tstack-[11], r0, r4\n\tadd\tr4, r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB0_86:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t0, r1, r1\n\tadd\tstack-[12], r0, r3\n\tjump.ne\t@.BB0_87\n.BB0_94:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t32, r1, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tstack-[13], r0, r1\n\tnear_call\tr0, @abi_encode_array_bytes32_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[8], r0, r3\n\tld.1\tr3, r3\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[15]\n\tadd\t128, r5, r4\n\tst.1\tr4, r3\n\tadd\t64, r5, r3\n\tst.1\tr3, r1\n\tcontext.caller\tr1\n\tadd\t96, r5, r3\n\tst.1\tr3, r1\n\tadd\t160, r5, r1\n\tst.1\tr1, r2\n\tadd\t160, r0, r1\n\tst.1.inc\tr5, r1, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\t@CPI0_29[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @finalize_allocation_12002, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r5\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[4], r0, r4\n\tadd\tstack-[2], r0, r6\n\tadd\tstack-[3], r0, r7\n\tnear_call\tr0, @fun__permitTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t256, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_34\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_34:\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_16[0], r6, r1\n\tjump.gt\t@.BB0_17\n\tadd\t96, r6, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_19[0], r6, r2\n\tjump.le\t@.BB0_36\n.BB0_17:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_36:\n\tadd\t160, r6, r2\n\tst.1\t64, r2\n\tadd\t4, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\tr1, r2\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\t128, r6, r3\n\tst.1\tr3, r2\n\tst.1.inc\tr6, r1, r7\n\tadd\t68, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\tr7, r1\n\tadd\t64, r6, r8\n\tadd\t100, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tst.1\tr8, r1\n\tadd\t@CPI0_14[0], r0, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s\t132, r2, r3\n\tsub.s!\t64, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\tr1, r0, r4\n\tand\t@CPI0_14[0], r3, r3\n\tsub.s!\t0, r3, r5\n\tadd.le\t0, r0, r1\n\tsub.s!\t@CPI0_14[0], r3, r3\n\tadd.ne\tr4, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t196, r1, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_18[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t228, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tadd\tr6, r0, stack-[16]\n\tadd\tr4, r0, stack-[15]\n\tadd\tr7, r0, stack-[12]\n\tadd\tr8, r0, stack-[11]\n\tnear_call\tr0, @abi_decode_string_calldata, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[14]\n\tadd\tr2, r0, stack-[13]\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tnear_call\tr0, @fun_hashTokenPermissions, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[12], r0, r3\n\tld.1\tr3, r3\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[11]\n\tadd\t128, r5, r4\n\tst.1\tr4, r3\n\tadd\t64, r5, r3\n\tst.1\tr3, r1\n\tcontext.caller\tr1\n\tadd\t96, r5, r3\n\tst.1\tr3, r1\n\tadd\t160, r5, r1\n\tst.1\tr1, r2\n\tadd\t160, r0, r1\n\tst.1.inc\tr5, r1, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @finalize_allocation_12002, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tnear_call\tr0, @__keccak256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tstack-[16], r0, r1\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[14], r0, r4\n\tadd\tstack-[13], r0, r5\n\tnear_call\tr0, @fun_permitTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_106:\n\tadd\t128, r11, r6\n.BB0_107:\n\tsub\tr1, r4, r7\n\tadd\t@CPI0_14[0], r0, r8\n\tsub.s!\t64, r7, r9\n\tadd\t0, r0, r9\n\tadd.lt\tr8, r0, r9\n\tand\t@CPI0_14[0], r7, r7\n\tsub.s!\t0, r7, r10\n\tadd.le\t0, r0, r8\n\tsub.s!\t@CPI0_14[0], r7, r7\n\tadd\tr9, r0, r7\n\tadd.eq\tr8, r0, r7\n\tsub.s!\t0, r7, r7\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_17[0], r7, r8\n\tjump.gt\t@.BB0_17\n\tadd\t64, r7, r8\n\tst.1\t64, r8\n\tptr.add\tstack[@ptr_calldata], r4, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_18[0], r8, r9\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr7, r8, r8\n\tadd\t32, r4, r9\n\tptr.add\tstack[@ptr_calldata], r9, r9\n\tld\tr9, r9\n\tst.1\tr8, r9\n\tst.1.inc\tr6, r7, r6\n\tadd\t64, r4, r4\n\tsub!\tr4, r5, r7\n\tjump.lt\t@.BB0_107\n\tjump\t@.BB0_111\n.BB0_65:\n\tadd\t128, r12, r7\n.BB0_66:\n\tsub\tr2, r5, r8\n\tadd\t@CPI0_14[0], r0, r9\n\tsub.s!\t64, r8, r10\n\tadd\t0, r0, r10\n\tadd.lt\tr9, r0, r10\n\tand\t@CPI0_14[0], r8, r8\n\tsub.s!\t0, r8, r11\n\tadd.le\t0, r0, r9\n\tsub.s!\t@CPI0_14[0], r8, r8\n\tadd\tr10, r0, r8\n\tadd.eq\tr9, r0, r8\n\tsub.s!\t0, r8, r8\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r8\n\tsub.s!\t@CPI0_17[0], r8, r9\n\tjump.gt\t@.BB0_17\n\tadd\t64, r8, r9\n\tst.1\t64, r9\n\tptr.add\tstack[@ptr_calldata], r5, r9\n\tld\tr9, r9\n\tsub.s!\t@CPI0_18[0], r9, r10\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr8, r9, r9\n\tadd\t32, r5, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tld\tr10, r10\n\tst.1\tr9, r10\n\tst.1.inc\tr7, r8, r7\n\tadd\t64, r5, r5\n\tsub!\tr5, r6, r8\n\tjump.lt\t@.BB0_66\n\tjump\t@.BB0_70\n.BB0_87:\n\tadd\t96, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tr0, r0, r4\n.BB0_88:\n\tld.1\tr3, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r4, r2\n\tjump.le\t@.BB0_89\n\tadd\tr4, r0, stack-[16]\n\tshl.s\t5, r4, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_25[0], r0, r4\n\tst.1\tr2, r4\n\tld.1.inc\tr3, r3, r4\n\tand\t@CPI0_18[0], r3, r3\n\tadd\t64, r1, r5\n\tst.1\tr5, r3\n\tld.1\tr4, r3\n\tadd\t96, r1, r4\n\tst.1\tr4, r3\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_26[0], r1, r3\n\tjump.gt\t@.BB0_17\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[16], r0, r4\n\tsub!\tr2, r4, r2\n\tadd\tstack-[11], r0, r2\n\tjump.le\t@.BB0_89\n\tadd\tstack-[15], r0, r5\n\tadd\tr5, r2, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r4, r4\n\tadd\tstack-[14], r0, r1\n\tsub!\tr4, r1, r1\n\tjump.lt\t@.BB0_88\n\tjump\t@.BB0_94\n.BB0_143:\n\tadd\t96, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t32784, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tr0, r0, stack-[16]\n.BB0_144:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tadd\tstack-[16], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_89\n\tadd\tstack-[16], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_25[0], r0, r4\n\tst.1\tr2, r4\n\tld.1.inc\tr3, r3, r4\n\tand\t@CPI0_18[0], r3, r3\n\tadd\t64, r1, r5\n\tst.1\tr5, r3\n\tld.1\tr4, r3\n\tadd\t96, r1, r4\n\tst.1\tr4, r3\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_26[0], r1, r3\n\tjump.gt\t@.BB0_17\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[16], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_89\n\tadd\tstack-[11], r0, r2\n\tadd\tstack-[15], r0, r3\n\tadd\tr3, r2, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[16], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[13], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB0_144\n\tjump\t@.BB0_149\n.BB0_89:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__keccak256:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_2\n\tld\tr1, r1\n\tret\n.BB1_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__system_request:\n.func_begin2:\n\tadd\tr1, r0, r3\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI2_0[0], r4, r5\n\tadd.lt\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r2, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI2_1[0], r1, r1\n\tadd\tr3, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation_10221:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t160, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation_12002:\n.func_begin4:\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t192, r1, r1\n\tst.1\t64, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfinalize_allocation:\n.func_begin5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tjump.gt\t@.BB5_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_2\n\tst.1\t64, r1\n\tret\n.BB5_2:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_decode_string_calldata:\n.func_begin6:\n\tadd\t31, r1, r3\n\tadd\t@CPI6_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI6_0[0], r2, r6\n\tand\t@CPI6_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\t0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI6_0[0], r3, r3\n\tadd\tr5, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub.s!\t0, r3, r3\n\tjump.eq\t@.BB6_1\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI6_1[0], r3, r4\n\tjump.gt\t@.BB6_1\n\tadd\t32, r1, r1\n\tadd\tr1, r3, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB6_1\n\tadd\tr3, r0, r2\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_DOMAIN_SEPARATOR:\n.func_begin7:\n\tnop\tstack+=[2]\n\tadd\t@CPI7_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI7_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB7_5\n\tadd\t@CPI7_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB7_4\n\tjump\t@.BB7_1\n.BB7_5:\n\tld.1\t64, r3\n\tadd\t64, r3, r1\n\tadd\t@CPI7_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[2]\n\tadd\t32, r3, r2\n\tadd\t@CPI7_6[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_4[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r4\n\tadd\t128, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\t128, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI7_7[0], r4, r1\n\tjump.ge\t@.BB7_7\n\tadd\t160, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t@CPI7_1[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI7_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_1[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI7_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n.BB7_4:\n\tld\tr1, r1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_7:\n\tadd\t@CPI7_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_permitTransferFrom:\n.func_begin8:\n\tnop\tstack+=[10]\n\tadd\tr5, r0, stack-[5]\n\tadd\tr4, r0, stack-[4]\n\tadd\tr3, r0, stack-[6]\n\tadd\tr2, r0, stack-[10]\n\tadd\tr1, r0, stack-[8]\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t164, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI8_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r3\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB8_3\n\tadd\tstack-[8], r0, r1\n\tld.1.inc\tr1, r1, r2\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tsub!\tr3, r1, r3\n\tjump.gt\t@.BB8_5\n\tld.1\tr2, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[10], r0, r1\n\tand\t@CPI8_3[0], r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tshr.s\t8, r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tadd\tstack-[9], r0, r2\n\tand\t255, r2, r2\n\tshl\t1, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\txor\tr3, r2, r3\n\tsstore\tr1, r3\n\tand!\tr3, r2, r1\n\tjump.eq\t@.BB8_9\n\tadd\t@CPI8_5[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[2]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t36, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t@CPI8_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB8_13\n\tadd\t@CPI8_5[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_6[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_18\n\tjump\t@.BB8_1\n.BB8_13:\n\tld.1\t64, r3\n\tadd\t64, r3, r1\n\tadd\t@CPI8_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[9]\n\tadd\t32, r3, r2\n\tadd\t@CPI8_9[0], r0, r1\n\tadd\tr2, r0, stack-[2]\n\tst.1\tr2, r1\n\tadd\t@CPI8_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r4\n\tadd\t128, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\t128, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI8_10[0], r4, r1\n\tjump.ge\t@.BB8_15\n\tadd\t160, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tadd\tstack-[2], r0, r3\n\tsub.s!\t@CPI8_1[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI8_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n.BB8_18:\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t66, r1, r2\n\tadd\tstack-[6], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\t@CPI8_12[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r1, r4\n\tst.1\tr4, r3\n\tadd\t66, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI8_13[0], r1, r3\n\tjump.gt\t@.BB8_15\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI8_1[0], r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI8_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t@CPI8_14[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_15[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB8_44\n\tld.1\t64, r10\n\tadd\t36, r10, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_16[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r10, r1\n\tadd\tstack-[5], r0, r8\n\tst.1\tr1, r8\n\tand\t31, r8, r2\n\tadd\t100, r10, r1\n\tadd\tstack-[4], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r8, r4\n\tjump.eq\t@.BB8_81\n\tadd\tr0, r0, r5\n.BB8_24:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB8_24\n.BB8_81:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB8_26\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB8_26:\n\tadd\tr1, r8, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB8_28\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB8_38\n.BB8_44:\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t65, r2, r1\n\tjump.ne\t@.BB8_50\n\tadd\tstack-[4], r0, r4\n\tadd\t64, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r3\n\tadd\t32, r4, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tld\tr3, r3\n\tshr.s\t248, r3, r3\n\tjump\t@.BB8_45\n.BB8_28:\n\tadd\t31, r8, r4\n\tsub.s\t32, r0, r3\n\tand\tr4, r3, r5\n\tadd\t@CPI8_1[0], r0, r3\n\tsub.s!\t@CPI8_1[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t100, r5, r6\n\tsub.s!\t@CPI8_1[0], r6, r5\n\tadd\tr3, r0, r5\n\tadd.lt\tr6, r0, r5\n\tshl.s\t96, r5, r5\n\tor\tr4, r5, r5\n\tsub.s!\t@CPI8_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r5, r1\n\tadd\tr10, r0, stack-[9]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB8_80\n\tadd\tr0, r0, r7\n.BB8_30:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB8_30\n.BB8_80:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB8_32\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB8_32:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_33\n.BB8_38:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI8_17[0], r1, r4\n\tjump.gt\t@.BB8_15\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_15\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB8_1\n\tld.1\tr10, r2\n\tand\t@CPI8_18[0], r2, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB8_1\n\tsub.s!\t@CPI8_16[0], r2, r2\n\tjump.eq\t@.BB8_63\n\tadd\t@CPI8_19[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_1[0], r0, r2\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_50:\n\tsub.s!\t64, r2, r1\n\tadd\tstack-[4], r0, r4\n\tjump.ne\t@.BB8_51\n\tadd\t32, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r2\n\tld\tr2, r3\n\tand\t@CPI8_22[0], r3, r2\n\tshr.s\t255, r3, r3\n\tadd\t27, r3, r3\n.BB8_45:\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r5\n\tst.1\tr5, r2\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r3\n\tadd\tstack-[9], r0, r1\n\tst.1\tr4, r1\n\tst.1\t0, r0\n\tadd\t@CPI8_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI8_1[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_23[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB8_78\n\tadd\tr0, r0, r6\n.BB8_47:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB8_47\n.BB8_78:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB8_49\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB8_49:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_54\n\tld.1\t0, r1\n\tand!\t@CPI8_3[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.eq\t@.BB8_60\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB8_62\n.BB8_63:\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r1\n\tand\t@CPI8_3[0], r1, r2\n\tadd\t132, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI8_3[0], r3, r1\n\tjump.gt\t@.BB8_1\n\tld.1\t64, r1\n\tadd\t68, r1, r4\n\tadd\tstack-[7], r0, r5\n\tst.1\tr4, r5\n\tadd\t36, r1, r4\n\tst.1\tr4, r3\n\tadd\t@CPI8_25[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r3\n\tadd\tstack-[10], r0, r4\n\tst.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB8_68\n\tadd\tr0, r0, r2\n.BB8_66:\n\tshl.s\t5, r2, r3\n\tadd\tr1, r3, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB8_66\n\tadd\t1, r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB8_73\n.BB8_68:\n\tadd\t@CPI8_1[0], r0, r4\n\tsub.s!\t@CPI8_1[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI8_1[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tor\t@CPI8_26[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB8_76\n\tadd\tr0, r0, r6\n.BB8_70:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB8_70\n.BB8_76:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB8_72\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr4, r1\n.BB8_72:\n\tand\t1, r2, r1\n\tadd\tr3, r0, stack[@returndatasize]\n.BB8_73:\n\tld.1\t0, r2\n\tsub.s!\t1, r2, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t31, r3, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\tr4, r2, r2\n\tsub.s!\t0, r3, r3\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tor\tr3, r2, r2\n\tand!\tr2, r1, r1\n\tjump.eq\t@.BB8_74\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_15:\n\tadd\t@CPI8_30[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_31[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_3:\n\tld.1\t64, r1\n\tadd\t@CPI8_34[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI8_1[0], r0, r2\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_5:\n\tld.1\t64, r2\n\tadd\t@CPI8_33[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tsub.s!\t@CPI8_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_9:\n\tld.1\t64, r1\n\tadd\t@CPI8_32[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_1[0], r0, r2\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_74:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI8_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_28[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_1[0], r0, r2\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_54:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB8_77\n\tadd\tr0, r0, r5\n.BB8_56:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB8_56\n.BB8_77:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB8_58\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB8_58:\n\tadd\t@CPI8_1[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_60:\n\tld.1\t64, r1\n\tadd\t@CPI8_29[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_1[0], r0, r2\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_62:\n\tld.1\t64, r1\n\tadd\t@CPI8_24[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_1[0], r0, r2\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_33:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB8_79\n\tadd\tr0, r0, r5\n.BB8_35:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB8_35\n.BB8_79:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB8_37\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB8_37:\n\tadd\t@CPI8_1[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_51:\n\tld.1\t64, r1\n\tadd\t@CPI8_21[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_1[0], r0, r2\n\tsub.s!\t@CPI8_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun__permitTransferFrom:\n.func_begin9:\n\tnop\tstack+=[11]\n\tadd\tr7, r0, stack-[3]\n\tadd\tr6, r0, stack-[2]\n\tadd\tr5, r0, stack-[4]\n\tadd\tr4, r0, stack-[9]\n\tadd\tr3, r0, stack-[7]\n\tadd\tr2, r0, stack-[10]\n\tadd\t64, r1, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr1, r0, stack-[11]\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[5]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI9_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r4\n\tsub!\tr1, r4, r1\n\tjump.gt\t@.BB9_3\n\tadd\tstack-[6], r0, r1\n\tsub!\tr1, r3, r1\n\tjump.ne\t@.BB9_5\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[9], r0, r1\n\tand\t@CPI9_5[0], r1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tshr.s\t8, r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tadd\tstack-[8], r0, r2\n\tand\t255, r2, r2\n\tshl\t1, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\txor\tr3, r2, r3\n\tsstore\tr1, r3\n\tand!\tr3, r2, r1\n\tjump.eq\t@.BB9_9\n\tadd\t@CPI9_7[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[5]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t36, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_8[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI9_9[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB9_13\n\tadd\t@CPI9_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_8[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB9_18\n\tjump\t@.BB9_1\n.BB9_13:\n\tld.1\t64, r3\n\tadd\t64, r3, r1\n\tadd\t@CPI9_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[8]\n\tadd\t32, r3, r2\n\tadd\t@CPI9_11[0], r0, r1\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r1\n\tadd\t@CPI9_9[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r4\n\tadd\t128, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\t128, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI9_12[0], r4, r1\n\tjump.ge\t@.BB9_15\n\tadd\t160, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tadd\tstack-[5], r0, r3\n\tsub.s!\t@CPI9_1[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI9_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI9_1[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI9_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n.BB9_18:\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t66, r1, r2\n\tadd\tstack-[4], r0, r4\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tadd\t@CPI9_14[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t34, r1, r4\n\tst.1\tr4, r3\n\tadd\t66, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI9_15[0], r1, r3\n\tjump.gt\t@.BB9_15\n\tadd\t128, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI9_1[0], r0, r3\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI9_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI9_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI9_16[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_17[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r8\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB9_44\n\tld.1\t64, r10\n\tadd\t36, r10, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_18[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r10, r1\n\tadd\tstack-[3], r0, r9\n\tst.1\tr1, r9\n\tand\t31, r9, r2\n\tadd\t100, r10, r1\n\tadd\tstack-[2], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r9, r4\n\tjump.eq\t@.BB9_90\n\tadd\tr0, r0, r5\n.BB9_24:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB9_24\n.BB9_90:\n\tsub.s!\t0, r2, r5\n\tjump.eq\t@.BB9_26\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB9_26:\n\tadd\tr1, r9, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB9_28\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tjump\t@.BB9_38\n.BB9_44:\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t65, r2, r1\n\tjump.ne\t@.BB9_50\n\tadd\tstack-[2], r0, r4\n\tadd\t64, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r3\n\tadd\t32, r4, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tld\tr3, r3\n\tshr.s\t248, r3, r3\n\tjump\t@.BB9_45\n.BB9_28:\n\tadd\t31, r9, r4\n\tsub.s\t32, r0, r3\n\tand\tr4, r3, r5\n\tadd\t@CPI9_1[0], r0, r3\n\tsub.s!\t@CPI9_1[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t100, r5, r6\n\tsub.s!\t@CPI9_1[0], r6, r5\n\tadd\tr3, r0, r5\n\tadd.lt\tr6, r0, r5\n\tshl.s\t96, r5, r5\n\tor\tr4, r5, r5\n\tsub.s!\t@CPI9_1[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r5, r1\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI9_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB9_89\n\tadd\tr0, r0, r7\n.BB9_30:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB9_30\n.BB9_89:\n\tsub.s!\t0, r5, r7\n\tjump.eq\t@.BB9_32\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB9_32:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[7], r0, r8\n\tjump.eq\t@.BB9_33\n.BB9_38:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI9_19[0], r1, r4\n\tjump.gt\t@.BB9_15\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB9_15\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB9_1\n\tld.1\tr10, r2\n\tand\t@CPI9_20[0], r2, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB9_1\n\tsub.s!\t@CPI9_18[0], r2, r2\n\tjump.eq\t@.BB9_63\n\tadd\t@CPI9_21[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_50:\n\tsub.s!\t64, r2, r1\n\tadd\tstack-[2], r0, r4\n\tjump.ne\t@.BB9_51\n\tadd\t32, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r2, r2\n\tld\tr2, r3\n\tand\t@CPI9_23[0], r3, r2\n\tshr.s\t255, r3, r3\n\tadd\t27, r3, r3\n.BB9_45:\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r5\n\tst.1\tr5, r2\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r3\n\tadd\tstack-[8], r0, r1\n\tst.1\tr4, r1\n\tst.1\t0, r0\n\tadd\t@CPI9_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI9_1[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI9_24[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI9_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB9_87\n\tadd\tr0, r0, r6\n.BB9_47:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB9_47\n.BB9_87:\n\tsub.s!\t0, r5, r6\n\tjump.eq\t@.BB9_49\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB9_49:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[7], r0, r8\n\tjump.eq\t@.BB9_54\n\tld.1\t0, r1\n\tand!\t@CPI9_5[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tjump.eq\t@.BB9_60\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB9_62\n.BB9_63:\n\tsub.s!\t0, r8, r1\n\tjump.eq\t@.BB9_69\n\tadd\tr0, r0, r7\n\tjump\t@.BB9_65\n.BB9_82:\n\tand\t1, r2, r1\n\tadd\tr3, r0, stack[@returndatasize]\n.BB9_83:\n\tld.1\t0, r2\n\tsub.s!\t1, r2, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tsub.s!\t31, r3, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\tr4, r2, r2\n\tsub.s!\t0, r3, r3\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tor\tr3, r2, r2\n\tand!\tr2, r1, r1\n\tjump.eq\t@.BB9_84\n.BB9_73:\n\tadd\t1, r7, r7\n\tsub!\tr7, r8, r1\n\tjump.ge\t@.BB9_69\n.BB9_65:\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r7, r2\n\tjump.le\t@.BB9_66\n\tsub!\tr7, r8, r2\n\tjump.ge\t@.BB9_66\n\tshl.s\t5, r7, r2\n\tadd\tr2, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tshl.s\t6, r7, r2\n\tadd\tstack-[10], r0, r3\n\tadd\tr2, r3, r2\n\tadd\t32, r2, r3\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add\tr4, r3, r3\n\tld\tr3, r3\n\tadd\t32, r1, r5\n\tld.1\tr5, r5\n\tsub!\tr3, r5, r6\n\tjump.gt\t@.BB9_70\n\tsub.s!\t0, r3, r5\n\tjump.eq\t@.BB9_73\n\tptr.add\tr4, r2, r4\n\tld.1\tr1, r1\n\tand\t@CPI9_5[0], r1, r2\n\tld\tr4, r4\n\tsub.s!\t@CPI9_28[0], r4, r1\n\tjump.ge\t@.BB9_1\n\tld.1\t64, r1\n\tadd\t68, r1, r5\n\tst.1\tr5, r3\n\tadd\t36, r1, r3\n\tst.1\tr3, r4\n\tadd\t@CPI9_29[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r3\n\tadd\tstack-[9], r0, r4\n\tst.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB9_78\n\tadd\tr0, r0, r2\n.BB9_76:\n\tshl.s\t5, r2, r3\n\tadd\tr1, r3, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB9_76\n\tadd\t1, r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB9_83\n.BB9_78:\n\tadd\tr7, r0, stack-[8]\n\tadd\t@CPI9_1[0], r0, r4\n\tsub.s!\t@CPI9_1[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI9_1[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tor\t@CPI9_30[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI9_1[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB9_85\n\tadd\tr0, r0, r6\n.BB9_80:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB9_80\n.BB9_85:\n\tand!\t31, r5, r5\n\tadd\tstack-[7], r0, r8\n\tadd\tstack-[8], r0, r7\n\tjump.eq\t@.BB9_82\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr4, r1\n\tjump\t@.BB9_82\n.BB9_69:\n\tret\n.BB9_66:\n\tadd\t@CPI9_26[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_27[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_70:\n\tld.1\t64, r1\n\tadd\t@CPI9_33[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r5\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_27[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_84:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI9_31[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_32[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_30[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_15:\n\tadd\t@CPI9_26[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_27[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_3:\n\tld.1\t64, r1\n\tadd\t@CPI9_36[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r4\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_27[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_5:\n\tld.1\t64, r1\n\tadd\t@CPI9_3[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_9:\n\tld.1\t64, r1\n\tadd\t@CPI9_35[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_54:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB9_86\n\tadd\tr0, r0, r5\n.BB9_56:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB9_56\n.BB9_86:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB9_58\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB9_58:\n\tadd\t@CPI9_1[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI9_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_60:\n\tld.1\t64, r1\n\tadd\t@CPI9_34[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_62:\n\tld.1\t64, r1\n\tadd\t@CPI9_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_33:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB9_88\n\tadd\tr0, r0, r5\n.BB9_35:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB9_35\n.BB9_88:\n\tsub.s!\t0, r4, r5\n\tjump.eq\t@.BB9_37\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB9_37:\n\tadd\t@CPI9_1[0], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t@CPI9_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI9_1[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_51:\n\tld.1\t64, r1\n\tadd\t@CPI9_22[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nabi_encode_array_bytes32_dyn:\n.func_begin10:\n\tld.1\tr1, r3\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB10_3\n\tadd\tr0, r0, r4\n.BB10_2:\n\tadd\t32, r1, r1\n\tld.1\tr1, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB10_2\n.BB10_3:\n\tadd\tr2, r0, r1\n\tret\n.func_end10:\n\nabi_encode_string:\n.func_begin11:\n\tld.1\tr1, r3\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB11_3\n\tadd\tr0, r0, r4\n.BB11_2:\n\tadd\tr4, r2, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB11_2\n.BB11_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tret\n.func_end11:\n\nabi_encode_bytes32_bytes32_address_uint256_uint256_bytes32:\n.func_begin12:\n\tadd\t160, r1, r8\n\tst.1\tr8, r7\n\tadd\t128, r1, r7\n\tst.1\tr7, r6\n\tadd\t96, r1, r6\n\tst.1\tr6, r5\n\tand\t@CPI12_0[0], r4, r4\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tst.1\tr1, r2\n\tadd\t192, r1, r1\n\tret\n.func_end12:\n\nfun_hashTokenPermissions:\n.func_begin13:\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tadd\t@CPI13_0[0], r0, r4\n\tst.1\tr3, r4\n\tld.1.inc\tr1, r1, r4\n\tand\t@CPI13_1[0], r1, r1\n\tadd\t64, r2, r5\n\tst.1\tr5, r1\n\tld.1\tr4, r1\n\tadd\t96, r2, r4\n\tst.1\tr4, r1\n\tadd\t96, r0, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI13_2[0], r2, r1\n\tjump.ge\t@.BB13_1\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\t@CPI13_3[0], r0, r1\n\tsub.s!\t@CPI13_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI13_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI13_3[0], r3, r4\n\tadd.lt\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI13_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_3\n\tld\tr1, r1\n\tret\n.BB13_1:\n\tadd\t@CPI13_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\n__farcall:\n.func_begin14:\n.tmp0:\n\tfar_call\tr1, r2, @.BB14_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB14_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end14:\n\n__staticcall:\n.func_begin15:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB15_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB15_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end15:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_0:\nCPI7_1:\nCPI8_1:\nCPI9_1:\nCPI13_3:\n\t.cell 4294967295\nCPI0_1:\nCPI7_3:\nCPI8_7:\nCPI9_9:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_2:\nCPI7_6:\nCPI8_9:\nCPI9_11:\n\t.cell -52161594716389521330893928962118603104092639720612062241465413496839451137946\nCPI0_3:\nCPI7_5:\nCPI8_8:\nCPI9_10:\n\t.cell -45779730367734237300416505028998464482483735542981242881131590982248139992214\nCPI0_4:\n\t.cell 53919893334301279589334030174039261362486096052542264263037304176640\nCPI0_5:\n\t.cell 1073339568\nCPI0_6:\n\t.cell 3990438986\nCPI0_7:\n\t.cell 3990438987\nCPI0_8:\n\t.cell 4270768551\nCPI0_9:\n\t.cell 1073339569\nCPI0_10:\n\t.cell 1340091204\nCPI0_11:\n\t.cell 326904318\nCPI0_12:\n\t.cell 821201786\nCPI0_13:\n\t.cell 910484757\nCPI0_14:\nCPI6_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_15:\nCPI5_0:\nCPI6_1:\nCPI8_17:\nCPI9_19:\n\t.cell 18446744073709551615\nCPI0_16:\n\t.cell 18446744073709551519\nCPI0_17:\n\t.cell 18446744073709551551\nCPI0_18:\nCPI8_3:\nCPI9_5:\nCPI12_0:\nCPI13_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_19:\n\t.cell 18446744073709551455\nCPI0_20:\n\t.cell 24482125837415189826193954846931915305796936482980204944253573417775359066112\nCPI0_21:\n\t.cell 45887579695064744350438288568983904622698081512668883793020143111986962772533\nCPI0_22:\n\t.cell 50396478879115731667501023508898187513284017248092665020259100045602556503154\nCPI0_23:\n\t.cell 36364269189027265657849793126811529603360992855128991335683039462307780175956\nCPI0_24:\nCPI1_1:\nCPI7_8:\nCPI8_11:\nCPI9_13:\nCPI13_4:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_25:\nCPI13_0:\n\t.cell 44106415275352249113444967718141186665599676077178725771330103259701384644257\nCPI0_26:\nCPI8_13:\nCPI9_15:\n\t.cell 18446744073709551487\nCPI0_27:\nCPI3_1:\nCPI4_1:\nCPI5_1:\nCPI7_9:\nCPI8_30:\nCPI9_26:\nCPI13_5:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_28:\nCPI3_2:\nCPI4_2:\nCPI5_2:\nCPI7_10:\nCPI8_31:\nCPI9_27:\nCPI13_6:\n\t.cell 2852213850513516153367582212096\nCPI0_29:\n\t.cell -1379249444374983727103743338131876140780887249151639403762952341926609438874\nCPI0_30:\n\t.cell 2535301200456458802993406410752\nCPI0_31:\nCPI8_4:\nCPI9_6:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_32:\n\t.cell 24885269194749830475812991193303187181597602674742320143500459090804363465101\nCPI0_33:\n\t.cell -49026240159818504903981134379649553742198394140906139455299181134923405197050\nCPI0_34:\n\t.cell 18446744073709551520\nCPI0_35:\n\t.cell 47687900540987272257023881420742124550618237578713499480529411956393262448640\nCPI0_36:\n\t.cell 49931798205134128319682575132504678990741255784315358791419842096215747552364\nCPI0_37:\n\t.cell 45885773405599232487416464989104885674915664378852087144662249645329268043877\nCPI0_38:\n\t.cell 36364269189027299453766588957930272399916463196798095343972910781529072168528\nCPI2_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\nCPI3_0:\nCPI7_7:\nCPI8_10:\nCPI9_12:\n\t.cell 18446744073709551456\nCPI4_0:\n\t.cell 18446744073709551424\nCPI7_0:\nCPI8_5:\nCPI9_7:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI7_2:\nCPI8_6:\nCPI9_8:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI7_4:\nCPI8_2:\nCPI9_2:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI8_0:\nCPI9_0:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI8_12:\nCPI9_14:\n\t.cell 11309588061646438093662687302255421419811724423900836950936401294474059186176\nCPI8_14:\nCPI9_16:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI8_15:\nCPI9_17:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI8_16:\nCPI9_18:\n\t.cell 10019309979067222254582373821846632475949454479833780424560900009889672200192\nCPI8_18:\nCPI9_20:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI8_19:\nCPI9_21:\n\t.cell -36003727745153843115977315250825841939871317833748553110671859368683366252544\nCPI8_20:\nCPI9_4:\n\t.cell 316912650057057350374175801344\nCPI8_21:\nCPI9_22:\n\t.cell 34330184283879907065060116633237427963330662859944784284226023607124268941312\nCPI8_22:\nCPI9_23:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819967\nCPI8_23:\nCPI9_24:\n\t.cell 10141204801825835211973625643008\nCPI8_24:\nCPI9_25:\n\t.cell -57277445299346939555017523304462417710394184523039180189118882009940632797184\nCPI8_25:\nCPI9_29:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI8_26:\nCPI9_30:\n\t.cell 7922816251426433759354395033600\nCPI8_27:\nCPI9_31:\n\t.cell 38139611465464413496808039553746763673334662531416629107351575709807806513152\nCPI8_28:\nCPI9_32:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI8_29:\nCPI9_34:\n\t.cell -52619634544666151247648531991310182301038485061963141803196352251815302004736\nCPI8_32:\nCPI9_35:\n\t.cell 53101767170179179614234022059546774853126925491354750665263665077259834753024\nCPI8_33:\nCPI9_33:\n\t.cell 24949152120555342893642076180256588724364794719800428814778150814029195509760\nCPI8_34:\nCPI9_36:\n\t.cell -23008135712323165285793291361946997288496412778811870996256870959443565608960\nCPI9_3:\n\t.cell -276993178125079126609077990423781266409355083808998631732833805395786989568\nCPI9_28:\n\t.cell 1461501637330902918203684832716283019655932542976\nCPI13_2:\n\t.cell 18446744073709551488\n","bytecode":{"object":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","invalidateUnorderedNonces(uint256,uint256)":"3ff9dcb1","nonceBitmap(address,uint256)":"4fe02b44","permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)":"30f28b7a","permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)":"edd9444b","permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)":"137c29fe","permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)":"fe8ec1a7"}},"irOptimized":"/// @use-src 3:\"src/EIP712.sol\", 6:\"src/SignatureTransfer.sol\", 10:\"src/interfaces/ISignatureTransfer.sol\"\nobject \"SignatureTransfer_1577\" {\n    code {\n        {\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            /// @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\"\n            mstore(160, /** @src 3:856:869  \"block.chainid\" */ chainid())\n            /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n            let _2 := add(_1, 0x20)\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            mstore(_2, /** @src 3:726:806  \"keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\")\" */ 0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866)\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 64), /** @src 3:654:674  \"keccak256(\\\"Permit2\\\")\" */ 0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a)\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 96), /** @src 3:856:869  \"block.chainid\" */ chainid())\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ _1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 128), /** @src 3:1614:1618  \"this\" */ address())\n            /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n            mstore(_1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 128)\n            let newFreePtr := add(_1, /** @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\" */ 160)\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            /// @src 3:879:953  \"_CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME)\"\n            mstore(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 128, /** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _2, mload(/** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ _1)))\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            let _3 := datasize(\"SignatureTransfer_1577_deployed\")\n            codecopy(newFreePtr, dataoffset(\"SignatureTransfer_1577_deployed\"), _3)\n            setimmutable(newFreePtr, \"1026\", mload(128))\n            setimmutable(newFreePtr, \"1028\", mload(/** @src 3:837:869  \"_CACHED_CHAIN_ID = block.chainid\" */ 160))\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            return(newFreePtr, _3)\n        }\n    }\n    /// @use-src 1:\"lib/solmate/src/utils/SafeTransferLib.sol\", 3:\"src/EIP712.sol\", 6:\"src/SignatureTransfer.sol\", 13:\"src/libraries/PermitHash.sol\", 15:\"src/libraries/SignatureVerification.sol\"\n    object \"SignatureTransfer_1577_deployed\" {\n        code {\n            {\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x137c29fe {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 320) { revert(_3, _3) }\n                        let value0 := abi_decode_struct_PermitTransferFrom(calldatasize())\n                        if slt(add(calldatasize(), not(131)), _1) { revert(_3, _3) }\n                        let value2 := abi_decode_address()\n                        let offset := calldataload(260)\n                        let _4 := 0xffffffffffffffff\n                        if gt(offset, _4) { revert(_3, _3) }\n                        let value4, value5 := abi_decode_string_calldata(add(_2, offset), calldatasize())\n                        let offset_1 := calldataload(292)\n                        if gt(offset_1, _4) { revert(_3, _3) }\n                        let value6, value7 := abi_decode_string_calldata(add(_2, offset_1), calldatasize())\n                        let memPtr := mload(_1)\n                        finalize_allocation_10221(memPtr)\n                        mstore(memPtr, 100)\n                        mstore(add(memPtr, 32), \"PermitWitnessTransferFrom(TokenP\")\n                        mstore(add(memPtr, _1), \"ermissions permitted,address spe\")\n                        mstore(add(memPtr, 96), \"nder,uint256 nonce,uint256 deadl\")\n                        mstore(add(memPtr, 128), \"ine,\")\n                        /// @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\"\n                        let expr_mpos := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(_1)\n                        /// @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\"\n                        let _5 := add(expr_mpos, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 32)\n                        /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n                        let _6 := abi_encode_string(/** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ memPtr, _5)\n                        /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n                        calldatacopy(_6, value4, value5)\n                        let _7 := add(_6, value5)\n                        mstore(_7, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _3)\n                        /// @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\"\n                        let _8 := sub(_7, expr_mpos)\n                        let _9 := not(31)\n                        mstore(expr_mpos, add(_8, _9))\n                        finalize_allocation(expr_mpos, _8)\n                        /// @src 13:4123:4214  \"keccak256(abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString))\"\n                        let expr := keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _5, mload(/** @src 13:4123:4214  \"keccak256(abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString))\" */ expr_mpos))\n                        /// @src 13:4256:4295  \"_hashTokenPermissions(permit.permitted)\"\n                        let expr_1 := fun_hashTokenPermissions(/** @src 13:4278:4294  \"permit.permitted\" */ mload(value0))\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        let _10 := mload(/** @src 13:4377:4389  \"permit.nonce\" */ add(value0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 32))\n                        let _11 := mload(/** @src 13:4391:4406  \"permit.deadline\" */ add(value0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1))\n                        /// @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\"\n                        let expr_mpos_1 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(_1)\n                        /// @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\"\n                        let _12 := add(expr_mpos_1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 32)\n                        /// @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\"\n                        let _13 := sub(abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32(_12, expr, expr_1, /** @src 13:4365:4375  \"msg.sender\" */ caller(), /** @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\" */ _10, _11, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ calldataload(228)), /** @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\" */ expr_mpos_1)\n                        mstore(expr_mpos_1, add(_13, /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ _9))\n                        /// @src 13:4322:4416  \"abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness)\"\n                        finalize_allocation(expr_mpos_1, _13)\n                        /// @src 6:1636:1645  \"signature\"\n                        fun_permitTransferFrom(value0, value2, /** @src 13:4312:4417  \"keccak256(abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness))\" */ keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _12, mload(/** @src 13:4312:4417  \"keccak256(abi.encode(typeHash, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline, witness))\" */ expr_mpos_1)), /** @src 6:1636:1645  \"signature\" */ value6, value7)\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        return(_3, _3)\n                    }\n                    case 0x30f28b7a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 256) { revert(_3, _3) }\n                        let value0_1 := abi_decode_struct_PermitTransferFrom(calldatasize())\n                        if slt(add(calldatasize(), not(131)), _1) { revert(_3, _3) }\n                        let value2_1 := abi_decode_address()\n                        let offset_2 := calldataload(228)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(_3, _3) }\n                        let value3, value4_1 := abi_decode_string_calldata(add(_2, offset_2), calldatasize())\n                        /// @src 13:3007:3046  \"_hashTokenPermissions(permit.permitted)\"\n                        let expr_2 := fun_hashTokenPermissions(/** @src 13:3029:3045  \"permit.permitted\" */ mload(value0_1))\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        let _14 := mload(/** @src 13:3163:3175  \"permit.nonce\" */ add(value0_1, 32))\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        let _15 := mload(/** @src 13:3177:3192  \"permit.deadline\" */ add(value0_1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1))\n                        /// @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\"\n                        let expr_mpos_2 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(_1)\n                        /// @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\"\n                        let _16 := add(expr_mpos_2, /** @src 13:3163:3175  \"permit.nonce\" */ 32)\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        mstore(_16, /** @src 13:1018:1184  \"keccak256(...\" */ 0x939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106)\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\" */ expr_mpos_2, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1), expr_2)\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\" */ expr_mpos_2, /** @src 13:1018:1184  \"keccak256(...\" */ 96), /** @src 13:3151:3161  \"msg.sender\" */ caller())\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\" */ expr_mpos_2, /** @src 13:1018:1184  \"keccak256(...\" */ 128), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _14)\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\" */ expr_mpos_2, /** @src 13:1018:1184  \"keccak256(...\" */ 160), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _15)\n                        /// @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\"\n                        mstore(expr_mpos_2, /** @src 13:1018:1184  \"keccak256(...\" */ 160)\n                        /// @src 13:3086:3193  \"abi.encode(_PERMIT_TRANSFER_FROM_TYPEHASH, tokenPermissionsHash, msg.sender, permit.nonce, permit.deadline)\"\n                        finalize_allocation_12002(expr_mpos_2)\n                        /// @src 6:1171:1180  \"signature\"\n                        fun_permitTransferFrom(value0_1, value2_1, /** @src 13:3063:3203  \"keccak256(...\" */ keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _16, mload(/** @src 13:3063:3203  \"keccak256(...\" */ expr_mpos_2)), /** @src 6:1171:1180  \"signature\" */ value3, value4_1)\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        return(_3, _3)\n                    }\n                    case 0x3644e515 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let ret := fun_DOMAIN_SEPARATOR()\n                        let memPos := mload(_1)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    case 0x3ff9dcb1 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value := calldataload(_2)\n                        let value_1 := calldataload(36)\n                        mstore(_3, /** @src 6:5438:5448  \"msg.sender\" */ caller())\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        mstore(32, _3)\n                        let dataSlot := keccak256(_3, _1)\n                        mstore(_3, value)\n                        mstore(32, dataSlot)\n                        let dataSlot_1 := keccak256(_3, _1)\n                        sstore(dataSlot_1, /** @src 6:5426:5466  \"nonceBitmap[msg.sender][wordPos] |= mask\" */ or(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ sload(/** @src 6:5426:5466  \"nonceBitmap[msg.sender][wordPos] |= mask\" */ dataSlot_1), value_1))\n                        /// @src 6:5482:5535  \"UnorderedNonceInvalidation(msg.sender, wordPos, mask)\"\n                        let _17 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(_1)\n                        mstore(_17, value)\n                        mstore(add(_17, 32), value_1)\n                        /// @src 6:5482:5535  \"UnorderedNonceInvalidation(msg.sender, wordPos, mask)\"\n                        log2(_17, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1, /** @src 6:5482:5535  \"UnorderedNonceInvalidation(msg.sender, wordPos, mask)\" */ 0x3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d, /** @src 6:5438:5448  \"msg.sender\" */ caller())\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        return(_3, _3)\n                    }\n                    case 0x4fe02b44 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value_2 := calldataload(_2)\n                        let _18 := and(value_2, sub(shl(160, 1), 1))\n                        if iszero(eq(value_2, _18)) { revert(_3, _3) }\n                        mstore(_3, _18)\n                        mstore(32, _3)\n                        let dataSlot_2 := keccak256(_3, _1)\n                        mstore(_3, calldataload(36))\n                        mstore(32, dataSlot_2)\n                        let _19 := sload(keccak256(_3, _1))\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, _19)\n                        return(memPos_1, 32)\n                    }\n                    case 0xedd9444b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_3, _3) }\n                        let offset_3 := calldataload(_2)\n                        let _20 := 0xffffffffffffffff\n                        if gt(offset_3, _20) { revert(_3, _3) }\n                        let value0_2 := abi_decode_struct_PermitBatchTransferFrom(add(_2, offset_3), calldatasize())\n                        let offset_4 := calldataload(36)\n                        if gt(offset_4, _20) { revert(_3, _3) }\n                        let value1, value2_2 := abi_decode_array_struct_SignatureTransferDetails_calldata_dyn_calldata(add(_2, offset_4), calldatasize())\n                        let value3_1 := abi_decode_address_6820()\n                        let offset_5 := calldataload(100)\n                        if gt(offset_5, _20) { revert(_3, _3) }\n                        let value4_2, value5_1 := abi_decode_string_calldata(add(_2, offset_5), calldatasize())\n                        let length := mload(/** @src 13:3353:3369  \"permit.permitted\" */ mload(value0_2))\n                        /// @src 13:3427:3454  \"new bytes32[](numPermitted)\"\n                        let expr_mpos_3 := allocate_and_zero_memory_array_array_bytes32_dyn(length)\n                        /// @src 13:3470:3483  \"uint256 i = 0\"\n                        let var_i := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _3\n                        /// @src 13:3465:3602  \"for (uint256 i = 0; i < numPermitted; ++i) {...\"\n                        for { }\n                        /** @src 13:3485:3501  \"i < numPermitted\" */ lt(var_i, length)\n                        /// @src 13:3470:3483  \"uint256 i = 0\"\n                        {\n                            /// @src 13:3503:3506  \"++i\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                            mstore(/** @src 13:3522:3591  \"tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i])\" */ memory_array_index_access_struct_TokenPermissions_dyn(expr_mpos_3, var_i), /** @src 13:3549:3591  \"_hashTokenPermissions(permit.permitted[i])\" */ fun_hashTokenPermissions(/** @src 13:3571:3590  \"permit.permitted[i]\" */ mload(memory_array_index_access_struct_TokenPermissions_dyn(/** @src 13:3571:3587  \"permit.permitted\" */ mload(value0_2), /** @src 13:3571:3590  \"permit.permitted[i]\" */ var_i))))\n                        }\n                        /// @src 13:3734:3773  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let expr_mpos_4 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(_1)\n                        /// @src 13:3734:3773  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let _21 := add(expr_mpos_4, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 32)\n                        /// @src 13:3734:3773  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let _22 := sub(/** @src 13:1254:1427  \"keccak256(...\" */ abi_encode_array_bytes32_dyn(/** @src 13:3734:3773  \"abi.encodePacked(tokenPermissionHashes)\" */ expr_mpos_3, _21), expr_mpos_4)\n                        mstore(expr_mpos_4, add(_22, /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ not(31)))\n                        /// @src 13:3734:3773  \"abi.encodePacked(tokenPermissionHashes)\"\n                        finalize_allocation(expr_mpos_4, _22)\n                        /// @src 13:3724:3774  \"keccak256(abi.encodePacked(tokenPermissionHashes))\"\n                        let expr_3 := keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _21, mload(/** @src 13:3724:3774  \"keccak256(abi.encodePacked(tokenPermissionHashes))\" */ expr_mpos_4))\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        let _23 := mload(/** @src 13:3820:3832  \"permit.nonce\" */ add(value0_2, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 32))\n                        let _24 := mload(/** @src 13:3850:3865  \"permit.deadline\" */ add(value0_2, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1))\n                        /// @src 13:3642:3879  \"abi.encode(...\"\n                        let expr_mpos_5 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(_1)\n                        /// @src 13:3642:3879  \"abi.encode(...\"\n                        let _25 := add(expr_mpos_5, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 32)\n                        mstore(_25, /** @src 13:1254:1427  \"keccak256(...\" */ 0xfcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766)\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3642:3879  \"abi.encode(...\" */ expr_mpos_5, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1), expr_3)\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3642:3879  \"abi.encode(...\" */ expr_mpos_5, /** @src 13:1018:1184  \"keccak256(...\" */ 96), /** @src 13:3792:3802  \"msg.sender\" */ caller())\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3642:3879  \"abi.encode(...\" */ expr_mpos_5, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 128), _23)\n                        mstore(/** @src 13:1018:1184  \"keccak256(...\" */ add(/** @src 13:3642:3879  \"abi.encode(...\" */ expr_mpos_5, /** @src 13:1018:1184  \"keccak256(...\" */ 160), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _24)\n                        /// @src 13:3642:3879  \"abi.encode(...\"\n                        mstore(expr_mpos_5, /** @src 13:1018:1184  \"keccak256(...\" */ 160)\n                        /// @src 13:3642:3879  \"abi.encode(...\"\n                        finalize_allocation_12002(expr_mpos_5)\n                        /// @src 6:3199:3208  \"signature\"\n                        fun__permitTransferFrom(value0_2, value1, value2_2, value3_1, /** @src 13:3619:3889  \"keccak256(...\" */ keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _25, mload(/** @src 13:3619:3889  \"keccak256(...\" */ expr_mpos_5)), /** @src 6:3199:3208  \"signature\" */ value4_2, value5_1)\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        return(_3, _3)\n                    }\n                    case 0xfe8ec1a7 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 192) { revert(_3, _3) }\n                        let offset_6 := calldataload(_2)\n                        let _26 := 0xffffffffffffffff\n                        if gt(offset_6, _26) { revert(_3, _3) }\n                        let value0_3 := abi_decode_struct_PermitBatchTransferFrom(add(_2, offset_6), calldatasize())\n                        let offset_7 := calldataload(36)\n                        if gt(offset_7, _26) { revert(_3, _3) }\n                        let value1_1, value2_3 := abi_decode_array_struct_SignatureTransferDetails_calldata_dyn_calldata(add(_2, offset_7), calldatasize())\n                        let value3_2 := abi_decode_address_6820()\n                        let offset_8 := calldataload(132)\n                        if gt(offset_8, _26) { revert(_3, _3) }\n                        let value5_2, value6_1 := abi_decode_string_calldata(add(_2, offset_8), calldatasize())\n                        let offset_9 := calldataload(164)\n                        if gt(offset_9, _26) { revert(_3, _3) }\n                        let value7_1, value8 := abi_decode_string_calldata(add(_2, offset_9), calldatasize())\n                        let memPtr_1 := mload(_1)\n                        finalize_allocation_10221(memPtr_1)\n                        mstore(memPtr_1, 107)\n                        mstore(add(memPtr_1, 32), \"PermitBatchWitnessTransferFrom(T\")\n                        mstore(add(memPtr_1, _1), \"okenPermissions[] permitted,addr\")\n                        mstore(add(memPtr_1, 96), \"ess spender,uint256 nonce,uint25\")\n                        mstore(add(memPtr_1, 128), \"6 deadline,\")\n                        /// @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\"\n                        let expr_mpos_6 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(_1)\n                        /// @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\"\n                        let _27 := add(expr_mpos_6, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 32)\n                        /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n                        let _28 := abi_encode_string(/** @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\" */ memPtr_1, _27)\n                        /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n                        calldatacopy(_28, value5_2, value6_1)\n                        let _29 := add(_28, value6_1)\n                        mstore(_29, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _3)\n                        /// @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\"\n                        let _30 := sub(_29, expr_mpos_6)\n                        let _31 := /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ not(31)\n                        /// @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\"\n                        mstore(expr_mpos_6, add(_30, _31))\n                        finalize_allocation(expr_mpos_6, _30)\n                        /// @src 13:4668:4765  \"keccak256(abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString))\"\n                        let expr_4 := keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _27, mload(/** @src 13:4668:4765  \"keccak256(abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString))\" */ expr_mpos_6))\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        let length_1 := mload(/** @src 13:4799:4815  \"permit.permitted\" */ mload(value0_3))\n                        /// @src 13:4873:4900  \"new bytes32[](numPermitted)\"\n                        let expr_mpos_7 := allocate_and_zero_memory_array_array_bytes32_dyn(length_1)\n                        /// @src 13:4916:4929  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _3\n                        /// @src 13:4911:5048  \"for (uint256 i = 0; i < numPermitted; ++i) {...\"\n                        for { }\n                        /** @src 13:4931:4947  \"i < numPermitted\" */ lt(var_i_1, length_1)\n                        /// @src 13:4916:4929  \"uint256 i = 0\"\n                        {\n                            /// @src 13:4949:4952  \"++i\"\n                            var_i_1 := increment_uint256(var_i_1)\n                        }\n                        {\n                            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                            mstore(/** @src 13:4968:5037  \"tokenPermissionHashes[i] = _hashTokenPermissions(permit.permitted[i])\" */ memory_array_index_access_struct_TokenPermissions_dyn(expr_mpos_7, var_i_1), /** @src 13:4995:5037  \"_hashTokenPermissions(permit.permitted[i])\" */ fun_hashTokenPermissions(/** @src 13:5017:5036  \"permit.permitted[i]\" */ mload(memory_array_index_access_struct_TokenPermissions_dyn(/** @src 13:5017:5033  \"permit.permitted\" */ mload(value0_3), /** @src 13:5017:5036  \"permit.permitted[i]\" */ var_i_1))))\n                        }\n                        /// @src 13:5152:5191  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let expr_mpos_8 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(_1)\n                        /// @src 13:5152:5191  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let _32 := add(expr_mpos_8, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 32)\n                        /// @src 13:5152:5191  \"abi.encodePacked(tokenPermissionHashes)\"\n                        let _33 := sub(/** @src 13:1254:1427  \"keccak256(...\" */ abi_encode_array_bytes32_dyn(/** @src 13:5152:5191  \"abi.encodePacked(tokenPermissionHashes)\" */ expr_mpos_7, _32), expr_mpos_8)\n                        mstore(expr_mpos_8, add(_33, /** @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\" */ _31))\n                        /// @src 13:5152:5191  \"abi.encodePacked(tokenPermissionHashes)\"\n                        finalize_allocation(expr_mpos_8, _33)\n                        /// @src 13:5142:5192  \"keccak256(abi.encodePacked(tokenPermissionHashes))\"\n                        let expr_5 := keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _32, mload(/** @src 13:5142:5192  \"keccak256(abi.encodePacked(tokenPermissionHashes))\" */ expr_mpos_8))\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        let _34 := mload(/** @src 13:5238:5250  \"permit.nonce\" */ add(value0_3, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 32))\n                        let _35 := mload(/** @src 13:5268:5283  \"permit.deadline\" */ add(value0_3, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1))\n                        /// @src 13:5088:5322  \"abi.encode(...\"\n                        let expr_mpos_9 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(_1)\n                        /// @src 13:5088:5322  \"abi.encode(...\"\n                        let _36 := add(expr_mpos_9, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 32)\n                        /// @src 13:5088:5322  \"abi.encode(...\"\n                        let _37 := sub(abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32(_36, expr_4, expr_5, /** @src 13:5210:5220  \"msg.sender\" */ caller(), /** @src 13:5088:5322  \"abi.encode(...\" */ _34, _35, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ calldataload(100)), /** @src 13:5088:5322  \"abi.encode(...\" */ expr_mpos_9)\n                        mstore(expr_mpos_9, add(_37, /** @src 13:4678:4764  \"abi.encodePacked(_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB, witnessTypeString)\" */ _31))\n                        /// @src 13:5088:5322  \"abi.encode(...\"\n                        finalize_allocation(expr_mpos_9, _37)\n                        /// @src 6:3671:3680  \"signature\"\n                        fun__permitTransferFrom(value0_3, value1_1, value2_3, value3_2, /** @src 13:5065:5332  \"keccak256(...\" */ keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _36, mload(/** @src 13:5065:5332  \"keccak256(...\" */ expr_mpos_9)), /** @src 6:3671:3680  \"signature\" */ value7_1, value8)\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        return(_3, _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation_6825(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x60)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_10221(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_10226(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_12002(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 13:1018:1184  \"keccak256(...\" */ 192)\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ not(31)))\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(196)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_6820() -> value\n            {\n                value := calldataload(68)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_struct_PermitTransferFrom(end) -> value\n            {\n                let _1 := add(end, not(3))\n                if slt(_1, 0x80) { revert(0, 0) }\n                let _2 := 64\n                let memPtr := mload(_2)\n                finalize_allocation_6825(memPtr)\n                value := memPtr\n                if slt(_1, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let memPtr_1 := mload(_2)\n                let newFreePtr := add(memPtr_1, _2)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 0x24)\n                }\n                mstore(_2, newFreePtr)\n                let value_1 := calldataload(4)\n                if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                mstore(memPtr_1, value_1)\n                mstore(add(memPtr_1, 32), calldataload(36))\n                mstore(memPtr, memPtr_1)\n                mstore(add(memPtr, 32), calldataload(68))\n                mstore(add(memPtr, _2), calldataload(100))\n            }\n            function abi_decode_string_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function array_allocation_size_array_struct_TokenPermissions_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_struct_PermitBatchTransferFrom(headStart, end) -> value\n            {\n                if slt(sub(end, headStart), 0x60) { revert(0, 0) }\n                let _1 := 64\n                let memPtr := mload(_1)\n                finalize_allocation_6825(memPtr)\n                value := memPtr\n                let offset := calldataload(headStart)\n                let _2 := 0xffffffffffffffff\n                if gt(offset, _2)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let _3 := add(headStart, offset)\n                if iszero(slt(add(_3, 0x1f), end))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let _4 := calldataload(_3)\n                let _5 := 0x20\n                let _6 := array_allocation_size_array_struct_TokenPermissions_dyn(_4)\n                let memPtr_1 := mload(_1)\n                finalize_allocation(memPtr_1, _6)\n                let dst := memPtr_1\n                mstore(memPtr_1, _4)\n                dst := add(memPtr_1, _5)\n                let srcEnd := add(add(_3, shl(6, _4)), _5)\n                if gt(srcEnd, end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let src := add(_3, _5)\n                for { } lt(src, srcEnd) { src := add(src, _1) }\n                {\n                    if slt(sub(end, src), _1)\n                    {\n                        /// @src -1:-1:-1\n                        let _7 := 0\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        revert(/** @src -1:-1:-1 */ _7, _7)\n                    }\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    let memPtr_2 := mload(_1)\n                    let newFreePtr := add(memPtr_2, _1)\n                    if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr_2))\n                    {\n                        /// @src -1:-1:-1\n                        let _8 := 0\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        mstore(/** @src -1:-1:-1 */ _8, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ _8, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 0x24)\n                    }\n                    mstore(_1, newFreePtr)\n                    let value_1 := calldataload(src)\n                    if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                    {\n                        /// @src -1:-1:-1\n                        let _9 := 0\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        revert(/** @src -1:-1:-1 */ _9, _9)\n                    }\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    mstore(memPtr_2, value_1)\n                    mstore(add(memPtr_2, _5), calldataload(add(src, _5)))\n                    mstore(dst, memPtr_2)\n                    dst := add(dst, _5)\n                }\n                mstore(memPtr, memPtr_1)\n                mstore(add(memPtr, _5), calldataload(add(headStart, _5)))\n                mstore(add(memPtr, _1), calldataload(add(headStart, _1)))\n            }\n            function abi_decode_array_struct_SignatureTransferDetails_calldata_dyn_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, shl(6, length)), 0x20), end) { revert(0, 0) }\n            }\n            /// @ast-id 1072 @src 3:1123:1339  \"function DOMAIN_SEPARATOR() public view returns (bytes32) {...\"\n            function fun_DOMAIN_SEPARATOR() -> var\n            {\n                /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                switch /** @src 3:1198:1231  \"block.chainid == _CACHED_CHAIN_ID\" */ eq(/** @src 3:1198:1211  \"block.chainid\" */ chainid(), /** @src 3:1215:1231  \"_CACHED_CHAIN_ID\" */ loadimmutable(\"1028\"))\n                case /** @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\" */ 0 {\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(64)\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    let _1 := add(expr_mpos, 0x20)\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    mstore(_1, /** @src 3:726:806  \"keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\")\" */ 0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866)\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ expr_mpos, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 64), /** @src 3:654:674  \"keccak256(\\\"Permit2\\\")\" */ 0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a)\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ expr_mpos, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 96), /** @src 3:1198:1211  \"block.chainid\" */ chainid())\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    mstore(add(/** @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\" */ expr_mpos, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 128), /** @src 3:1614:1618  \"this\" */ address())\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 128)\n                    /// @src 3:1560:1620  \"abi.encode(typeHash, nameHash, block.chainid, address(this))\"\n                    finalize_allocation_10221(expr_mpos)\n                    /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                    expr := /** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1, mload(/** @src 3:1550:1621  \"keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)))\" */ expr_mpos))\n                }\n                default /// @src 3:1198:1332  \"block.chainid == _CACHED_CHAIN_ID...\"\n                {\n                    expr := /** @src 3:1246:1270  \"_CACHED_DOMAIN_SEPARATOR\" */ loadimmutable(\"1026\")\n                }\n                /// @src 3:1191:1332  \"return block.chainid == _CACHED_CHAIN_ID...\"\n                var := expr\n            }\n            /// @ast-id 1310 @src 6:2165:2869  \"function _permitTransferFrom(...\"\n            function fun_permitTransferFrom(var_permit_mpos, var_owner, var_dataHash, var_signature_offset, var_signature_length)\n            {\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let value := calldataload(/** @src 6:2428:2459  \"transferDetails.requestedAmount\" */ 164)\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let _1 := mload(/** @src 6:2492:2507  \"permit.deadline\" */ add(var_permit_mpos, 64))\n                /// @src 6:2470:2549  \"if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline)\"\n                if /** @src 6:2474:2507  \"block.timestamp > permit.deadline\" */ gt(/** @src 6:2474:2489  \"block.timestamp\" */ timestamp(), /** @src 6:2474:2507  \"block.timestamp > permit.deadline\" */ _1)\n                /// @src 6:2470:2549  \"if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline)\"\n                {\n                    /// @src 6:2516:2549  \"SignatureExpired(permit.deadline)\"\n                    let _2 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(/** @src 6:2492:2507  \"permit.deadline\" */ 64)\n                    /// @src 6:2516:2549  \"SignatureExpired(permit.deadline)\"\n                    mstore(_2, shl(224, 0xcd21db4f))\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    mstore(/** @src 6:2516:2549  \"SignatureExpired(permit.deadline)\" */ add(_2, 4), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1)\n                    /// @src 6:2516:2549  \"SignatureExpired(permit.deadline)\"\n                    revert(_2, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 36)\n                }\n                let _3 := mload(/** @src 6:2581:2604  \"permit.permitted.amount\" */ add(/** @src 6:2581:2597  \"permit.permitted\" */ mload(var_permit_mpos), /** @src 6:2428:2459  \"transferDetails.requestedAmount\" */ 32))\n                /// @src 6:2559:2651  \"if (requestedAmount > permit.permitted.amount) revert InvalidAmount(permit.permitted.amount)\"\n                if /** @src 6:2563:2604  \"requestedAmount > permit.permitted.amount\" */ gt(value, _3)\n                /// @src 6:2559:2651  \"if (requestedAmount > permit.permitted.amount) revert InvalidAmount(permit.permitted.amount)\"\n                {\n                    /// @src 6:2613:2651  \"InvalidAmount(permit.permitted.amount)\"\n                    let _4 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(/** @src 6:2492:2507  \"permit.deadline\" */ 64)\n                    /// @src 6:2613:2651  \"InvalidAmount(permit.permitted.amount)\"\n                    mstore(_4, shl(224, 0x3728b83d))\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    mstore(/** @src 6:2613:2651  \"InvalidAmount(permit.permitted.amount)\" */ add(_4, 4), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _3)\n                    /// @src 6:2613:2651  \"InvalidAmount(permit.permitted.amount)\"\n                    revert(_4, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 36)\n                }\n                /// @src 6:2688:2700  \"permit.nonce\"\n                fun_useUnorderedNonce(var_owner, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(/** @src 6:2688:2700  \"permit.nonce\" */ add(var_permit_mpos, /** @src 6:2428:2459  \"transferDetails.requestedAmount\" */ 32)))\n                /// @src 6:2755:2760  \"owner\"\n                fun_verify(var_signature_offset, var_signature_length, /** @src 6:2729:2753  \"_hashTypedData(dataHash)\" */ fun_hashTypedData(var_dataHash), /** @src 6:2755:2760  \"owner\" */ var_owner)\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let _5 := sub(shl(160, 1), 1)\n                let cleaned := and(mload(/** @src 6:2778:2794  \"permit.permitted\" */ mload(var_permit_mpos)), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _5)\n                let value_1 := calldataload(132)\n                if iszero(eq(value_1, and(value_1, _5)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:2846:2861  \"requestedAmount\"\n                fun_safeTransferFrom(cleaned, var_owner, /** @src 6:2826:2844  \"transferDetails.to\" */ value_1, /** @src 6:2846:2861  \"requestedAmount\" */ value)\n            }\n            /// @ast-id 431 @src 1:1328:2944  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_token_address, var_from, var_to, var_amount)\n            {\n                /// @src 1:1532:2887  \"assembly {...\"\n                let usr$freeMemoryPointer := mload(0x40)\n                mstore(usr$freeMemoryPointer, shl(224, 0x23b872dd))\n                mstore(add(usr$freeMemoryPointer, 4), var_from)\n                mstore(add(usr$freeMemoryPointer, 36), var_to)\n                mstore(add(usr$freeMemoryPointer, 68), var_amount)\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                if iszero(/** @src 1:1532:2887  \"assembly {...\" */ and(or(and(eq(mload(/** @src -1:-1:-1 */ 0), /** @src 1:1532:2887  \"assembly {...\" */ 1), gt(returndatasize(), 31)), iszero(returndatasize())), call(gas(), var_token_address, /** @src -1:-1:-1 */ 0, /** @src 1:1532:2887  \"assembly {...\" */ usr$freeMemoryPointer, 100, /** @src -1:-1:-1 */ 0, /** @src 1:1532:2887  \"assembly {...\" */ 32)))\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                {\n                    let memPtr := mload(/** @src 1:1532:2887  \"assembly {...\" */ 0x40)\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 4), 32)\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    mstore(add(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 36), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 20)\n                    mstore(add(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 68), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ \"TRANSFER_FROM_FAILED\")\n                    revert(memPtr, /** @src 1:1532:2887  \"assembly {...\" */ 100)\n                }\n            }\n            /// @ast-id 1116 @src 3:1685:1852  \"function _hashTypedData(bytes32 dataHash) internal view returns (bytes32) {...\"\n            function fun_hashTypedData(var_dataHash) -> var\n            {\n                /// @src 3:1815:1833  \"DOMAIN_SEPARATOR()\"\n                let expr := fun_DOMAIN_SEPARATOR()\n                /// @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\"\n                let expr_mpos := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(64)\n                /// @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\"\n                let _1 := add(expr_mpos, 0x20)\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                mstore(_1, shl(240, 6401))\n                mstore(add(/** @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\" */ expr_mpos, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 34), expr)\n                mstore(add(/** @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\" */ expr_mpos, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 66), var_dataHash)\n                /// @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\"\n                mstore(expr_mpos, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 66)\n                /// @src 3:1786:1844  \"abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash)\"\n                finalize_allocation_10226(expr_mpos)\n                /// @src 3:1769:1845  \"return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash))\"\n                var := /** @src 3:1776:1845  \"keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash))\" */ keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1, mload(/** @src 3:1776:1845  \"keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", DOMAIN_SEPARATOR(), dataHash))\" */ expr_mpos))\n            }\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            function memory_array_index_access_struct_TokenPermissions_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function calldata_array_index_access_struct_SignatureTransferDetails_calldata_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(base_ref, shl(6, index))\n            }\n            /// @ast-id 1482 @src 6:4102:5296  \"function _permitTransferFrom(...\"\n            function fun__permitTransferFrom(var_permit_mpos, var_transferDetails_offset, var_transferDetails_length, var_owner, var_dataHash, var_signature_1382_offset, var_signature_1382_length)\n            {\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let length := mload(/** @src 6:4369:4385  \"permit.permitted\" */ mload(var_permit_mpos))\n                /// @src 6:4425:4440  \"permit.deadline\"\n                let _1 := 64\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let _2 := mload(/** @src 6:4425:4440  \"permit.deadline\" */ add(var_permit_mpos, _1))\n                /// @src 6:4403:4482  \"if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline)\"\n                if /** @src 6:4407:4440  \"block.timestamp > permit.deadline\" */ gt(/** @src 6:4407:4422  \"block.timestamp\" */ timestamp(), /** @src 6:4407:4440  \"block.timestamp > permit.deadline\" */ _2)\n                /// @src 6:4403:4482  \"if (block.timestamp > permit.deadline) revert SignatureExpired(permit.deadline)\"\n                {\n                    /// @src 6:4449:4482  \"SignatureExpired(permit.deadline)\"\n                    let _3 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(/** @src 6:4425:4440  \"permit.deadline\" */ _1)\n                    /// @src 6:4449:4482  \"SignatureExpired(permit.deadline)\"\n                    mstore(_3, /** @src 6:2516:2549  \"SignatureExpired(permit.deadline)\" */ shl(224, 0xcd21db4f))\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    mstore(/** @src 6:4449:4482  \"SignatureExpired(permit.deadline)\" */ add(_3, 4), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _2)\n                    /// @src 6:4449:4482  \"SignatureExpired(permit.deadline)\"\n                    revert(_3, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 36)\n                }\n                /// @src 6:4492:4559  \"if (numPermitted != transferDetails.length) revert LengthMismatch()\"\n                if /** @src 6:4496:4534  \"numPermitted != transferDetails.length\" */ iszero(eq(length, var_transferDetails_length))\n                /// @src 6:4492:4559  \"if (numPermitted != transferDetails.length) revert LengthMismatch()\"\n                {\n                    /// @src 6:4543:4559  \"LengthMismatch()\"\n                    let _4 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(/** @src 6:4425:4440  \"permit.deadline\" */ _1)\n                    /// @src 6:4543:4559  \"LengthMismatch()\"\n                    mstore(_4, shl(227, 0x1fec6747))\n                    revert(_4, 4)\n                }\n                /// @src 6:4596:4608  \"permit.nonce\"\n                let _5 := 32\n                fun_useUnorderedNonce(var_owner, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(/** @src 6:4596:4608  \"permit.nonce\" */ add(var_permit_mpos, _5)))\n                /// @src 6:4662:4667  \"owner\"\n                fun_verify(var_signature_1382_offset, var_signature_1382_length, /** @src 6:4636:4660  \"_hashTypedData(dataHash)\" */ fun_hashTypedData(var_dataHash), /** @src 6:4662:4667  \"owner\" */ var_owner)\n                /// @src 6:4708:4721  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 6:4708:4721  \"uint256 i = 0\"\n                let var_i_1 := /** @src -1:-1:-1 */ var_i\n                /// @src 6:4703:5280  \"for (uint256 i = 0; i < numPermitted; ++i) {...\"\n                for { }\n                /** @src 6:4723:4739  \"i < numPermitted\" */ lt(var_i_1, length)\n                /// @src 6:4708:4721  \"uint256 i = 0\"\n                {\n                    /// @src 6:4741:4744  \"++i\"\n                    var_i_1 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ add(/** @src 6:4741:4744  \"++i\" */ var_i_1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 1)\n                }\n                /// @src 6:4741:4744  \"++i\"\n                {\n                    /// @src 6:4800:4819  \"permit.permitted[i]\"\n                    let _mpos := mload(memory_array_index_access_struct_TokenPermissions_dyn(/** @src 6:4800:4816  \"permit.permitted\" */ mload(var_permit_mpos), /** @src 6:4800:4819  \"permit.permitted[i]\" */ var_i_1))\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    let value := calldataload(/** @src 6:4863:4897  \"transferDetails[i].requestedAmount\" */ add(/** @src 6:4863:4881  \"transferDetails[i]\" */ calldata_array_index_access_struct_SignatureTransferDetails_calldata_dyn_calldata(var_transferDetails_offset, var_transferDetails_length, var_i_1), /** @src 6:4596:4608  \"permit.nonce\" */ _5))\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    let _6 := mload(/** @src 6:4938:4954  \"permitted.amount\" */ add(_mpos, /** @src 6:4596:4608  \"permit.nonce\" */ _5))\n                    /// @src 6:4916:4994  \"if (requestedAmount > permitted.amount) revert InvalidAmount(permitted.amount)\"\n                    if /** @src 6:4920:4954  \"requestedAmount > permitted.amount\" */ gt(value, _6)\n                    /// @src 6:4916:4994  \"if (requestedAmount > permitted.amount) revert InvalidAmount(permitted.amount)\"\n                    {\n                        /// @src 6:4963:4994  \"InvalidAmount(permitted.amount)\"\n                        let _7 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(/** @src 6:4425:4440  \"permit.deadline\" */ _1)\n                        /// @src 6:4963:4994  \"InvalidAmount(permitted.amount)\"\n                        mstore(_7, /** @src 6:2613:2651  \"InvalidAmount(permit.permitted.amount)\" */ shl(224, 0x3728b83d))\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        mstore(/** @src 6:4963:4994  \"InvalidAmount(permitted.amount)\" */ add(_7, 4), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _6)\n                        /// @src 6:4963:4994  \"InvalidAmount(permitted.amount)\"\n                        revert(_7, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 36)\n                    }\n                    /// @src 6:5013:5266  \"if (requestedAmount != 0) {...\"\n                    if /** @src 6:5017:5037  \"requestedAmount != 0\" */ iszero(iszero(value))\n                    /// @src 6:5013:5266  \"if (requestedAmount != 0) {...\"\n                    {\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        let _8 := sub(shl(160, 1), 1)\n                        let cleaned := and(mload(/** @src 6:5167:5182  \"permitted.token\" */ _mpos), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _8)\n                        let value_1 := calldataload(/** @src 6:5208:5226  \"transferDetails[i]\" */ calldata_array_index_access_struct_SignatureTransferDetails_calldata_dyn_calldata(var_transferDetails_offset, var_transferDetails_length, var_i_1))\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        if iszero(eq(value_1, and(value_1, _8)))\n                        {\n                            revert(/** @src -1:-1:-1 */ var_i, var_i)\n                        }\n                        /// @src 6:5231:5246  \"requestedAmount\"\n                        fun_safeTransferFrom(cleaned, var_owner, /** @src 6:5208:5229  \"transferDetails[i].to\" */ value_1, /** @src 6:5231:5246  \"requestedAmount\" */ value)\n                    }\n                }\n            }\n            /// @ast-id 1576 @src 6:6415:6708  \"function _useUnorderedNonce(address from, uint256 nonce) internal {...\"\n            function fun_useUnorderedNonce(var_from, var_nonce)\n            {\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let result := shl(and(/** @src 6:6178:6190  \"uint8(nonce)\" */ var_nonce, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 0xff), /** @src 6:6573:6574  \"1\" */ 0x01)\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ and(var_from, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src -1:-1:-1 */ 0)\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ shr(/** @src 6:6157:6158  \"8\" */ 0x08, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ var_nonce))\n                mstore(0x20, dataSlot)\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 0x40)\n                /// @src 6:6612:6645  \"nonceBitmap[from][wordPos] ^= bit\"\n                let expr := xor(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ sload(/** @src 6:6612:6645  \"nonceBitmap[from][wordPos] ^= bit\" */ dataSlot_1), result)\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                sstore(dataSlot_1, expr)\n                /// @src 6:6656:6701  \"if (flipped & bit == 0) revert InvalidNonce()\"\n                if /** @src 6:6660:6678  \"flipped & bit == 0\" */ iszero(/** @src 6:6660:6673  \"flipped & bit\" */ and(expr, result))\n                /// @src 6:6656:6701  \"if (flipped & bit == 0) revert InvalidNonce()\"\n                {\n                    /// @src 6:6687:6701  \"InvalidNonce()\"\n                    let _1 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(0x40)\n                    /// @src 6:6687:6701  \"InvalidNonce()\"\n                    mstore(_1, shl(225, 0x3ab3447f))\n                    revert(_1, 4)\n                }\n            }\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            function allocate_and_zero_memory_array_array_bytes32_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_struct_TokenPermissions_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_struct_TokenPermissions_dyn(length), /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ not(31)))\n            }\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            /// @src 13:1254:1427  \"keccak256(...\"\n            function abi_encode_array_bytes32_dyn(value, pos) -> end\n            {\n                let length := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(/** @src 13:1254:1427  \"keccak256(...\" */ value)\n                pos := pos\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                let _1 := 0x20\n                /// @src 13:1254:1427  \"keccak256(...\"\n                let srcPtr := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ add(/** @src 13:1254:1427  \"keccak256(...\" */ value, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1)\n                /// @src 13:1254:1427  \"keccak256(...\"\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                    mstore(pos, /** @src 13:1254:1427  \"keccak256(...\" */ mload(srcPtr))\n                    pos := add(pos, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1)\n                    /// @src 13:1254:1427  \"keccak256(...\"\n                    srcPtr := add(srcPtr, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1)\n                }\n                /// @src 13:1254:1427  \"keccak256(...\"\n                end := pos\n            }\n            /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ value)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n                }\n                let _1 := add(pos, length)\n                mstore(_1, 0)\n                end := _1\n            }\n            function abi_encode_bytes32_bytes32_address_uint256_uint256_bytes32(headStart, value0, value1, value2, value3, value4, value5) -> tail\n            {\n                tail := add(headStart, 192)\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                mstore(headStart, value0)\n                mstore(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ add(headStart, 32), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ value1)\n                mstore(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ add(headStart, 64), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ and(value2, sub(shl(160, 1), 1)))\n                mstore(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ add(headStart, 96), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ value3)\n                mstore(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ add(headStart, 128), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ value4)\n                mstore(/** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ add(headStart, 160), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ value5)\n            }\n            /// @ast-id 2675 @src 13:5539:5768  \"function _hashTokenPermissions(ISignatureTransfer.TokenPermissions memory permitted)...\"\n            function fun_hashTokenPermissions(var_permitted_mpos) -> var\n            {\n                /// @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\"\n                let expr_2671_mpos := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(64)\n                /// @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\"\n                let _1 := add(expr_2671_mpos, 0x20)\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                mstore(_1, /** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ 0x618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1)\n                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                mstore(/** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ add(/** @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\" */ expr_2671_mpos, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 64), and(/** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ mload(var_permitted_mpos), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ sub(shl(160, 1), 1)))\n                mstore(/** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ add(/** @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\" */ expr_2671_mpos, /** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ 96), mload(add(var_permitted_mpos, /** @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\" */ 0x20)))\n                mstore(expr_2671_mpos, /** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ 96)\n                /// @src 13:5710:5760  \"abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted)\"\n                finalize_allocation_10226(expr_2671_mpos)\n                /// @src 13:5693:5761  \"return keccak256(abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted))\"\n                var := /** @src 13:5700:5761  \"keccak256(abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted))\" */ keccak256(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1, mload(/** @src 13:5700:5761  \"keccak256(abi.encode(_TOKEN_PERMISSIONS_TYPEHASH, permitted))\" */ expr_2671_mpos))\n            }\n            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n            function abi_decode_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                value0 := calldataload(headStart)\n                value1 := calldataload(add(headStart, 32))\n            }\n            /// @ast-id 2875 @src 15:700:1809  \"function verify(bytes calldata signature, bytes32 hash, address claimedSigner) internal view {...\"\n            function fun_verify(var_signature_offset, var_signature_length, var_hash, var_claimedSigner)\n            {\n                /// @src 15:803:812  \"bytes32 r\"\n                let var_r := /** @src -1:-1:-1 */ 0\n                /// @src 15:822:831  \"bytes32 s\"\n                let var_s := /** @src -1:-1:-1 */ var_r\n                /// @src 15:841:848  \"uint8 v\"\n                let var_v := /** @src -1:-1:-1 */ var_r\n                /// @src 15:859:1803  \"if (claimedSigner.code.length == 0) {...\"\n                switch /** @src 15:863:893  \"claimedSigner.code.length == 0\" */ iszero(/** @src 15:863:888  \"claimedSigner.code.length\" */ extcodesize(var_claimedSigner))\n                case /** @src 15:859:1803  \"if (claimedSigner.code.length == 0) {...\" */ 0 {\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    let _1 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(64)\n                    let _2 := shl(225, 0x0b135d3f)\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    mstore(_1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _2)\n                    mstore(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ add(_1, 4), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ var_hash)\n                    mstore(add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 36), 64)\n                    mstore(add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 68), var_signature_length)\n                    /// @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\"\n                    calldatacopy(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 100), /** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ var_signature_offset, var_signature_length)\n                    mstore(add(add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 13:1621:1723  \"\\\"PermitWitnessTransferFrom(TokenPermissions permitted,address spender,uint256 nonce,uint256 deadline,\\\"\" */ var_signature_length), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 100), /** @src -1:-1:-1 */ var_r)\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    let _3 := staticcall(gas(), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ and(/** @src 15:1634:1657  \"IERC1271(claimedSigner)\" */ var_claimedSigner, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ sub(shl(160, 1), 1)), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, add(sub(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ add(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ and(add(var_signature_length, 31), /** @src 13:4133:4213  \"abi.encodePacked(_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB, witnessTypeString)\" */ not(31))), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 100), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ _1, 32)\n                    if iszero(_3)\n                    {\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        let pos := mload(64)\n                        returndatacopy(pos, /** @src -1:-1:-1 */ var_r, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ returndatasize())\n                        revert(pos, returndatasize())\n                    }\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    let expr := /** @src -1:-1:-1 */ var_r\n                    /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                    if _3\n                    {\n                        let _4 := 32\n                        if gt(_4, returndatasize()) { _4 := returndatasize() }\n                        finalize_allocation(_1, _4)\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        if slt(sub(/** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ add(_1, _4), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _1), /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ 32)\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        {\n                            revert(/** @src -1:-1:-1 */ var_r, var_r)\n                        }\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        let value := mload(_1)\n                        if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                        {\n                            revert(/** @src -1:-1:-1 */ var_r, var_r)\n                        }\n                        /// @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\"\n                        expr := value\n                    }\n                    /// @src 15:1705:1792  \"if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature()\"\n                    if /** @src 15:1709:1757  \"magicValue != IERC1271.isValidSignature.selector\" */ iszero(eq(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ and(/** @src 15:1709:1757  \"magicValue != IERC1271.isValidSignature.selector\" */ expr, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ shl(224, 0xffffffff)), _2))\n                    /// @src 15:1705:1792  \"if (magicValue != IERC1271.isValidSignature.selector) revert InvalidContractSignature()\"\n                    {\n                        /// @src 15:1766:1792  \"InvalidContractSignature()\"\n                        let _5 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(64)\n                        /// @src 15:1766:1792  \"InvalidContractSignature()\"\n                        mstore(_5, shl(226, 0x2c19a72f))\n                        revert(_5, /** @src 15:1634:1691  \"IERC1271(claimedSigner).isValidSignature(hash, signature)\" */ 4)\n                    }\n                }\n                default /// @src 15:859:1803  \"if (claimedSigner.code.length == 0) {...\"\n                {\n                    /// @src 15:909:1399  \"if (signature.length == 65) {...\"\n                    switch /** @src 15:913:935  \"signature.length == 65\" */ eq(var_signature_length, /** @src 15:933:935  \"65\" */ 0x41)\n                    case /** @src 15:909:1399  \"if (signature.length == 65) {...\" */ 0 {\n                        /// @src 15:1068:1399  \"if (signature.length == 64) {...\"\n                        switch /** @src 15:1072:1094  \"signature.length == 64\" */ eq(var_signature_length, /** @src 15:1092:1094  \"64\" */ 0x40)\n                        case /** @src 15:1068:1399  \"if (signature.length == 64) {...\" */ 0 {\n                            /// @src 15:1360:1384  \"InvalidSignatureLength()\"\n                            let _6 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(/** @src 15:1092:1094  \"64\" */ 0x40)\n                            /// @src 15:1360:1384  \"InvalidSignatureLength()\"\n                            mstore(_6, shl(224, 0x4be6321b))\n                            revert(_6, 4)\n                        }\n                        default /// @src 15:1068:1399  \"if (signature.length == 64) {...\"\n                        {\n                            /// @src 15:1180:1221  \"abi.decode(signature, (bytes32, bytes32))\"\n                            let expr_component, expr_2796_component := abi_decode_bytes32t_bytes32(var_signature_offset, add(var_signature_offset, var_signature_length))\n                            /// @src 15:1170:1221  \"(r, vs) = abi.decode(signature, (bytes32, bytes32))\"\n                            var_r := expr_component\n                            /// @src 15:1239:1262  \"s = vs & UPPER_BIT_MASK\"\n                            var_s := /** @src 15:1243:1262  \"vs & UPPER_BIT_MASK\" */ and(expr_2796_component, /** @src 15:626:692  \"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\" */ sub(shl(255, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 1), 1))\n                            /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                            let sum := add(/** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ shr(0xff, expr_2796_component), /** @src 15:1312:1314  \"27\" */ 0x1b)\n                            /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                            if gt(sum, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 0xff)\n                            /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                            {\n                                /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 0x24)\n                            }\n                            /// @src 15:1280:1314  \"v = uint8(uint256(vs >> 255)) + 27\"\n                            var_v := sum\n                        }\n                    }\n                    default /// @src 15:909:1399  \"if (signature.length == 65) {...\"\n                    {\n                        /// @src 15:964:1005  \"abi.decode(signature, (bytes32, bytes32))\"\n                        let expr_component_1, expr_component_2 := abi_decode_bytes32t_bytes32(var_signature_offset, add(var_signature_offset, var_signature_length))\n                        /// @src 15:955:1005  \"(r, s) = abi.decode(signature, (bytes32, bytes32))\"\n                        var_s := expr_component_2\n                        var_r := expr_component_1\n                        /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                        if iszero(lt(/** @src 15:1043:1045  \"64\" */ 0x40, /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ var_signature_length))\n                        {\n                            /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 0x24)\n                        }\n                        /// @src 15:1023:1047  \"v = uint8(signature[64])\"\n                        var_v := /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ shr(248, /** @src 15:1033:1046  \"signature[64]\" */ calldataload(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ add(var_signature_offset, /** @src 15:1043:1045  \"64\" */ 0x40)))\n                    }\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    let _7 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(64)\n                    mstore(_7, var_hash)\n                    /// @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\"\n                    mstore(add(_7, 32), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ and(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ var_v, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 0xff))\n                    mstore(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ add(_7, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ 64), var_r)\n                    mstore(/** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ add(_7, 96), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ var_s)\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    mstore(/** @src -1:-1:-1 */ 0, 0)\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    if iszero(staticcall(gas(), 1, _7, /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ 128, /** @src -1:-1:-1 */ 0, /** @src 15:625:693  \"(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\" */ 32))\n                    /// @src 15:1429:1453  \"ecrecover(hash, v, r, s)\"\n                    {\n                        /// @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\"\n                        let pos_1 := mload(64)\n                        returndatacopy(pos_1, /** @src -1:-1:-1 */ 0, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ returndatasize())\n                        revert(pos_1, returndatasize())\n                    }\n                    let _8 := sub(shl(160, 1), 1)\n                    /// @src 15:1471:1491  \"signer == address(0)\"\n                    let _9 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ and(/** @src 15:1429:1453  \"ecrecover(hash, v, r, s)\" */ mload(/** @src -1:-1:-1 */ 0), /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _8)\n                    /// @src 15:1467:1518  \"if (signer == address(0)) revert InvalidSignature()\"\n                    if /** @src 15:1471:1491  \"signer == address(0)\" */ iszero(_9)\n                    /// @src 15:1467:1518  \"if (signer == address(0)) revert InvalidSignature()\"\n                    {\n                        /// @src 15:1500:1518  \"InvalidSignature()\"\n                        let _10 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(64)\n                        /// @src 15:1500:1518  \"InvalidSignature()\"\n                        mstore(_10, shl(224, 0x8baa579f))\n                        revert(_10, 4)\n                    }\n                    /// @src 15:1532:1583  \"if (signer != claimedSigner) revert InvalidSigner()\"\n                    if /** @src 15:1536:1559  \"signer != claimedSigner\" */ iszero(eq(_9, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ and(/** @src 15:1536:1559  \"signer != claimedSigner\" */ var_claimedSigner, /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ _8)))\n                    /// @src 15:1532:1583  \"if (signer != claimedSigner) revert InvalidSigner()\"\n                    {\n                        /// @src 15:1568:1583  \"InvalidSigner()\"\n                        let _11 := /** @src 6:503:6710  \"contract SignatureTransfer is ISignatureTransfer, EIP712 {...\" */ mload(64)\n                        /// @src 15:1568:1583  \"InvalidSigner()\"\n                        mstore(_11, shl(226, 0x20578759))\n                        revert(_11, 4)\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000811000a\"\n    }\n}\n","hash":"010003714ab10ce101f21e3134072ec9b15b04195ee7e2d4218fb7f6c1f2e83a","factoryDependencies":{}}},"src/interfaces/IAllowanceTransfer.sol":{"IAllowanceTransfer":{"abi":[{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"AllowanceExpired","type":"error"},{"inputs":[],"name":"ExcessiveInvalidation","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"InsufficientAllowance","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint160","name":"amount","type":"uint160"},{"indexed":false,"internalType":"uint48","name":"expiration","type":"uint48"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"address","name":"spender","type":"address"}],"name":"Lockdown","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint48","name":"newNonce","type":"uint48"},{"indexed":false,"internalType":"uint48","name":"oldNonce","type":"uint48"}],"name":"NonceInvalidation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint160","name":"amount","type":"uint160"},{"indexed":false,"internalType":"uint48","name":"expiration","type":"uint48"},{"indexed":false,"internalType":"uint48","name":"nonce","type":"uint48"}],"name":"Permit","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint160","name":"","type":"uint160"},{"internalType":"uint48","name":"","type":"uint48"},{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint48","name":"newNonce","type":"uint48"}],"name":"invalidateNonces","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"internalType":"struct IAllowanceTransfer.TokenSpenderPair[]","name":"approvals","type":"tuple[]"}],"name":"lockdown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IAllowanceTransfer.PermitDetails[]","name":"details","type":"tuple[]"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IAllowanceTransfer.PermitBatch","name":"permitBatch","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"uint48","name":"expiration","type":"uint48"},{"internalType":"uint48","name":"nonce","type":"uint48"}],"internalType":"struct IAllowanceTransfer.PermitDetails","name":"details","type":"tuple"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"sigDeadline","type":"uint256"}],"internalType":"struct IAllowanceTransfer.PermitSingle","name":"permitSingle","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"internalType":"struct IAllowanceTransfer.AllowanceTransferDetails[]","name":"transferDetails","type":"tuple[]"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint160","name":"amount","type":"uint160"},{"internalType":"address","name":"token","type":"address"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}]},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"details\":\"The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"title\":\"AllowanceTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"notice\":\"Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IAllowanceTransfer.sol\":\"IAllowanceTransfer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address,address)":"927da105","approve(address,address,uint160,uint48)":"87517c45","invalidateNonces(address,address,uint48)":"65d9723c","lockdown((address,address)[])":"cc53287f","permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)":"2b67b570","permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)":"2a2d80d1","transferFrom((address,address,uint160,address)[])":"0d58b1db","transferFrom(address,address,uint160,address)":"36c78516"}},"irOptimized":""}},"src/interfaces/IDAIPermit.sol":{"IDAIPermit":{"abi":[{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bool","name":"allowed","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"params\":{\"allowed\":\"Boolean that sets approval amount, true for type(uint256).max and false for 0.\",\"expiry\":\"The timestamp at which the permit is no longer valid.\",\"holder\":\"The address of the token owner.\",\"nonce\":\"The owner's nonce, increases at each call to permit.\",\"r\":\"Must produce valid secp256k1 signature from the owner along with v and s.\",\"s\":\"Must produce valid secp256k1 signature from the owner along with r and v.\",\"spender\":\"The address of the token spender.\",\"v\":\"Must produce valid secp256k1 signature from the owner along with r and s.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IDAIPermit.sol\":\"IDAIPermit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/interfaces/IDAIPermit.sol\":{\"keccak256\":\"0x089a4157ad58d4568cb7084836f9ee0280c01616b0cd15158d6deb93be754e8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8af89edc0f453dff61e4b67bc3188f090ba0e858f5f13723e526a8cb8a165535\",\"dweb:/ipfs/QmRVFHVFZg7fWhYdWdDD3JZHiWREHz5JiLEyDq7NYhQDfn\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)":"8fcbaf0c"}},"irOptimized":""}},"src/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"},\"returns\":{\"magicValue\":\"The bytes4 magic value 0x1626ba7e\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/interfaces/IERC1271.sol\":{\"keccak256\":\"0x96f516510d08da5b1d05d81b0bd88af6f9928bb757ba55c27e203654dfcd4fa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0942604688c369aed50905d7cef2ece68e1ff457c95a14c9f913babac29a09a\",\"dweb:/ipfs/Qmf4ZBYCKqQHfnACciz8GEMhwxPw7mhQ6fjGXwpgr8CQF8\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"irOptimized":""}},"src/interfaces/ISignatureTransfer.sol":{"ISignatureTransfer":{"abi":[{"inputs":[{"internalType":"uint256","name":"maxAmount","type":"uint256"}],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"LengthMismatch","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"word","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"mask","type":"uint256"}],"name":"UnorderedNonceInvalidation","type":"event"},{"inputs":[{"internalType":"uint256","name":"wordPos","type":"uint256"},{"internalType":"uint256","name":"mask","type":"uint256"}],"name":"invalidateUnorderedNonces","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"nonceBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions","name":"permitted","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails","name":"transferDetails","type":"tuple"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions[]","name":"permitted","type":"tuple[]"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","name":"transferDetails","type":"tuple[]"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions","name":"permitted","type":"tuple"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails","name":"transferDetails","type":"tuple"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"witness","type":"bytes32"},{"internalType":"string","name":"witnessTypeString","type":"string"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitWitnessTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISignatureTransfer.TokenPermissions[]","name":"permitted","type":"tuple[]"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct ISignatureTransfer.PermitBatchTransferFrom","name":"permit","type":"tuple"},{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"requestedAmount","type":"uint256"}],"internalType":"struct ISignatureTransfer.SignatureTransferDetails[]","name":"transferDetails","type":"tuple[]"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"witness","type":"bytes32"},{"internalType":"string","name":"witnessTypeString","type":"string"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"permitWitnessTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"word\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"UnorderedNonceInvalidation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wordPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"invalidateUnorderedNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonceBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"InvalidAmount(uint256)\":[{\"params\":{\"maxAmount\":\"The maximum amount a spender can request to transfer\"}}],\"LengthMismatch()\":[{\"details\":\"If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\"}]},\"kind\":\"dev\",\"methods\":{\"invalidateUnorderedNonces(uint256,uint256)\":{\"details\":\"The wordPos is maxed at type(uint248).max\",\"params\":{\"mask\":\"A bitmap masked against msg.sender's current bitmap at the word position\",\"wordPos\":\"A number to index the nonceBitmap at\"}},\"nonceBitmap(address,uint256)\":{\"details\":\"Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"details\":\"Reverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\"}},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\"}},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}}},\"title\":\"SignatureTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAmount(uint256)\":[{\"notice\":\"Thrown when the requested amount for a transfer is larger than the permissioned amount\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\"}]},\"events\":{\"UnorderedNonceInvalidation(address,uint256,uint256)\":{\"notice\":\"Emits an event when the owner successfully invalidates an unordered nonce.\"}},\"kind\":\"user\",\"methods\":{\"invalidateUnorderedNonces(uint256,uint256)\":{\"notice\":\"Invalidates the bits specified in mask for the bitmap at the word position\"},\"nonceBitmap(address,uint256)\":{\"notice\":\"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"notice\":\"Transfers a token using a signed permit message\"},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit message\"},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"notice\":\"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over\"}},\"notice\":\"Handles ERC20 token transfers through signature based actions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISignatureTransfer.sol\":\"ISignatureTransfer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xbab1c35f0a63761be6b50a9a2ce2459b63f09587dd9c6ac46955252a1a04f43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225dca1a3d91c0737fe75c72bfecae391fc2e7b2eb2ebe1a154bfb16a7527972\",\"dweb:/ipfs/QmdGQdUCANKZ6S23TyHDtBnGvr6CtyyqNNcziVTjEHJ5rk\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"invalidateUnorderedNonces(uint256,uint256)":"3ff9dcb1","nonceBitmap(address,uint256)":"4fe02b44","permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)":"30f28b7a","permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)":"edd9444b","permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)":"137c29fe","permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)":"fe8ec1a7"}},"irOptimized":""}},"src/libraries/Allowance.sol":{"Allowance":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Allowance.sol\":\"Allowance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]},\"src/libraries/Allowance.sol\":{\"keccak256\":\"0x65ee20fb1a77d4e25dff2feb84027ff9096b065b6fc064c80f9eee49f1f9d498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f65d62fc64a55b6e3aad9932959ab3f47d701c45f95622215aca0ba076f1a7d\",\"dweb:/ipfs/QmZjDb4Nq9pssFefg8X9bwJNJ4RJEPD8vCaFR2Ur2N4boD\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Allowance.sol:Allowance\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 11:\"src/libraries/Allowance.sol\"\nobject \"Allowance_2066\" {\n    code {\n        {\n            /// @src 11:132:1904  \"library Allowance {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Allowance_2066_deployed\")\n            codecopy(_1, dataoffset(\"Allowance_2066_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 11:\"src/libraries/Allowance.sol\"\n    object \"Allowance_2066_deployed\" {\n        code {\n            {\n                /// @src 11:132:1904  \"library Allowance {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000811000a\"\n    }\n}\n","hash":"01000007d6f44c7b2403755aeb1144015c541833655137c19b78703170be1705","factoryDependencies":{}}},"src/libraries/Permit2Lib.sol":{"Permit2Lib":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"DAI_DOMAIN_SEPARATOR\":{\"details\":\"The unique EIP-712 domain domain separator for the DAI token contract.\"},\"PERMIT2\":{\"details\":\"The address of the Permit2 contract the library will use.\"}},\"title\":\"Permit2Lib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Enables efficient transfers and EIP-2612/DAI permits for any token by falling back to Permit2.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Permit2Lib.sol\":\"Permit2Lib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"src/AllowanceTransfer.sol\":{\"keccak256\":\"0x5c07b6e3b4f555ea53c3a8a7146f84e8b4a0b497fd9eac7654bc6a939630895f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4172f2831478e2c9a9b1b3dc6e34ba5214531a927818ee8f61a0ba54eb54f87\",\"dweb:/ipfs/QmevdtuwCo2hm4wfoKa23HoR9wjjVUMxkxo2xtcuzfbMrW\"]},\"src/EIP712.sol\":{\"keccak256\":\"0x973d4358c262467a4c2a0c2867c676a8a138102968d8b89355c42f655d1a7a68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7219a31ace8c0a959392cc2ee06817c7c98dfc491e96d27f71a09fb23860b62c\",\"dweb:/ipfs/QmUGRLgddHZ3GoouEBoMYbRS4wVGapJrsD2nBxVwxLBibb\"]},\"src/Permit2.sol\":{\"keccak256\":\"0x934c0eb24a52eb5900f01f5c328374b670366adf995ba9ed49bcd3d7b87b159e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdfd05b3007726dc6dd2822c1dd9dc1b2471fbec507f30efa71a1a214c98bab6\",\"dweb:/ipfs/QmPq4hptCSUACQdynSa86bdEexE7RryzosrhUAZ9Xkqc5a\"]},\"src/PermitErrors.sol\":{\"keccak256\":\"0x9fd1192bbc3ffa9354f2bfc534d7a1cdf2be2c940c96ed4ac7bc37991e1e5dfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77f8b2e2c040c33e2c78f05e7e768a17f433c07adb699235c35c4dac92115070\",\"dweb:/ipfs/QmYX2VTyTm6QLtgp54kCrkAGY8uPxkx28urwLNEJsxTHJs\"]},\"src/SignatureTransfer.sol\":{\"keccak256\":\"0xd826676d51208b14d32ef4c49ac3ba86da1a5a56f482e3cdd44760e82fe903c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc8b1dd1ed29102ede192f50fcf990df33e8408ca6eca0299c855733382d2c55\",\"dweb:/ipfs/QmYYAx5wd19HKJcak5dDbiWLZV3gs5wapr4ezgWP9CyH9v\"]},\"src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]},\"src/interfaces/IDAIPermit.sol\":{\"keccak256\":\"0x089a4157ad58d4568cb7084836f9ee0280c01616b0cd15158d6deb93be754e8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8af89edc0f453dff61e4b67bc3188f090ba0e858f5f13723e526a8cb8a165535\",\"dweb:/ipfs/QmRVFHVFZg7fWhYdWdDD3JZHiWREHz5JiLEyDq7NYhQDfn\"]},\"src/interfaces/IERC1271.sol\":{\"keccak256\":\"0x96f516510d08da5b1d05d81b0bd88af6f9928bb757ba55c27e203654dfcd4fa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0942604688c369aed50905d7cef2ece68e1ff457c95a14c9f913babac29a09a\",\"dweb:/ipfs/Qmf4ZBYCKqQHfnACciz8GEMhwxPw7mhQ6fjGXwpgr8CQF8\"]},\"src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xbab1c35f0a63761be6b50a9a2ce2459b63f09587dd9c6ac46955252a1a04f43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225dca1a3d91c0737fe75c72bfecae391fc2e7b2eb2ebe1a154bfb16a7527972\",\"dweb:/ipfs/QmdGQdUCANKZ6S23TyHDtBnGvr6CtyyqNNcziVTjEHJ5rk\"]},\"src/libraries/Allowance.sol\":{\"keccak256\":\"0x65ee20fb1a77d4e25dff2feb84027ff9096b065b6fc064c80f9eee49f1f9d498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f65d62fc64a55b6e3aad9932959ab3f47d701c45f95622215aca0ba076f1a7d\",\"dweb:/ipfs/QmZjDb4Nq9pssFefg8X9bwJNJ4RJEPD8vCaFR2Ur2N4boD\"]},\"src/libraries/Permit2Lib.sol\":{\"keccak256\":\"0xb4b43b66b86022079d6701eadfbd3083809d04d92fde97b7ab773a3044189699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c100571683eb9227b64e05d591ebaf6424ed005b85b1cbe20444bf277354e6\",\"dweb:/ipfs/QmfGs9DpZhNZd7MAreg2xrtWHcTEYvpzy2AFgLLYDcS3x5\"]},\"src/libraries/PermitHash.sol\":{\"keccak256\":\"0x54af80d9c3193934c6947c31f59b8f3d7918f83676fe92ed6136593ad591d478\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5264001770be2cdeb7651e4d22af7edbc4e16da6d38747efeb4f54b5472ca5c5\",\"dweb:/ipfs/QmPvwau7DXw6stGQ14hpyTeLdYDYrrrdMnUfkQTPpMXQxz\"]},\"src/libraries/SafeCast160.sol\":{\"keccak256\":\"0x8a34e2beac108d74f89510c949983212b5f09307a93ee9e17a9d50e93f6bc8e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://828697f9567ce617c5c1c8f76b6bcd250e93aea2c4f3ee188be6dff8443c19e7\",\"dweb:/ipfs/QmafxeSPhUc9gGtNDLAw26oZooC5XNLhDMxHxYhJxL5Nwi\"]},\"src/libraries/SignatureVerification.sol\":{\"keccak256\":\"0x99f437ffe99aa1ff7885aec8b971f48efac00c6ebc59c02eec78c9ca850a5e30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9365414bdb67813d4ef6c89fa152dff05fc2a64992a1a4f212fa414dbdee3eab\",\"dweb:/ipfs/QmfJxSszF1rjmMoNXW5oQMo9gARMHAXYTu68fkZvdEu58i\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Permit2Lib.sol:Permit2Lib\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 12:\"src/libraries/Permit2Lib.sol\"\nobject \"Permit2Lib_2276\" {\n    code {\n        {\n            /// @src 12:472:6475  \"library Permit2Lib {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Permit2Lib_2276_deployed\")\n            codecopy(_1, dataoffset(\"Permit2Lib_2276_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 12:\"src/libraries/Permit2Lib.sol\"\n    object \"Permit2Lib_2276_deployed\" {\n        code {\n            {\n                /// @src 12:472:6475  \"library Permit2Lib {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000811000a\"\n    }\n}\n","hash":"01000007d6f44c7b2403755aeb1144015c541833655137c19b78703170be1705","factoryDependencies":{}}},"src/libraries/PermitHash.sol":{"PermitHash":{"abi":[{"inputs":[],"name":"_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_PERMIT_BATCH_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_PERMIT_DETAILS_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_PERMIT_SINGLE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_PERMIT_TRANSFER_FROM_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_TOKEN_PERMISSIONS_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_TOKEN_PERMISSIONS_TYPESTRING","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_BATCH_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_DETAILS_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_SINGLE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_TRANSFER_FROM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_TOKEN_PERMISSIONS_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_TOKEN_PERMISSIONS_TYPESTRING\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/PermitHash.sol\":\"PermitHash\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x14cf8839107a3b30fbd02e92b1506d8ee25a002b6d1dd37ff2745b2adbaf4f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb1a740ae82ee2f704135927e817780971356b41288e6b044c43ac9e3cb8e97d\",\"dweb:/ipfs/Qmbi1ZZREFLnNyAfpvPpgRYYdxCTemqTr5krfX6ufVA7D2\"]},\"src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xbab1c35f0a63761be6b50a9a2ce2459b63f09587dd9c6ac46955252a1a04f43c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225dca1a3d91c0737fe75c72bfecae391fc2e7b2eb2ebe1a154bfb16a7527972\",\"dweb:/ipfs/QmdGQdUCANKZ6S23TyHDtBnGvr6CtyyqNNcziVTjEHJ5rk\"]},\"src/libraries/PermitHash.sol\":{\"keccak256\":\"0x54af80d9c3193934c6947c31f59b8f3d7918f83676fe92ed6136593ad591d478\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5264001770be2cdeb7651e4d22af7edbc4e16da6d38747efeb4f54b5472ca5c5\",\"dweb:/ipfs/QmPvwau7DXw6stGQ14hpyTeLdYDYrrrdMnUfkQTPpMXQxz\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"PermitHash.sol:PermitHash\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[1]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tld\tr2, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.le\t@.BB0_6\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.le\t@.BB0_12\n\tsub.s!\t@CPI0_4[0], r2, r3\n\tjump.eq\t@.BB0_29\n\tsub.s!\t@CPI0_5[0], r2, r3\n\tjump.eq\t@.BB0_31\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_6:\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.gt\t@.BB0_9\n\tsub.s!\t@CPI0_12[0], r2, r3\n\tjump.eq\t@.BB0_17\n\tsub.s!\t@CPI0_13[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tsub.s!\t@CPI0_7[0], r2, r3\n\tjump.eq\t@.BB0_25\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t288, r0, r1\n\tst.1\t64, r1\n\tadd\t100, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tst.1\t160, r1\n\tadd\t@CPI0_24[0], r0, r1\n\tst.1\t192, r1\n\tadd\t@CPI0_25[0], r0, r1\n\tst.1\t224, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tst.1\t256, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.eq\t@.BB0_21\n\tsub.s!\t@CPI0_11[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_29:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t288, r0, r1\n\tst.1\t64, r1\n\tadd\t107, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t160, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tst.1\t192, r1\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t224, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.1\t256, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_17:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_25:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_21:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_29[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_31:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tsub.s!\t0, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_14[0], r1, r1\n\tsub.s!\t0, r1, r4\n\tadd.le\t0, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_32\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_32:\n\tadd\t224, r0, r1\n\tst.1\t64, r1\n\tadd\t46, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t160, r1\n\tadd\t@CPI0_18[0], r0, r1\n\tst.1\t192, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub.s!\t0, r3, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 2029086767\nCPI0_3:\n\t.cell 2428236530\nCPI0_4:\n\t.cell 2428236531\nCPI0_5:\n\t.cell 3234331262\nCPI0_6:\n\t.cell 3319746307\nCPI0_7:\n\t.cell 2029086768\nCPI0_8:\n\t.cell 2226712507\nCPI0_9:\n\t.cell 1661125582\nCPI0_10:\n\t.cell 1661125583\nCPI0_11:\n\t.cell 1850681205\nCPI0_12:\n\t.cell 1052293373\nCPI0_13:\n\t.cell 1096718381\nCPI0_14:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_15:\n\t.cell -5646644308650304633673671418074907635221534582828668243198505864732812971056\nCPI0_16:\n\t.cell 2535301202817642044428229017600\nCPI0_17:\n\t.cell 38191140526615922450185405329057353309260210930448198193721879608147280014453\nCPI0_18:\n\t.cell 47688004234545971921921531354247994188679444927620861891776926922389843869696\nCPI0_19:\n\t.cell 36364269189027265657849793126811529603360992855128991335683039462307780175956\nCPI0_20:\n\t.cell 50396478879115731667501023508898187513284017248092665020259100045602556503154\nCPI0_21:\n\t.cell 45887579695064744350438288568983904622698081512668883793020143111986962772533\nCPI0_22:\n\t.cell 24482125837415189826193954846931915305796936482980204944253573417775359066112\nCPI0_23:\n\t.cell 36364269189027299453766588957930272399916463196798095343972910781529072168528\nCPI0_24:\n\t.cell 45885773405599232487416464989104885674915664378852087144662249645329268043877\nCPI0_25:\n\t.cell 49931798205134128319682575132504678990741255784315358791419842096215747552364\nCPI0_26:\n\t.cell 47687900540987272257023881420742124550618237578713499480529411956393262448640\nCPI0_27:\n\t.cell -49026240159818504903981134379649553742198394140906139455299181134923405197050\nCPI0_28:\n\t.cell 45857498783384407395167267217892383872014237107069511176979320835266024519288\nCPI0_29:\n\t.cell -36589544825516650377272014101759310010242838561916272753120378930030039529373\nCPI0_30:\n\t.cell 44106415275352249113444967718141186665599676077178725771330103259701384644257\nCPI0_31:\n\t.cell -1379249444374983727103743338131876140780887249151639403762952341926609438874\n","bytecode":{"object":"00020000000000020001000000000002000100000001035500000060011002700000004a0010019d0000008001000039000000400010043f00000001012001900000002a0000c13d0000000001000031000000040210008c000000f20000413d0000000102000367000000000202043b000000e0022002700000004c0320009c000000320000a13d0000004d0320009c000000490000a13d0000004e0320009c0000008a0000613d0000004f0320009c000000e50000613d000000500220009c000000f20000c13d000000040110008a0000005802000041000000000310004c000000000300001900000000030240190000005801100197000000000410004c000000000200a019000000580110009c00000000010300190000000001026019000000000110004c000000f20000c13d0000005901000041000000800010043f0000005a01000041000001220001042e0000000001000416000000000110004c000000f20000c13d0000002001000039000001000010044300000120000004430000004b01000041000001220001042e000000530320009c000000750000213d000000560320009c000000b20000613d000000570220009c000000f20000c13d000000040110008a0000005802000041000000000310004c000000000300001900000000030240190000005801100197000000000410004c000000000200a019000000580110009c00000000010300190000000001026019000000000110004c000000f20000c13d0000006801000041000000800010043f0000005a01000041000001220001042e000000510320009c000000c30000613d000000520220009c000000f20000c13d000000040110008a0000005802000041000000000310004c000000000300001900000000030240190000005801100197000000000410004c000000000200a019000000580110009c00000000010300190000000001026019000000000110004c000000f20000c13d0000012001000039000000400010043f0000006401000039000000800010043f0000006101000041000000a00010043f0000006201000041000000c00010043f0000006301000041000000e00010043f0000006401000041000001000010043f000000400100043d000100000001001d00000080020000390121010b0000040f000000010400002900000000014100490000004a020000410000004a0310009c00000000010280190000004a0340009c000000000204401900000040022002100000006001100210000000000121019f000001220001042e000000540320009c000000d40000613d000000550220009c000000f20000c13d000000040110008a0000005802000041000000000310004c000000000300001900000000030240190000005801100197000000000410004c000000000200a019000000580110009c00000000010300190000000001026019000000000110004c000000f20000c13d0000006601000041000000800010043f0000005a01000041000001220001042e000000040110008a0000005802000041000000000310004c000000000300001900000000030240190000005801100197000000000410004c000000000200a019000000580110009c00000000010300190000000001026019000000000110004c000000f20000c13d0000012001000039000000400010043f0000006b01000039000000800010043f0000005d01000041000000a00010043f0000005e01000041000000c00010043f0000005f01000041000000e00010043f0000006001000041000001000010043f000000400100043d000100000001001d00000080020000390121010b0000040f000000010400002900000000014100490000004a020000410000004a0310009c00000000010280190000004a0340009c000000000204401900000040022002100000006001100210000000000121019f000001220001042e000000040110008a0000005802000041000000000310004c000000000300001900000000030240190000005801100197000000000410004c000000000200a019000000580110009c00000000010300190000000001026019000000000110004c000000f20000c13d0000006901000041000000800010043f0000005a01000041000001220001042e000000040110008a0000005802000041000000000310004c000000000300001900000000030240190000005801100197000000000410004c000000000200a019000000580110009c00000000010300190000000001026019000000000110004c000000f20000c13d0000006501000041000000800010043f0000005a01000041000001220001042e000000040110008a0000005802000041000000000310004c000000000300001900000000030240190000005801100197000000000410004c000000000200a019000000580110009c00000000010300190000000001026019000000000110004c000000f20000c13d0000006701000041000000800010043f0000005a01000041000001220001042e000000040110008a0000005802000041000000000310004c000000000300001900000000030240190000005801100197000000000410004c000000000200a019000000580110009c00000000010300190000000001026019000000000110004c000000f40000613d00000000010000190000012300010430000000e001000039000000400010043f0000002e01000039000000800010043f0000005b01000041000000a00010043f0000005c01000041000000c00010043f000000400100043d000100000001001d00000080020000390121010b0000040f000000010400002900000000014100490000004a020000410000004a0310009c00000000010280190000004a0340009c000000000204401900000040022002100000006001100210000000000121019f000001220001042e00000020030000390000000004310436000000000302043300000000003404350000004001100039000000000430004c0000011a0000613d000000000400001900000000054100190000002004400039000000000624001900000000060604330000000000650435000000000534004b000001130000413d000000000231001900000000000204350000001f02300039000000200300008a000000000232016f0000000001210019000000000001042d0000012100000432000001220001042e0000012300010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000078f1682f0000000000000000000000000000000000000000000000000000000090bbf2f20000000000000000000000000000000000000000000000000000000090bbf2f300000000000000000000000000000000000000000000000000000000c0c7fa7e00000000000000000000000000000000000000000000000000000000c5df4f030000000000000000000000000000000000000000000000000000000078f168300000000000000000000000000000000000000000000000000000000084b8efbb000000000000000000000000000000000000000000000000000000006302c3ce000000000000000000000000000000000000000000000000000000006302c3cf000000000000000000000000000000000000000000000000000000006e4f2775000000000000000000000000000000000000000000000000000000003eb8b8fd00000000000000000000000000000000000000000000000000000000415e982d8000000000000000000000000000000000000000000000000000000000000000f3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d00000000000000000000000000000000000000020000000800000000000000000546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74290000000000000000000000000000000000005065726d697442617463685769746e6573735472616e7366657246726f6d28546f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c0000000000000000000000000000000000000000005065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5065726d697373696f6e73207065726d69747465642c61646472657373207370656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c00000000000000000000000000000000000000000000000000000000939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d8010665626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678af1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1fcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7660000000000000000000000000000000000000000000000000000000000000000"},"methodIdentifiers":{"_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH()":"3eb8b8fd","_PERMIT_BATCH_TYPEHASH()":"6302c3cf","_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB()":"90bbf2f3","_PERMIT_DETAILS_TYPEHASH()":"6e4f2775","_PERMIT_SINGLE_TYPEHASH()":"c5df4f03","_PERMIT_TRANSFER_FROM_TYPEHASH()":"78f16830","_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB()":"84b8efbb","_TOKEN_PERMISSIONS_TYPEHASH()":"415e982d","_TOKEN_PERMISSIONS_TYPESTRING()":"c0c7fa7e"}},"irOptimized":"/// @use-src 13:\"src/libraries/PermitHash.sol\"\nobject \"PermitHash_2676\" {\n    code {\n        {\n            /// @src 13:205:5770  \"library PermitHash {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"PermitHash_2676_deployed\")\n            codecopy(_1, dataoffset(\"PermitHash_2676_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 13:\"src/libraries/PermitHash.sol\"\n    object \"PermitHash_2676_deployed\" {\n        code {\n            {\n                /// @src 13:205:5770  \"library PermitHash {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x3eb8b8fd {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        mstore(_1, /** @src 13:1254:1427  \"keccak256(...\" */ 0xfcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b766)\n                        /// @src 13:205:5770  \"library PermitHash {...\"\n                        return(_1, 32)\n                    }\n                    case 0x415e982d {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos := mload(_2)\n                        mstore(memPos, /** @src 13:895:954  \"keccak256(\\\"TokenPermissions(address token,uint256 amount)\\\")\" */ 0x618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1)\n                        /// @src 13:205:5770  \"library PermitHash {...\"\n                        return(memPos, 32)\n                    }\n                    case 0x6302c3cf {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, /** @src 13:661:834  \"keccak256(...\" */ 0xaf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f79440863)\n                        /// @src 13:205:5770  \"library PermitHash {...\"\n                        return(memPos_1, 32)\n                    }\n                    case 0x6e4f2775 {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, /** @src 13:289:376  \"keccak256(\\\"PermitDetails(address token,uint160 amount,uint48 expiration,uint48 nonce)\\\")\" */ 0x65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678)\n                        /// @src 13:205:5770  \"library PermitHash {...\"\n                        return(memPos_2, 32)\n                    }\n                    case 0x78f16830 {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, /** @src 13:1018:1184  \"keccak256(...\" */ 0x939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d80106)\n                        /// @src 13:205:5770  \"library PermitHash {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x84b8efbb {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPtr := mload(_2)\n                        let newFreePtr := add(memPtr, 160)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        mstore(memPtr, 100)\n                        mstore(add(memPtr, 32), \"PermitWitnessTransferFrom(TokenP\")\n                        mstore(add(memPtr, _2), \"ermissions permitted,address spe\")\n                        mstore(add(memPtr, 96), \"nder,uint256 nonce,uint256 deadl\")\n                        mstore(add(memPtr, 128), \"ine,\")\n                        let memPos_4 := mload(_2)\n                        return(memPos_4, sub(abi_encode_string(memPos_4, memPtr), memPos_4))\n                    }\n                    case 0x90bbf2f3 {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPtr_1 := mload(_2)\n                        let newFreePtr_1 := add(memPtr_1, 160)\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        mstore(memPtr_1, 107)\n                        mstore(add(memPtr_1, 32), \"PermitBatchWitnessTransferFrom(T\")\n                        mstore(add(memPtr_1, _2), \"okenPermissions[] permitted,addr\")\n                        mstore(add(memPtr_1, 96), \"ess spender,uint256 nonce,uint25\")\n                        mstore(add(memPtr_1, 128), \"6 deadline,\")\n                        let memPos_5 := mload(_2)\n                        return(memPos_5, sub(abi_encode_string(memPos_5, memPtr_1), memPos_5))\n                    }\n                    case 0xc0c7fa7e {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPtr_2 := mload(_2)\n                        let newFreePtr_2 := add(memPtr_2, 96)\n                        if or(gt(newFreePtr_2, 0xffffffffffffffff), lt(newFreePtr_2, memPtr_2))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        mstore(_2, newFreePtr_2)\n                        mstore(memPtr_2, 46)\n                        mstore(add(memPtr_2, 32), \"TokenPermissions(address token,u\")\n                        mstore(add(memPtr_2, _2), \"int256 amount)\")\n                        let memPos_6 := mload(_2)\n                        return(memPos_6, sub(abi_encode_string(memPos_6, memPtr_2), memPos_6))\n                    }\n                    case 0xc5df4f03 {\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, /** @src 13:433:605  \"keccak256(...\" */ 0xf3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d0)\n                        /// @src 13:205:5770  \"library PermitHash {...\"\n                        return(memPos_7, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000811000a\"\n    }\n}\n","hash":"0100006ba1ee3adf02fdd5cc8dbbc813d476119be9fac8fc92255795df7a3161","factoryDependencies":{}}},"src/libraries/SafeCast160.sol":{"SafeCast160":{"abi":[{"inputs":[],"name":"UnsafeCast","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"UnsafeCast\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"UnsafeCast()\":[{\"notice\":\"Thrown when a valude greater than type(uint160).max is cast to uint160\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/SafeCast160.sol\":\"SafeCast160\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/libraries/SafeCast160.sol\":{\"keccak256\":\"0x8a34e2beac108d74f89510c949983212b5f09307a93ee9e17a9d50e93f6bc8e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://828697f9567ce617c5c1c8f76b6bcd250e93aea2c4f3ee188be6dff8443c19e7\",\"dweb:/ipfs/QmafxeSPhUc9gGtNDLAw26oZooC5XNLhDMxHxYhJxL5Nwi\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeCast160.sol:SafeCast160\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 14:\"src/libraries/SafeCast160.sol\"\nobject \"SafeCast160_2707\" {\n    code {\n        {\n            /// @src 14:58:454  \"library SafeCast160 {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeCast160_2707_deployed\")\n            codecopy(_1, dataoffset(\"SafeCast160_2707_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 14:\"src/libraries/SafeCast160.sol\"\n    object \"SafeCast160_2707_deployed\" {\n        code {\n            {\n                /// @src 14:58:454  \"library SafeCast160 {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000811000a\"\n    }\n}\n","hash":"01000007d6f44c7b2403755aeb1144015c541833655137c19b78703170be1705","factoryDependencies":{}}},"src/libraries/SignatureVerification.sol":{"SignatureVerification":{"abi":[{"inputs":[],"name":"InvalidContractSignature","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"InvalidSignatureLength","type":"error"},{"inputs":[],"name":"InvalidSigner","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidContractSignature()\":[{\"notice\":\"Thrown when the recovered contract signature is incorrect\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when the recovered signer is equal to the zero address\"}],\"InvalidSignatureLength()\":[{\"notice\":\"Thrown when the passed in signature is not a valid length\"}],\"InvalidSigner()\":[{\"notice\":\"Thrown when the recovered signer does not equal the claimedSigner\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/SignatureVerification.sol\":\"SignatureVerification\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/interfaces/IERC1271.sol\":{\"keccak256\":\"0x96f516510d08da5b1d05d81b0bd88af6f9928bb757ba55c27e203654dfcd4fa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0942604688c369aed50905d7cef2ece68e1ff457c95a14c9f913babac29a09a\",\"dweb:/ipfs/Qmf4ZBYCKqQHfnACciz8GEMhwxPw7mhQ6fjGXwpgr8CQF8\"]},\"src/libraries/SignatureVerification.sol\":{\"keccak256\":\"0x99f437ffe99aa1ff7885aec8b971f48efac00c6ebc59c02eec78c9ca850a5e30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9365414bdb67813d4ef6c89fa152dff05fc2a64992a1a4f212fa414dbdee3eab\",\"dweb:/ipfs/QmfJxSszF1rjmMoNXW5oQMo9gARMHAXYTu68fkZvdEu58i\"]}},\"version\":1}","zk_version":"1.3.10"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignatureVerification.sol:SignatureVerification\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000110004c0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 15:\"src/libraries/SignatureVerification.sol\"\nobject \"SignatureVerification_2876\" {\n    code {\n        {\n            /// @src 15:112:1811  \"library SignatureVerification {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SignatureVerification_2876_deployed\")\n            codecopy(_1, dataoffset(\"SignatureVerification_2876_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"src/libraries/SignatureVerification.sol\"\n    object \"SignatureVerification_2876_deployed\" {\n        code {\n            {\n                /// @src 15:112:1811  \"library SignatureVerification {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000811000a\"\n    }\n}\n","hash":"01000007d6f44c7b2403755aeb1144015c541833655137c19b78703170be1705","factoryDependencies":{}}}}}}